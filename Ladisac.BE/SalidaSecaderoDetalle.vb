'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(SalidaSecadero))>
<KnownType(GetType(Produccion))>
Partial Public Class SalidaSecaderoDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DSE_ID As string = "DSE_ID"
				public shared SSE_ID As string = "SSE_ID"
				public shared PRO_ID As string = "PRO_ID"
				public shared DSE_CANTIDAD_VAGON As string = "DSE_CANTIDAD_VAGON"
				public shared DSE_LADRILLOS_X_VAGON As string = "DSE_LADRILLOS_X_VAGON"
				public shared DSE_CANTIDAD_FALTANTE As string = "DSE_CANTIDAD_FALTANTE"
				public shared DSE_CANTIDAD_RECICLADO_SECADERO As string = "DSE_CANTIDAD_RECICLADO_SECADERO"
				public shared DSE_CANTIDAD_RECICLADO_CARGA As string = "DSE_CANTIDAD_RECICLADO_CARGA"
				public shared DSE_PESO_PROMEDIO As string = "DSE_PESO_PROMEDIO"
				public shared DSE_FIN_DESCARGA As string = "DSE_FIN_DESCARGA"
				public shared DSE_OBSERVACION As string = "DSE_OBSERVACION"
		    End Structure
	



    <DataMember()>
    Public Property DSE_ID() As Integer
        Get
            Return _dSE_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dSE_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DSE_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dSE_ID = value
                OnPropertyChanged("DSE_ID")
            End If
        End Set
    End Property

    Private _dSE_ID As Integer

    <DataMember()>
    Public Property SSE_ID() As Nullable(Of Integer)
        Get
            Return _sSE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_sSE_ID, value) Then
                ChangeTracker.RecordOriginalValue("SSE_ID", _sSE_ID)
                If Not IsDeserializing Then
                    If SalidaSecadero IsNot Nothing AndAlso Not Equals(SalidaSecadero.SSE_ID, value) Then
                        SalidaSecadero = Nothing
                    End If
                End If
                _sSE_ID = value
                OnPropertyChanged("SSE_ID")
            End If
        End Set
    End Property

    Private _sSE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PRO_ID() As Nullable(Of Integer)
        Get
            Return _pRO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pRO_ID, value) Then
                ChangeTracker.RecordOriginalValue("PRO_ID", _pRO_ID)
                If Not IsDeserializing Then
                    If Produccion IsNot Nothing AndAlso Not Equals(Produccion.PRO_ID, value) Then
                        Produccion = Nothing
                    End If
                End If
                _pRO_ID = value
                OnPropertyChanged("PRO_ID")
            End If
        End Set
    End Property

    Private _pRO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_CANTIDAD_VAGON() As Nullable(Of Integer)
        Get
            Return _dSE_CANTIDAD_VAGON
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dSE_CANTIDAD_VAGON, value) Then
                _dSE_CANTIDAD_VAGON = value
                OnPropertyChanged("DSE_CANTIDAD_VAGON")
            End If
        End Set
    End Property

    Private _dSE_CANTIDAD_VAGON As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_LADRILLOS_X_VAGON() As Nullable(Of Integer)
        Get
            Return _dSE_LADRILLOS_X_VAGON
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dSE_LADRILLOS_X_VAGON, value) Then
                _dSE_LADRILLOS_X_VAGON = value
                OnPropertyChanged("DSE_LADRILLOS_X_VAGON")
            End If
        End Set
    End Property

    Private _dSE_LADRILLOS_X_VAGON As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_CANTIDAD_FALTANTE() As Nullable(Of Integer)
        Get
            Return _dSE_CANTIDAD_FALTANTE
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dSE_CANTIDAD_FALTANTE, value) Then
                _dSE_CANTIDAD_FALTANTE = value
                OnPropertyChanged("DSE_CANTIDAD_FALTANTE")
            End If
        End Set
    End Property

    Private _dSE_CANTIDAD_FALTANTE As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_CANTIDAD_RECICLADO_SECADERO() As Nullable(Of Integer)
        Get
            Return _dSE_CANTIDAD_RECICLADO_SECADERO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dSE_CANTIDAD_RECICLADO_SECADERO, value) Then
                _dSE_CANTIDAD_RECICLADO_SECADERO = value
                OnPropertyChanged("DSE_CANTIDAD_RECICLADO_SECADERO")
            End If
        End Set
    End Property

    Private _dSE_CANTIDAD_RECICLADO_SECADERO As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_CANTIDAD_RECICLADO_CARGA() As Nullable(Of Integer)
        Get
            Return _dSE_CANTIDAD_RECICLADO_CARGA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dSE_CANTIDAD_RECICLADO_CARGA, value) Then
                _dSE_CANTIDAD_RECICLADO_CARGA = value
                OnPropertyChanged("DSE_CANTIDAD_RECICLADO_CARGA")
            End If
        End Set
    End Property

    Private _dSE_CANTIDAD_RECICLADO_CARGA As Nullable(Of Integer)

    <DataMember()>
    Public Property DSE_PESO_PROMEDIO() As Nullable(Of Decimal)
        Get
            Return _dSE_PESO_PROMEDIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dSE_PESO_PROMEDIO, value) Then
                _dSE_PESO_PROMEDIO = value
                OnPropertyChanged("DSE_PESO_PROMEDIO")
            End If
        End Set
    End Property

    Private _dSE_PESO_PROMEDIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property DSE_FIN_DESCARGA() As Nullable(Of Boolean)
        Get
            Return _dSE_FIN_DESCARGA
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dSE_FIN_DESCARGA, value) Then
                _dSE_FIN_DESCARGA = value
                OnPropertyChanged("DSE_FIN_DESCARGA")
            End If
        End Set
    End Property

    Private _dSE_FIN_DESCARGA As Nullable(Of Boolean)

    <DataMember()>
    Public Property DSE_OBSERVACION() As String
        Get
            Return _dSE_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_dSE_OBSERVACION, value) Then
                _dSE_OBSERVACION = value
                OnPropertyChanged("DSE_OBSERVACION")
            End If
        End Set
    End Property

    Private _dSE_OBSERVACION As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property SalidaSecadero() As SalidaSecadero
        Get
            Return _salidaSecadero
        End Get
        Set(ByVal value As SalidaSecadero)
            If _salidaSecadero IsNot value Then
                Dim previousValue As SalidaSecadero = _salidaSecadero
                _salidaSecadero = value
                FixupSalidaSecadero(previousValue)
                OnNavigationPropertyChanged("SalidaSecadero")
            End If
        End Set
    End Property

    Private _salidaSecadero As SalidaSecadero


    <DataMember()>
    Public Property Produccion() As Produccion
        Get
            Return _produccion
        End Get
        Set(ByVal value As Produccion)
            If _produccion IsNot value Then
                Dim previousValue As Produccion = _produccion
                _produccion = value
                FixupProduccion(previousValue)
                OnNavigationPropertyChanged("Produccion")
            End If
        End Set
    End Property

    Private _produccion As Produccion


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        SalidaSecadero = Nothing
        Produccion = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupSalidaSecadero(ByVal previousValue As SalidaSecadero, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.SalidaSecaderoDetalle.Contains(Me) Then
            previousValue.SalidaSecaderoDetalle.Remove(Me)
        End If

        If SalidaSecadero IsNot Nothing Then
            If Not SalidaSecadero.SalidaSecaderoDetalle.Contains(Me) Then
                SalidaSecadero.SalidaSecaderoDetalle.Add(Me)
            End If

            SSE_ID = SalidaSecadero.SSE_ID
        ElseIf Not skipKeys Then
            SSE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("SalidaSecadero") AndAlso
                ChangeTracker.OriginalValues("SalidaSecadero") Is SalidaSecadero Then
                ChangeTracker.OriginalValues.Remove("SalidaSecadero")
            Else
                ChangeTracker.RecordOriginalValue("SalidaSecadero", previousValue)
            End If
            If SalidaSecadero IsNot Nothing AndAlso Not SalidaSecadero.ChangeTracker.ChangeTrackingEnabled Then
                SalidaSecadero.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupProduccion(ByVal previousValue As Produccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Produccion IsNot Nothing Then
            PRO_ID = Produccion.PRO_ID
        ElseIf Not skipKeys Then
            PRO_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Produccion") AndAlso
                ChangeTracker.OriginalValues("Produccion") Is Produccion Then
                ChangeTracker.OriginalValues.Remove("Produccion")
            Else
                ChangeTracker.RecordOriginalValue("Produccion", previousValue)
            End If
            If Produccion IsNot Nothing AndAlso Not Produccion.ChangeTracker.ChangeTrackingEnabled Then
                Produccion.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
