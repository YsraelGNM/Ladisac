'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Almacen))>
<KnownType(GetType(Articulos))>
<KnownType(GetType(DetalleTipoDocumentos))>
<KnownType(GetType(Moneda))>
<KnownType(GetType(Personas))>
<KnownType(GetType(DocuMovimientoDetalle))>
Partial Public Class RendicionCuentaDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared RCD_ID As string = "RCD_ID"
				public shared REC_ID As string = "REC_ID"
				public shared PCD_ID As string = "PCD_ID"
				public shared TDO_ID As string = "TDO_ID"
				public shared DTD_ID As string = "DTD_ID"
				public shared CCT_ID As string = "CCT_ID"
				public shared MON_ID As string = "MON_ID"
				public shared RCD_TIPO_CAMBIO As string = "RCD_TIPO_CAMBIO"
				public shared RCD_NUMERO_DOC As string = "RCD_NUMERO_DOC"
				public shared RCD_FECHA As string = "RCD_FECHA"
				public shared ART_ID As string = "ART_ID"
				public shared ALM_ID As string = "ALM_ID"
				public shared PER_ID_PROVEEDOR As string = "PER_ID_PROVEEDOR"
				public shared RCD_CANTIDAD As string = "RCD_CANTIDAD"
				public shared RCD_PU As string = "RCD_PU"
				public shared RCD_OBSERVACION As string = "RCD_OBSERVACION"
				public shared DMD_ID As string = "DMD_ID"
				public shared RCD_SERIE_DOC As string = "RCD_SERIE_DOC"
		    End Structure
	



    <DataMember()>
    Public Property RCD_ID() As Integer
        Get
            Return _rCD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_rCD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'RCD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _rCD_ID = value
                OnPropertyChanged("RCD_ID")
            End If
        End Set
    End Property

    Private _rCD_ID As Integer

    <DataMember()>
    Public Property REC_ID() As Nullable(Of Integer)
        Get
            Return _rEC_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rEC_ID, value) Then
                ChangeTracker.RecordOriginalValue("REC_ID", _rEC_ID)
                _rEC_ID = value
                OnPropertyChanged("REC_ID")
            End If
        End Set
    End Property

    Private _rEC_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PCD_ID() As Nullable(Of Integer)
        Get
            Return _pCD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pCD_ID, value) Then
                ChangeTracker.RecordOriginalValue("PCD_ID", _pCD_ID)
                _pCD_ID = value
                OnPropertyChanged("PCD_ID")
            End If
        End Set
    End Property

    Private _pCD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property TDO_ID() As String
        Get
            Return _tDO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID, value) Then
                _tDO_ID = value
                OnPropertyChanged("TDO_ID")
            End If
        End Set
    End Property

    Private _tDO_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                ChangeTracker.RecordOriginalValue("DTD_ID", _dTD_ID)
                If Not IsDeserializing Then
                    If DetalleTipoDocumentos IsNot Nothing AndAlso Not Equals(DetalleTipoDocumentos.DTD_ID, value) Then
                        DetalleTipoDocumentos = Nothing
                    End If
                End If
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

    <DataMember()>
    Public Property CCT_ID() As String
        Get
            Return _cCT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_ID, value) Then
                _cCT_ID = value
                OnPropertyChanged("CCT_ID")
            End If
        End Set
    End Property

    Private _cCT_ID As String

    <DataMember()>
    Public Property MON_ID() As String
        Get
            Return _mON_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_mON_ID, value) Then
                ChangeTracker.RecordOriginalValue("MON_ID", _mON_ID)
                If Not IsDeserializing Then
                    If Moneda IsNot Nothing AndAlso Not Equals(Moneda.MON_ID, value) Then
                        Moneda = Nothing
                    End If
                End If
                _mON_ID = value
                OnPropertyChanged("MON_ID")
            End If
        End Set
    End Property

    Private _mON_ID As String

    <DataMember()>
    Public Property RCD_TIPO_CAMBIO() As Nullable(Of Decimal)
        Get
            Return _rCD_TIPO_CAMBIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rCD_TIPO_CAMBIO, value) Then
                _rCD_TIPO_CAMBIO = value
                OnPropertyChanged("RCD_TIPO_CAMBIO")
            End If
        End Set
    End Property

    Private _rCD_TIPO_CAMBIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property RCD_NUMERO_DOC() As String
        Get
            Return _rCD_NUMERO_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_rCD_NUMERO_DOC, value) Then
                _rCD_NUMERO_DOC = value
                OnPropertyChanged("RCD_NUMERO_DOC")
            End If
        End Set
    End Property

    Private _rCD_NUMERO_DOC As String

    <DataMember()>
    Public Property RCD_FECHA() As Nullable(Of Date)
        Get
            Return _rCD_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rCD_FECHA, value) Then
                _rCD_FECHA = value
                OnPropertyChanged("RCD_FECHA")
            End If
        End Set
    End Property

    Private _rCD_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property ALM_ID() As Nullable(Of Integer)
        Get
            Return _aLM_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_aLM_ID, value) Then
                ChangeTracker.RecordOriginalValue("ALM_ID", _aLM_ID)
                If Not IsDeserializing Then
                    If Almacen IsNot Nothing AndAlso Not Equals(Almacen.ALM_ID, value) Then
                        Almacen = Nothing
                    End If
                End If
                _aLM_ID = value
                OnPropertyChanged("ALM_ID")
            End If
        End Set
    End Property

    Private _aLM_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PER_ID_PROVEEDOR() As String
        Get
            Return _pER_ID_PROVEEDOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_PROVEEDOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_PROVEEDOR", _pER_ID_PROVEEDOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_PROVEEDOR = value
                OnPropertyChanged("PER_ID_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_ID_PROVEEDOR As String

    <DataMember()>
    Public Property RCD_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _rCD_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rCD_CANTIDAD, value) Then
                _rCD_CANTIDAD = value
                OnPropertyChanged("RCD_CANTIDAD")
            End If
        End Set
    End Property

    Private _rCD_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property RCD_PU() As Nullable(Of Decimal)
        Get
            Return _rCD_PU
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rCD_PU, value) Then
                _rCD_PU = value
                OnPropertyChanged("RCD_PU")
            End If
        End Set
    End Property

    Private _rCD_PU As Nullable(Of Decimal)

    <DataMember()>
    Public Property RCD_OBSERVACION() As String
        Get
            Return _rCD_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_rCD_OBSERVACION, value) Then
                _rCD_OBSERVACION = value
                OnPropertyChanged("RCD_OBSERVACION")
            End If
        End Set
    End Property

    Private _rCD_OBSERVACION As String

    <DataMember()>
    Public Property DMD_ID() As Nullable(Of Integer)
        Get
            Return _dMD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dMD_ID, value) Then
                _dMD_ID = value
                OnPropertyChanged("DMD_ID")
            End If
        End Set
    End Property

    Private _dMD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property RCD_SERIE_DOC() As String
        Get
            Return _rCD_SERIE_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_rCD_SERIE_DOC, value) Then
                _rCD_SERIE_DOC = value
                OnPropertyChanged("RCD_SERIE_DOC")
            End If
        End Set
    End Property

    Private _rCD_SERIE_DOC As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Almacen() As Almacen
        Get
            Return _almacen
        End Get
        Set(ByVal value As Almacen)
            If _almacen IsNot value Then
                Dim previousValue As Almacen = _almacen
                _almacen = value
                FixupAlmacen(previousValue)
                OnNavigationPropertyChanged("Almacen")
            End If
        End Set
    End Property

    Private _almacen As Almacen


    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


    <DataMember()>
    Public Property DetalleTipoDocumentos() As DetalleTipoDocumentos
        Get
            Return _detalleTipoDocumentos
        End Get
        Set(ByVal value As DetalleTipoDocumentos)
            If _detalleTipoDocumentos IsNot value Then
                Dim previousValue As DetalleTipoDocumentos = _detalleTipoDocumentos
                _detalleTipoDocumentos = value
                FixupDetalleTipoDocumentos(previousValue)
                OnNavigationPropertyChanged("DetalleTipoDocumentos")
            End If
        End Set
    End Property

    Private _detalleTipoDocumentos As DetalleTipoDocumentos


    <DataMember()>
    Public Property Moneda() As Moneda
        Get
            Return _moneda
        End Get
        Set(ByVal value As Moneda)
            If _moneda IsNot value Then
                Dim previousValue As Moneda = _moneda
                _moneda = value
                FixupMoneda(previousValue)
                OnNavigationPropertyChanged("Moneda")
            End If
        End Set
    End Property

    Private _moneda As Moneda


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property DocuMovimientoDetalle() As TrackableCollection(Of DocuMovimientoDetalle)
        Get
            If _docuMovimientoDetalle Is Nothing Then
                _docuMovimientoDetalle = New TrackableCollection(Of DocuMovimientoDetalle)
                AddHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
            End If
            Return _docuMovimientoDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of DocuMovimientoDetalle))
            If Not Object.ReferenceEquals(_docuMovimientoDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuMovimientoDetalle IsNot Nothing Then
                    RemoveHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
                End If
                _docuMovimientoDetalle = value
                If _docuMovimientoDetalle IsNot Nothing Then
                    AddHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
                End If
                OnNavigationPropertyChanged("DocuMovimientoDetalle")
            End If
        End Set
    End Property

    Private _docuMovimientoDetalle As TrackableCollection(Of DocuMovimientoDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Almacen = Nothing
        Articulos = Nothing
        DetalleTipoDocumentos = Nothing
        Moneda = Nothing
        Personas = Nothing
        DocuMovimientoDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupAlmacen(ByVal previousValue As Almacen, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Almacen IsNot Nothing Then
            ALM_ID = Almacen.ALM_ID
        ElseIf Not skipKeys Then
            ALM_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Almacen") AndAlso
                ChangeTracker.OriginalValues("Almacen") Is Almacen Then
                ChangeTracker.OriginalValues.Remove("Almacen")
            Else
                ChangeTracker.RecordOriginalValue("Almacen", previousValue)
            End If
            If Almacen IsNot Nothing AndAlso Not Almacen.ChangeTracker.ChangeTrackingEnabled Then
                Almacen.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleTipoDocumentos(ByVal previousValue As DetalleTipoDocumentos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If DetalleTipoDocumentos IsNot Nothing Then
            DTD_ID = DetalleTipoDocumentos.DTD_ID
        ElseIf Not skipKeys Then
            DTD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DetalleTipoDocumentos") AndAlso
                ChangeTracker.OriginalValues("DetalleTipoDocumentos") Is DetalleTipoDocumentos Then
                ChangeTracker.OriginalValues.Remove("DetalleTipoDocumentos")
            Else
                ChangeTracker.RecordOriginalValue("DetalleTipoDocumentos", previousValue)
            End If
            If DetalleTipoDocumentos IsNot Nothing AndAlso Not DetalleTipoDocumentos.ChangeTracker.ChangeTrackingEnabled Then
                DetalleTipoDocumentos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupMoneda(ByVal previousValue As Moneda, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Moneda IsNot Nothing Then
            MON_ID = Moneda.MON_ID
        ElseIf Not skipKeys Then
            MON_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Moneda") AndAlso
                ChangeTracker.OriginalValues("Moneda") Is Moneda Then
                ChangeTracker.OriginalValues.Remove("Moneda")
            Else
                ChangeTracker.RecordOriginalValue("Moneda", previousValue)
            End If
            If Moneda IsNot Nothing AndAlso Not Moneda.ChangeTracker.ChangeTrackingEnabled Then
                Moneda.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_PROVEEDOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_PROVEEDOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDocuMovimientoDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuMovimientoDetalle In e.NewItems
                item.RCD_ID = RCD_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuMovimientoDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuMovimientoDetalle In e.OldItems
                item.RCD_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuMovimientoDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
