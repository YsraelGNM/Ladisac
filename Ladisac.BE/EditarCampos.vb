'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
Partial Public Class EditarCampos
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared EDC_USU_ID As string = "EDC_USU_ID"
				public shared PVE_ID As string = "PVE_ID"
				public shared EDC_SERIE As string = "EDC_SERIE"
				public shared EDC_NOMBRE_FORMULARIO As string = "EDC_NOMBRE_FORMULARIO"
				public shared EDC_CAMPO As string = "EDC_CAMPO"
				public shared EDC_EDITAR As string = "EDC_EDITAR"
				public shared USU_ID As string = "USU_ID"
				public shared EDC_FEC_GRAB As string = "EDC_FEC_GRAB"
				public shared EDC_ESTADO As string = "EDC_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property EDC_USU_ID() As String
        Get
            Return _eDC_USU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_eDC_USU_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'EDC_USU_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _eDC_USU_ID = value
                OnPropertyChanged("EDC_USU_ID")
            End If
        End Set
    End Property

    Private _eDC_USU_ID As String

    <DataMember()>
    Public Property PVE_ID() As String
        Get
            Return _pVE_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pVE_ID, value) Then
                _pVE_ID = value
                OnPropertyChanged("PVE_ID")
            End If
        End Set
    End Property

    Private _pVE_ID As String

    <DataMember()>
    Public Property EDC_SERIE() As String
        Get
            Return _eDC_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_eDC_SERIE, value) Then
                _eDC_SERIE = value
                OnPropertyChanged("EDC_SERIE")
            End If
        End Set
    End Property

    Private _eDC_SERIE As String

    <DataMember()>
    Public Property EDC_NOMBRE_FORMULARIO() As String
        Get
            Return _eDC_NOMBRE_FORMULARIO
        End Get
        Set(ByVal value As String)
            If Not Equals(_eDC_NOMBRE_FORMULARIO, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'EDC_NOMBRE_FORMULARIO' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _eDC_NOMBRE_FORMULARIO = value
                OnPropertyChanged("EDC_NOMBRE_FORMULARIO")
            End If
        End Set
    End Property

    Private _eDC_NOMBRE_FORMULARIO As String

    <DataMember()>
    Public Property EDC_CAMPO() As String
        Get
            Return _eDC_CAMPO
        End Get
        Set(ByVal value As String)
            If Not Equals(_eDC_CAMPO, value) Then
                _eDC_CAMPO = value
                OnPropertyChanged("EDC_CAMPO")
            End If
        End Set
    End Property

    Private _eDC_CAMPO As String

    <DataMember()>
    Public Property EDC_EDITAR() As Boolean
        Get
            Return _eDC_EDITAR
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_eDC_EDITAR, value) Then
                _eDC_EDITAR = value
                OnPropertyChanged("EDC_EDITAR")
            End If
        End Set
    End Property

    Private _eDC_EDITAR As Boolean

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property EDC_FEC_GRAB() As Date
        Get
            Return _eDC_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_eDC_FEC_GRAB, value) Then
                _eDC_FEC_GRAB = value
                OnPropertyChanged("EDC_FEC_GRAB")
            End If
        End Set
    End Property

    Private _eDC_FEC_GRAB As Date

    <DataMember()>
    Public Property EDC_ESTADO() As Boolean
        Get
            Return _eDC_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_eDC_ESTADO, value) Then
                _eDC_ESTADO = value
                OnPropertyChanged("EDC_ESTADO")
            End If
        End Set
    End Property

    Private _eDC_ESTADO As Boolean

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
    End Sub

#End Region
End Class
