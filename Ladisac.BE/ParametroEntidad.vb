'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ComponenteInspeccion))>
<KnownType(GetType(EntidadInspeccion))>
<KnownType(GetType(FichaInspeccionDetalle))>
Partial Public Class ParametroEntidad
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PAE_ID As string = "PAE_ID"
				public shared EIN_ID As string = "EIN_ID"
				public shared COM_ID As string = "COM_ID"
				public shared PAE_DESCRIPCION As string = "PAE_DESCRIPCION"
				public shared PAE_AMAINFERIOR As string = "PAE_AMAINFERIOR"
				public shared PAE_VERDE1 As string = "PAE_VERDE1"
				public shared PAE_VERDE2 As string = "PAE_VERDE2"
				public shared PAE_AMASUPERIOR As string = "PAE_AMASUPERIOR"
				public shared USU_ID As string = "USU_ID"
				public shared PAE_FEC_GRAB As string = "PAE_FEC_GRAB"
				public shared PAE_ESTADO As string = "PAE_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property PAE_ID() As Integer
        Get
            Return _pAE_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pAE_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PAE_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pAE_ID = value
                OnPropertyChanged("PAE_ID")
            End If
        End Set
    End Property

    Private _pAE_ID As Integer

    <DataMember()>
    Public Property EIN_ID() As Nullable(Of Integer)
        Get
            Return _eIN_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eIN_ID, value) Then
                ChangeTracker.RecordOriginalValue("EIN_ID", _eIN_ID)
                If Not IsDeserializing Then
                    If EntidadInspeccion IsNot Nothing AndAlso Not Equals(EntidadInspeccion.EIN_ID, value) Then
                        EntidadInspeccion = Nothing
                    End If
                End If
                _eIN_ID = value
                OnPropertyChanged("EIN_ID")
            End If
        End Set
    End Property

    Private _eIN_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property COM_ID() As Nullable(Of Integer)
        Get
            Return _cOM_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cOM_ID, value) Then
                ChangeTracker.RecordOriginalValue("COM_ID", _cOM_ID)
                If Not IsDeserializing Then
                    If ComponenteInspeccion IsNot Nothing AndAlso Not Equals(ComponenteInspeccion.COM_ID, value) Then
                        ComponenteInspeccion = Nothing
                    End If
                End If
                _cOM_ID = value
                OnPropertyChanged("COM_ID")
            End If
        End Set
    End Property

    Private _cOM_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PAE_DESCRIPCION() As String
        Get
            Return _pAE_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pAE_DESCRIPCION, value) Then
                _pAE_DESCRIPCION = value
                OnPropertyChanged("PAE_DESCRIPCION")
            End If
        End Set
    End Property

    Private _pAE_DESCRIPCION As String

    <DataMember()>
    Public Property PAE_AMAINFERIOR() As Nullable(Of Decimal)
        Get
            Return _pAE_AMAINFERIOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pAE_AMAINFERIOR, value) Then
                _pAE_AMAINFERIOR = value
                OnPropertyChanged("PAE_AMAINFERIOR")
            End If
        End Set
    End Property

    Private _pAE_AMAINFERIOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property PAE_VERDE1() As Nullable(Of Decimal)
        Get
            Return _pAE_VERDE1
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pAE_VERDE1, value) Then
                _pAE_VERDE1 = value
                OnPropertyChanged("PAE_VERDE1")
            End If
        End Set
    End Property

    Private _pAE_VERDE1 As Nullable(Of Decimal)

    <DataMember()>
    Public Property PAE_VERDE2() As Nullable(Of Decimal)
        Get
            Return _pAE_VERDE2
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pAE_VERDE2, value) Then
                _pAE_VERDE2 = value
                OnPropertyChanged("PAE_VERDE2")
            End If
        End Set
    End Property

    Private _pAE_VERDE2 As Nullable(Of Decimal)

    <DataMember()>
    Public Property PAE_AMASUPERIOR() As Nullable(Of Decimal)
        Get
            Return _pAE_AMASUPERIOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pAE_AMASUPERIOR, value) Then
                _pAE_AMASUPERIOR = value
                OnPropertyChanged("PAE_AMASUPERIOR")
            End If
        End Set
    End Property

    Private _pAE_AMASUPERIOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property PAE_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _pAE_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pAE_FEC_GRAB, value) Then
                _pAE_FEC_GRAB = value
                OnPropertyChanged("PAE_FEC_GRAB")
            End If
        End Set
    End Property

    Private _pAE_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property PAE_ESTADO() As Nullable(Of Boolean)
        Get
            Return _pAE_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pAE_ESTADO, value) Then
                _pAE_ESTADO = value
                OnPropertyChanged("PAE_ESTADO")
            End If
        End Set
    End Property

    Private _pAE_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property ComponenteInspeccion() As ComponenteInspeccion
        Get
            Return _componenteInspeccion
        End Get
        Set(ByVal value As ComponenteInspeccion)
            If _componenteInspeccion IsNot value Then
                Dim previousValue As ComponenteInspeccion = _componenteInspeccion
                _componenteInspeccion = value
                FixupComponenteInspeccion(previousValue)
                OnNavigationPropertyChanged("ComponenteInspeccion")
            End If
        End Set
    End Property

    Private _componenteInspeccion As ComponenteInspeccion


    <DataMember()>
    Public Property EntidadInspeccion() As EntidadInspeccion
        Get
            Return _entidadInspeccion
        End Get
        Set(ByVal value As EntidadInspeccion)
            If _entidadInspeccion IsNot value Then
                Dim previousValue As EntidadInspeccion = _entidadInspeccion
                _entidadInspeccion = value
                FixupEntidadInspeccion(previousValue)
                OnNavigationPropertyChanged("EntidadInspeccion")
            End If
        End Set
    End Property

    Private _entidadInspeccion As EntidadInspeccion


    <DataMember()>
    Public Property FichaInspeccionDetalle() As TrackableCollection(Of FichaInspeccionDetalle)
        Get
            If _fichaInspeccionDetalle Is Nothing Then
                _fichaInspeccionDetalle = New TrackableCollection(Of FichaInspeccionDetalle)
                AddHandler _fichaInspeccionDetalle.CollectionChanged, AddressOf FixupFichaInspeccionDetalle
            End If
            Return _fichaInspeccionDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of FichaInspeccionDetalle))
            If Not Object.ReferenceEquals(_fichaInspeccionDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _fichaInspeccionDetalle IsNot Nothing Then
                    RemoveHandler _fichaInspeccionDetalle.CollectionChanged, AddressOf FixupFichaInspeccionDetalle
                End If
                _fichaInspeccionDetalle = value
                If _fichaInspeccionDetalle IsNot Nothing Then
                    AddHandler _fichaInspeccionDetalle.CollectionChanged, AddressOf FixupFichaInspeccionDetalle
                End If
                OnNavigationPropertyChanged("FichaInspeccionDetalle")
            End If
        End Set
    End Property

    Private _fichaInspeccionDetalle As TrackableCollection(Of FichaInspeccionDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ComponenteInspeccion = Nothing
        EntidadInspeccion = Nothing
        FichaInspeccionDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupComponenteInspeccion(ByVal previousValue As ComponenteInspeccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ParametroEntidad.Contains(Me) Then
            previousValue.ParametroEntidad.Remove(Me)
        End If

        If ComponenteInspeccion IsNot Nothing Then
            If Not ComponenteInspeccion.ParametroEntidad.Contains(Me) Then
                ComponenteInspeccion.ParametroEntidad.Add(Me)
            End If

            COM_ID = ComponenteInspeccion.COM_ID
        ElseIf Not skipKeys Then
            COM_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ComponenteInspeccion") AndAlso
                ChangeTracker.OriginalValues("ComponenteInspeccion") Is ComponenteInspeccion Then
                ChangeTracker.OriginalValues.Remove("ComponenteInspeccion")
            Else
                ChangeTracker.RecordOriginalValue("ComponenteInspeccion", previousValue)
            End If
            If ComponenteInspeccion IsNot Nothing AndAlso Not ComponenteInspeccion.ChangeTracker.ChangeTrackingEnabled Then
                ComponenteInspeccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidadInspeccion(ByVal previousValue As EntidadInspeccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ParametroEntidad.Contains(Me) Then
            previousValue.ParametroEntidad.Remove(Me)
        End If

        If EntidadInspeccion IsNot Nothing Then
            If Not EntidadInspeccion.ParametroEntidad.Contains(Me) Then
                EntidadInspeccion.ParametroEntidad.Add(Me)
            End If

            EIN_ID = EntidadInspeccion.EIN_ID
        ElseIf Not skipKeys Then
            EIN_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("EntidadInspeccion") AndAlso
                ChangeTracker.OriginalValues("EntidadInspeccion") Is EntidadInspeccion Then
                ChangeTracker.OriginalValues.Remove("EntidadInspeccion")
            Else
                ChangeTracker.RecordOriginalValue("EntidadInspeccion", previousValue)
            End If
            If EntidadInspeccion IsNot Nothing AndAlso Not EntidadInspeccion.ChangeTracker.ChangeTrackingEnabled Then
                EntidadInspeccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupFichaInspeccionDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As FichaInspeccionDetalle In e.NewItems
                item.ParametroEntidad = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("FichaInspeccionDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As FichaInspeccionDetalle In e.OldItems
                If ReferenceEquals(item.ParametroEntidad, Me) Then
                    item.ParametroEntidad = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("FichaInspeccionDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
