'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(OrdenDespacho))>
<KnownType(GetType(Almacen))>
Partial Public Class OrdenDespachoDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared ODD_ID As string = "ODD_ID"
				public shared ODE_ID As string = "ODE_ID"
				public shared CANT_ORDENADA As string = "CANT_ORDENADA"
				public shared CANT_DESPACHADA As string = "CANT_DESPACHADA"
				public shared TDO_ID_DOC As string = "TDO_ID_DOC"
				public shared DTD_ID_DOC As string = "DTD_ID_DOC"
				public shared DDE_SERIE_DOC As string = "DDE_SERIE_DOC"
				public shared DDE_NUMERO_DOC As string = "DDE_NUMERO_DOC"
				public shared DDE_ITEM_DOC As string = "DDE_ITEM_DOC"
				public shared ART_ID As string = "ART_ID"
				public shared ART_DESCRIPCION As string = "ART_DESCRIPCION"
				public shared ODD_PESO_LADRILLO As string = "ODD_PESO_LADRILLO"
				public shared NUMERO_DOCUMENTO As string = "NUMERO_DOCUMENTO"
				public shared ODD_OBSERVACION As string = "ODD_OBSERVACION"
				public shared ALM_ID As string = "ALM_ID"
		    End Structure
	



    <DataMember()>
    Public Property ODD_ID() As Integer
        Get
            Return _oDD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_oDD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'ODD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _oDD_ID = value
                OnPropertyChanged("ODD_ID")
            End If
        End Set
    End Property

    Private _oDD_ID As Integer

    <DataMember()>
    Public Property ODE_ID() As Nullable(Of Integer)
        Get
            Return _oDE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oDE_ID, value) Then
                ChangeTracker.RecordOriginalValue("ODE_ID", _oDE_ID)
                If Not IsDeserializing Then
                    If OrdenDespacho IsNot Nothing AndAlso Not Equals(OrdenDespacho.ODE_ID, value) Then
                        OrdenDespacho = Nothing
                    End If
                End If
                _oDE_ID = value
                OnPropertyChanged("ODE_ID")
            End If
        End Set
    End Property

    Private _oDE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property CANT_ORDENADA() As Nullable(Of Decimal)
        Get
            Return _cANT_ORDENADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cANT_ORDENADA, value) Then
                _cANT_ORDENADA = value
                OnPropertyChanged("CANT_ORDENADA")
            End If
        End Set
    End Property

    Private _cANT_ORDENADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property CANT_DESPACHADA() As Nullable(Of Decimal)
        Get
            Return _cANT_DESPACHADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cANT_DESPACHADA, value) Then
                _cANT_DESPACHADA = value
                OnPropertyChanged("CANT_DESPACHADA")
            End If
        End Set
    End Property

    Private _cANT_DESPACHADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property TDO_ID_DOC() As String
        Get
            Return _tDO_ID_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID_DOC, value) Then
                _tDO_ID_DOC = value
                OnPropertyChanged("TDO_ID_DOC")
            End If
        End Set
    End Property

    Private _tDO_ID_DOC As String

    <DataMember()>
    Public Property DTD_ID_DOC() As String
        Get
            Return _dTD_ID_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID_DOC, value) Then
                _dTD_ID_DOC = value
                OnPropertyChanged("DTD_ID_DOC")
            End If
        End Set
    End Property

    Private _dTD_ID_DOC As String

    <DataMember()>
    Public Property DDE_SERIE_DOC() As String
        Get
            Return _dDE_SERIE_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_dDE_SERIE_DOC, value) Then
                _dDE_SERIE_DOC = value
                OnPropertyChanged("DDE_SERIE_DOC")
            End If
        End Set
    End Property

    Private _dDE_SERIE_DOC As String

    <DataMember()>
    Public Property DDE_NUMERO_DOC() As String
        Get
            Return _dDE_NUMERO_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_dDE_NUMERO_DOC, value) Then
                _dDE_NUMERO_DOC = value
                OnPropertyChanged("DDE_NUMERO_DOC")
            End If
        End Set
    End Property

    Private _dDE_NUMERO_DOC As String

    <DataMember()>
    Public Property DDE_ITEM_DOC() As Nullable(Of Integer)
        Get
            Return _dDE_ITEM_DOC
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dDE_ITEM_DOC, value) Then
                _dDE_ITEM_DOC = value
                OnPropertyChanged("DDE_ITEM_DOC")
            End If
        End Set
    End Property

    Private _dDE_ITEM_DOC As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property ART_DESCRIPCION() As String
        Get
            Return _aRT_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_DESCRIPCION, value) Then
                _aRT_DESCRIPCION = value
                OnPropertyChanged("ART_DESCRIPCION")
            End If
        End Set
    End Property

    Private _aRT_DESCRIPCION As String

    <DataMember()>
    Public Property ODD_PESO_LADRILLO() As Nullable(Of Decimal)
        Get
            Return _oDD_PESO_LADRILLO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oDD_PESO_LADRILLO, value) Then
                _oDD_PESO_LADRILLO = value
                OnPropertyChanged("ODD_PESO_LADRILLO")
            End If
        End Set
    End Property

    Private _oDD_PESO_LADRILLO As Nullable(Of Decimal)

    <DataMember()>
    Public Property NUMERO_DOCUMENTO() As String
        Get
            Return _nUMERO_DOCUMENTO
        End Get
        Set(ByVal value As String)
            If Not Equals(_nUMERO_DOCUMENTO, value) Then
                _nUMERO_DOCUMENTO = value
                OnPropertyChanged("NUMERO_DOCUMENTO")
            End If
        End Set
    End Property

    Private _nUMERO_DOCUMENTO As String

    <DataMember()>
    Public Property ODD_OBSERVACION() As String
        Get
            Return _oDD_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_oDD_OBSERVACION, value) Then
                _oDD_OBSERVACION = value
                OnPropertyChanged("ODD_OBSERVACION")
            End If
        End Set
    End Property

    Private _oDD_OBSERVACION As String

    <DataMember()>
    Public Property ALM_ID() As Nullable(Of Integer)
        Get
            Return _aLM_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_aLM_ID, value) Then
                ChangeTracker.RecordOriginalValue("ALM_ID", _aLM_ID)
                If Not IsDeserializing Then
                    If Almacen IsNot Nothing AndAlso Not Equals(Almacen.ALM_ID, value) Then
                        Almacen = Nothing
                    End If
                End If
                _aLM_ID = value
                OnPropertyChanged("ALM_ID")
            End If
        End Set
    End Property

    Private _aLM_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property OrdenDespacho() As OrdenDespacho
        Get
            Return _ordenDespacho
        End Get
        Set(ByVal value As OrdenDespacho)
            If _ordenDespacho IsNot value Then
                Dim previousValue As OrdenDespacho = _ordenDespacho
                _ordenDespacho = value
                FixupOrdenDespacho(previousValue)
                OnNavigationPropertyChanged("OrdenDespacho")
            End If
        End Set
    End Property

    Private _ordenDespacho As OrdenDespacho


    <DataMember()>
    Public Property Almacen() As Almacen
        Get
            Return _almacen
        End Get
        Set(ByVal value As Almacen)
            If _almacen IsNot value Then
                Dim previousValue As Almacen = _almacen
                _almacen = value
                FixupAlmacen(previousValue)
                OnNavigationPropertyChanged("Almacen")
            End If
        End Set
    End Property

    Private _almacen As Almacen


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        OrdenDespacho = Nothing
        Almacen = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupOrdenDespacho(ByVal previousValue As OrdenDespacho, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenDespachoDetalle.Contains(Me) Then
            previousValue.OrdenDespachoDetalle.Remove(Me)
        End If

        If OrdenDespacho IsNot Nothing Then
            If Not OrdenDespacho.OrdenDespachoDetalle.Contains(Me) Then
                OrdenDespacho.OrdenDespachoDetalle.Add(Me)
            End If

            ODE_ID = OrdenDespacho.ODE_ID
        ElseIf Not skipKeys Then
            ODE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("OrdenDespacho") AndAlso
                ChangeTracker.OriginalValues("OrdenDespacho") Is OrdenDespacho Then
                ChangeTracker.OriginalValues.Remove("OrdenDespacho")
            Else
                ChangeTracker.RecordOriginalValue("OrdenDespacho", previousValue)
            End If
            If OrdenDespacho IsNot Nothing AndAlso Not OrdenDespacho.ChangeTracker.ChangeTrackingEnabled Then
                OrdenDespacho.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupAlmacen(ByVal previousValue As Almacen, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenDespachoDetalle.Contains(Me) Then
            previousValue.OrdenDespachoDetalle.Remove(Me)
        End If

        If Almacen IsNot Nothing Then
            If Not Almacen.OrdenDespachoDetalle.Contains(Me) Then
                Almacen.OrdenDespachoDetalle.Add(Me)
            End If

            ALM_ID = Almacen.ALM_ID
        ElseIf Not skipKeys Then
            ALM_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Almacen") AndAlso
                ChangeTracker.OriginalValues("Almacen") Is Almacen Then
                ChangeTracker.OriginalValues.Remove("Almacen")
            Else
                ChangeTracker.RecordOriginalValue("Almacen", previousValue)
            End If
            If Almacen IsNot Nothing AndAlso Not Almacen.ChangeTracker.ChangeTrackingEnabled Then
                Almacen.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
