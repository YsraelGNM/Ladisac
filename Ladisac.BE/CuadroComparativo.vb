'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Moneda))>
<KnownType(GetType(Personas))>
<KnownType(GetType(CCProveedorDetalle))>
Partial Public Class CuadroComparativo
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CUC_ID As string = "CUC_ID"
				public shared CUC_NOMBRE_PROYECTO As string = "CUC_NOMBRE_PROYECTO"
				public shared PER_ID_ELABORADO As string = "PER_ID_ELABORADO"
				public shared CUC_FECHA As string = "CUC_FECHA"
				public shared MON_ID As string = "MON_ID"
				public shared CUC_TCAMBIO As string = "CUC_TCAMBIO"
				public shared CUC_OBSERVACION As string = "CUC_OBSERVACION"
				public shared USU_ID As string = "USU_ID"
				public shared CUC_FECHA_GRAB As string = "CUC_FECHA_GRAB"
				public shared CUC_ESTADO As string = "CUC_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property CUC_ID() As Integer
        Get
            Return _cUC_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cUC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CUC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cUC_ID = value
                OnPropertyChanged("CUC_ID")
            End If
        End Set
    End Property

    Private _cUC_ID As Integer

    <DataMember()>
    Public Property CUC_NOMBRE_PROYECTO() As String
        Get
            Return _cUC_NOMBRE_PROYECTO
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_NOMBRE_PROYECTO, value) Then
                _cUC_NOMBRE_PROYECTO = value
                OnPropertyChanged("CUC_NOMBRE_PROYECTO")
            End If
        End Set
    End Property

    Private _cUC_NOMBRE_PROYECTO As String

    <DataMember()>
    Public Property PER_ID_ELABORADO() As String
        Get
            Return _pER_ID_ELABORADO
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_ELABORADO, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_ELABORADO", _pER_ID_ELABORADO)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_ELABORADO = value
                OnPropertyChanged("PER_ID_ELABORADO")
            End If
        End Set
    End Property

    Private _pER_ID_ELABORADO As String

    <DataMember()>
    Public Property CUC_FECHA() As Date
        Get
            Return _cUC_FECHA
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cUC_FECHA, value) Then
                _cUC_FECHA = value
                OnPropertyChanged("CUC_FECHA")
            End If
        End Set
    End Property

    Private _cUC_FECHA As Date

    <DataMember()>
    Public Property MON_ID() As String
        Get
            Return _mON_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_mON_ID, value) Then
                ChangeTracker.RecordOriginalValue("MON_ID", _mON_ID)
                If Not IsDeserializing Then
                    If Moneda IsNot Nothing AndAlso Not Equals(Moneda.MON_ID, value) Then
                        Moneda = Nothing
                    End If
                End If
                _mON_ID = value
                OnPropertyChanged("MON_ID")
            End If
        End Set
    End Property

    Private _mON_ID As String

    <DataMember()>
    Public Property CUC_TCAMBIO() As Decimal
        Get
            Return _cUC_TCAMBIO
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cUC_TCAMBIO, value) Then
                _cUC_TCAMBIO = value
                OnPropertyChanged("CUC_TCAMBIO")
            End If
        End Set
    End Property

    Private _cUC_TCAMBIO As Decimal

    <DataMember()>
    Public Property CUC_OBSERVACION() As String
        Get
            Return _cUC_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_OBSERVACION, value) Then
                _cUC_OBSERVACION = value
                OnPropertyChanged("CUC_OBSERVACION")
            End If
        End Set
    End Property

    Private _cUC_OBSERVACION As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CUC_FECHA_GRAB() As Date
        Get
            Return _cUC_FECHA_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cUC_FECHA_GRAB, value) Then
                _cUC_FECHA_GRAB = value
                OnPropertyChanged("CUC_FECHA_GRAB")
            End If
        End Set
    End Property

    Private _cUC_FECHA_GRAB As Date

    <DataMember()>
    Public Property CUC_ESTADO() As Boolean
        Get
            Return _cUC_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cUC_ESTADO, value) Then
                _cUC_ESTADO = value
                OnPropertyChanged("CUC_ESTADO")
            End If
        End Set
    End Property

    Private _cUC_ESTADO As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Moneda() As Moneda
        Get
            Return _moneda
        End Get
        Set(ByVal value As Moneda)
            If _moneda IsNot value Then
                Dim previousValue As Moneda = _moneda
                _moneda = value
                FixupMoneda(previousValue)
                OnNavigationPropertyChanged("Moneda")
            End If
        End Set
    End Property

    Private _moneda As Moneda


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property CCProveedorDetalle() As TrackableCollection(Of CCProveedorDetalle)
        Get
            If _cCProveedorDetalle Is Nothing Then
                _cCProveedorDetalle = New TrackableCollection(Of CCProveedorDetalle)
                AddHandler _cCProveedorDetalle.CollectionChanged, AddressOf FixupCCProveedorDetalle
            End If
            Return _cCProveedorDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of CCProveedorDetalle))
            If Not Object.ReferenceEquals(_cCProveedorDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cCProveedorDetalle IsNot Nothing Then
                    RemoveHandler _cCProveedorDetalle.CollectionChanged, AddressOf FixupCCProveedorDetalle
                End If
                _cCProveedorDetalle = value
                If _cCProveedorDetalle IsNot Nothing Then
                    AddHandler _cCProveedorDetalle.CollectionChanged, AddressOf FixupCCProveedorDetalle
                End If
                OnNavigationPropertyChanged("CCProveedorDetalle")
            End If
        End Set
    End Property

    Private _cCProveedorDetalle As TrackableCollection(Of CCProveedorDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Moneda = Nothing
        Personas = Nothing
        CCProveedorDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupMoneda(ByVal previousValue As Moneda)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuadroComparativo.Contains(Me) Then
            previousValue.CuadroComparativo.Remove(Me)
        End If

        If Moneda IsNot Nothing Then
            If Not Moneda.CuadroComparativo.Contains(Me) Then
                Moneda.CuadroComparativo.Add(Me)
            End If

            MON_ID = Moneda.MON_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Moneda") AndAlso
                ChangeTracker.OriginalValues("Moneda") Is Moneda Then
                ChangeTracker.OriginalValues.Remove("Moneda")
            Else
                ChangeTracker.RecordOriginalValue("Moneda", previousValue)
            End If
            If Moneda IsNot Nothing AndAlso Not Moneda.ChangeTracker.ChangeTrackingEnabled Then
                Moneda.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuadroComparativo.Contains(Me) Then
            previousValue.CuadroComparativo.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.CuadroComparativo.Contains(Me) Then
                Personas.CuadroComparativo.Add(Me)
            End If

            PER_ID_ELABORADO = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCCProveedorDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CCProveedorDetalle In e.NewItems
                item.CuadroComparativo = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CCProveedorDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CCProveedorDetalle In e.OldItems
                If ReferenceEquals(item.CuadroComparativo, Me) Then
                    item.CuadroComparativo = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CCProveedorDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
