'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(OrdenSalidaDetalle))>
<KnownType(GetType(Personas))>
Partial Public Class OrdenSalida
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared OSA_ID As string = "OSA_ID"
				public shared OSA_FECHA As string = "OSA_FECHA"
				public shared PER_ID_PROVEEDOR As string = "PER_ID_PROVEEDOR"
				public shared PER_ID_RESPONSABLE As string = "PER_ID_RESPONSABLE"
				public shared USU_ID As string = "USU_ID"
				public shared OSA_FEC_GRAB As string = "OSA_FEC_GRAB"
				public shared OSA_ESTADO As string = "OSA_ESTADO"
				public shared DMO_ID_TFO As string = "DMO_ID_TFO"
		    End Structure
	



    <DataMember()>
    Public Property OSA_ID() As Integer
        Get
            Return _oSA_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_oSA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'OSA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _oSA_ID = value
                OnPropertyChanged("OSA_ID")
            End If
        End Set
    End Property

    Private _oSA_ID As Integer

    <DataMember()>
    Public Property OSA_FECHA() As Nullable(Of Date)
        Get
            Return _oSA_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oSA_FECHA, value) Then
                _oSA_FECHA = value
                OnPropertyChanged("OSA_FECHA")
            End If
        End Set
    End Property

    Private _oSA_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property PER_ID_PROVEEDOR() As String
        Get
            Return _pER_ID_PROVEEDOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_PROVEEDOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_PROVEEDOR", _pER_ID_PROVEEDOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_PROVEEDOR = value
                OnPropertyChanged("PER_ID_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_ID_PROVEEDOR As String

    <DataMember()>
    Public Property PER_ID_RESPONSABLE() As String
        Get
            Return _pER_ID_RESPONSABLE
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_RESPONSABLE, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_RESPONSABLE", _pER_ID_RESPONSABLE)
                If Not IsDeserializing Then
                    If Personas1 IsNot Nothing AndAlso Not Equals(Personas1.PER_ID, value) Then
                        Personas1 = Nothing
                    End If
                End If
                _pER_ID_RESPONSABLE = value
                OnPropertyChanged("PER_ID_RESPONSABLE")
            End If
        End Set
    End Property

    Private _pER_ID_RESPONSABLE As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property OSA_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _oSA_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oSA_FEC_GRAB, value) Then
                _oSA_FEC_GRAB = value
                OnPropertyChanged("OSA_FEC_GRAB")
            End If
        End Set
    End Property

    Private _oSA_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property OSA_ESTADO() As Nullable(Of Boolean)
        Get
            Return _oSA_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_oSA_ESTADO, value) Then
                _oSA_ESTADO = value
                OnPropertyChanged("OSA_ESTADO")
            End If
        End Set
    End Property

    Private _oSA_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property DMO_ID_TFO() As Nullable(Of Integer)
        Get
            Return _dMO_ID_TFO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dMO_ID_TFO, value) Then
                _dMO_ID_TFO = value
                OnPropertyChanged("DMO_ID_TFO")
            End If
        End Set
    End Property

    Private _dMO_ID_TFO As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property OrdenSalidaDetalle() As TrackableCollection(Of OrdenSalidaDetalle)
        Get
            If _ordenSalidaDetalle Is Nothing Then
                _ordenSalidaDetalle = New TrackableCollection(Of OrdenSalidaDetalle)
                AddHandler _ordenSalidaDetalle.CollectionChanged, AddressOf FixupOrdenSalidaDetalle
            End If
            Return _ordenSalidaDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenSalidaDetalle))
            If Not Object.ReferenceEquals(_ordenSalidaDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenSalidaDetalle IsNot Nothing Then
                    RemoveHandler _ordenSalidaDetalle.CollectionChanged, AddressOf FixupOrdenSalidaDetalle
                End If
                _ordenSalidaDetalle = value
                If _ordenSalidaDetalle IsNot Nothing Then
                    AddHandler _ordenSalidaDetalle.CollectionChanged, AddressOf FixupOrdenSalidaDetalle
                End If
                OnNavigationPropertyChanged("OrdenSalidaDetalle")
            End If
        End Set
    End Property

    Private _ordenSalidaDetalle As TrackableCollection(Of OrdenSalidaDetalle)

    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Personas1() As Personas
        Get
            Return _personas1
        End Get
        Set(ByVal value As Personas)
            If _personas1 IsNot value Then
                Dim previousValue As Personas = _personas1
                _personas1 = value
                FixupPersonas1(previousValue)
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        OrdenSalidaDetalle.Clear()
        Personas = Nothing
        Personas1 = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_PROVEEDOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_PROVEEDOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas1 IsNot Nothing Then
            PER_ID_RESPONSABLE = Personas1.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_RESPONSABLE = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas1") AndAlso
                ChangeTracker.OriginalValues("Personas1") Is Personas1 Then
                ChangeTracker.OriginalValues.Remove("Personas1")
            Else
                ChangeTracker.RecordOriginalValue("Personas1", previousValue)
            End If
            If Personas1 IsNot Nothing AndAlso Not Personas1.ChangeTracker.ChangeTrackingEnabled Then
                Personas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupOrdenSalidaDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenSalidaDetalle In e.NewItems
                item.OSA_ID = OSA_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenSalidaDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenSalidaDetalle In e.OldItems
                item.OSA_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenSalidaDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
