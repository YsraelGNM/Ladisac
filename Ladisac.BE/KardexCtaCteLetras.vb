'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(RolOpeCtaCteEntregas))>
<KnownType(GetType(Usuarios))>
Partial Public Class KardexCtaCteLetras
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CCT_ID_REF As string = "CCT_ID_REF"
				public shared TDO_ID_REF As string = "TDO_ID_REF"
				public shared DTD_ID_REF As string = "DTD_ID_REF"
				public shared DOC_SERIE_REF As string = "DOC_SERIE_REF"
				public shared DOC_NUMERO_REF As string = "DOC_NUMERO_REF"
				public shared ITEM_REF As string = "ITEM_REF"
				public shared DOC_NUMERO As string = "DOC_NUMERO"
				public shared USU_ID As string = "USU_ID"
				public shared KCL_FEC_GRAB As string = "KCL_FEC_GRAB"
				public shared KCL_ESTADO As string = "KCL_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property CCT_ID_REF() As String
        Get
            Return _cCT_ID_REF
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_ID_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CCT_ID_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCteEntregas IsNot Nothing AndAlso Not Equals(RolOpeCtaCteEntregas.CCT_ID, value) Then
                        RolOpeCtaCteEntregas = Nothing
                    End If
                End If
                _cCT_ID_REF = value
                OnPropertyChanged("CCT_ID_REF")
            End If
        End Set
    End Property

    Private _cCT_ID_REF As String

    <DataMember()>
    Public Property TDO_ID_REF() As String
        Get
            Return _tDO_ID_REF
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'TDO_ID_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCteEntregas IsNot Nothing AndAlso Not Equals(RolOpeCtaCteEntregas.TDO_ID, value) Then
                        RolOpeCtaCteEntregas = Nothing
                    End If
                End If
                _tDO_ID_REF = value
                OnPropertyChanged("TDO_ID_REF")
            End If
        End Set
    End Property

    Private _tDO_ID_REF As String

    <DataMember()>
    Public Property DTD_ID_REF() As String
        Get
            Return _dTD_ID_REF
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DTD_ID_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCteEntregas IsNot Nothing AndAlso Not Equals(RolOpeCtaCteEntregas.DTD_ID, value) Then
                        RolOpeCtaCteEntregas = Nothing
                    End If
                End If
                _dTD_ID_REF = value
                OnPropertyChanged("DTD_ID_REF")
            End If
        End Set
    End Property

    Private _dTD_ID_REF As String

    <DataMember()>
    Public Property DOC_SERIE_REF() As String
        Get
            Return _dOC_SERIE_REF
        End Get
        Set(ByVal value As String)
            If Not Equals(_dOC_SERIE_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DOC_SERIE_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dOC_SERIE_REF = value
                OnPropertyChanged("DOC_SERIE_REF")
            End If
        End Set
    End Property

    Private _dOC_SERIE_REF As String

    <DataMember()>
    Public Property DOC_NUMERO_REF() As String
        Get
            Return _dOC_NUMERO_REF
        End Get
        Set(ByVal value As String)
            If Not Equals(_dOC_NUMERO_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DOC_NUMERO_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dOC_NUMERO_REF = value
                OnPropertyChanged("DOC_NUMERO_REF")
            End If
        End Set
    End Property

    Private _dOC_NUMERO_REF As String

    <DataMember()>
    Public Property ITEM_REF() As Decimal
        Get
            Return _iTEM_REF
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_iTEM_REF, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'ITEM_REF' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _iTEM_REF = value
                OnPropertyChanged("ITEM_REF")
            End If
        End Set
    End Property

    Private _iTEM_REF As Decimal

    <DataMember()>
    Public Property DOC_NUMERO() As String
        Get
            Return _dOC_NUMERO
        End Get
        Set(ByVal value As String)
            If Not Equals(_dOC_NUMERO, value) Then
                _dOC_NUMERO = value
                OnPropertyChanged("DOC_NUMERO")
            End If
        End Set
    End Property

    Private _dOC_NUMERO As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property KCL_FEC_GRAB() As Date
        Get
            Return _kCL_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_kCL_FEC_GRAB, value) Then
                _kCL_FEC_GRAB = value
                OnPropertyChanged("KCL_FEC_GRAB")
            End If
        End Set
    End Property

    Private _kCL_FEC_GRAB As Date

    <DataMember()>
    Public Property KCL_ESTADO() As Boolean
        Get
            Return _kCL_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_kCL_ESTADO, value) Then
                _kCL_ESTADO = value
                OnPropertyChanged("KCL_ESTADO")
            End If
        End Set
    End Property

    Private _kCL_ESTADO As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property RolOpeCtaCteEntregas() As RolOpeCtaCteEntregas
        Get
            Return _rolOpeCtaCteEntregas
        End Get
        Set(ByVal value As RolOpeCtaCteEntregas)
            If _rolOpeCtaCteEntregas IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(CCT_ID_REF, value.CCT_ID) OrElse Not Equals(TDO_ID_REF, value.TDO_ID) OrElse Not Equals(DTD_ID_REF, value.DTD_ID) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As RolOpeCtaCteEntregas = _rolOpeCtaCteEntregas
                _rolOpeCtaCteEntregas = value
                FixupRolOpeCtaCteEntregas(previousValue)
                OnNavigationPropertyChanged("RolOpeCtaCteEntregas")
            End If
        End Set
    End Property

    Private _rolOpeCtaCteEntregas As RolOpeCtaCteEntregas


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        RolOpeCtaCteEntregas = Nothing
        Usuarios = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupRolOpeCtaCteEntregas(ByVal previousValue As RolOpeCtaCteEntregas)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.KardexCtaCteLetras.Contains(Me) Then
            previousValue.KardexCtaCteLetras.Remove(Me)
        End If

        If RolOpeCtaCteEntregas IsNot Nothing Then
            If Not RolOpeCtaCteEntregas.KardexCtaCteLetras.Contains(Me) Then
                RolOpeCtaCteEntregas.KardexCtaCteLetras.Add(Me)
            End If

            CCT_ID_REF = RolOpeCtaCteEntregas.CCT_ID
            TDO_ID_REF = RolOpeCtaCteEntregas.TDO_ID
            DTD_ID_REF = RolOpeCtaCteEntregas.DTD_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("RolOpeCtaCteEntregas") AndAlso
                ChangeTracker.OriginalValues("RolOpeCtaCteEntregas") Is RolOpeCtaCteEntregas Then
                ChangeTracker.OriginalValues.Remove("RolOpeCtaCteEntregas")
            Else
                ChangeTracker.RecordOriginalValue("RolOpeCtaCteEntregas", previousValue)
            End If
            If RolOpeCtaCteEntregas IsNot Nothing AndAlso Not RolOpeCtaCteEntregas.ChangeTracker.ChangeTrackingEnabled Then
                RolOpeCtaCteEntregas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.KardexCtaCteLetras.Contains(Me) Then
            previousValue.KardexCtaCteLetras.Remove(Me)
        End If

        If Usuarios IsNot Nothing Then
            If Not Usuarios.KardexCtaCteLetras.Contains(Me) Then
                Usuarios.KardexCtaCteLetras.Add(Me)
            End If

            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
