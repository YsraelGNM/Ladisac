'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Personas))>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(GrupoEmpleado))>
Partial Public Class DetalleGrupoEmpleado
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared prd_Periodo_id As string = "prd_Periodo_id"
				public shared gre_Numero As string = "gre_Numero"
				public shared gre_Item As string = "gre_Item"
				public shared per_id As string = "per_id"
				public shared gre_HoraDesde As string = "gre_HoraDesde"
				public shared gre_HoraHasta As string = "gre_HoraHasta"
				public shared gre_HoraDesdePLL As string = "gre_HoraDesdePLL"
				public shared gre_HoraHastaPLL As string = "gre_HoraHastaPLL"
				public shared gre_HoraTotal As string = "gre_HoraTotal"
				public shared gre_Esdoble As string = "gre_Esdoble"
				public shared gre_observaciones As string = "gre_observaciones"
				public shared gre_FecGrab As string = "gre_FecGrab"
				public shared Usu_Id As string = "Usu_Id"
				public shared gre_fecha As string = "gre_fecha"
				public shared gre_Refrigerio As string = "gre_Refrigerio"
				public shared gre_HoraExtraSimple As string = "gre_HoraExtraSimple"
		    End Structure
	



    <DataMember()>
    Public Property prd_Periodo_id() As String
        Get
            Return _prd_Periodo_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_prd_Periodo_id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prd_Periodo_id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If GrupoEmpleado IsNot Nothing AndAlso Not Equals(GrupoEmpleado.prd_Periodo_id, value) Then
                        GrupoEmpleado = Nothing
                    End If
                End If
                _prd_Periodo_id = value
                OnPropertyChanged("prd_Periodo_id")
            End If
        End Set
    End Property

    Private _prd_Periodo_id As String

    <DataMember()>
    Public Property gre_Numero() As String
        Get
            Return _gre_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_gre_Numero, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'gre_Numero' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If GrupoEmpleado IsNot Nothing AndAlso Not Equals(GrupoEmpleado.gre_Numero, value) Then
                        GrupoEmpleado = Nothing
                    End If
                End If
                _gre_Numero = value
                OnPropertyChanged("gre_Numero")
            End If
        End Set
    End Property

    Private _gre_Numero As String

    <DataMember()>
    Public Property gre_Item() As String
        Get
            Return _gre_Item
        End Get
        Set(ByVal value As String)
            If Not Equals(_gre_Item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'gre_Item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _gre_Item = value
                OnPropertyChanged("gre_Item")
            End If
        End Set
    End Property

    Private _gre_Item As String

    <DataMember()>
    Public Property per_id() As String
        Get
            Return _per_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_id, value) Then
                ChangeTracker.RecordOriginalValue("per_id", _per_id)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _per_id = value
                OnPropertyChanged("per_id")
            End If
        End Set
    End Property

    Private _per_id As String

    <DataMember()>
    Public Property gre_HoraDesde() As Nullable(Of Decimal)
        Get
            Return _gre_HoraDesde
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraDesde, value) Then
                _gre_HoraDesde = value
                OnPropertyChanged("gre_HoraDesde")
            End If
        End Set
    End Property

    Private _gre_HoraDesde As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_HoraHasta() As Nullable(Of Decimal)
        Get
            Return _gre_HoraHasta
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraHasta, value) Then
                _gre_HoraHasta = value
                OnPropertyChanged("gre_HoraHasta")
            End If
        End Set
    End Property

    Private _gre_HoraHasta As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_HoraDesdePLL() As Nullable(Of Decimal)
        Get
            Return _gre_HoraDesdePLL
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraDesdePLL, value) Then
                _gre_HoraDesdePLL = value
                OnPropertyChanged("gre_HoraDesdePLL")
            End If
        End Set
    End Property

    Private _gre_HoraDesdePLL As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_HoraHastaPLL() As Nullable(Of Decimal)
        Get
            Return _gre_HoraHastaPLL
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraHastaPLL, value) Then
                _gre_HoraHastaPLL = value
                OnPropertyChanged("gre_HoraHastaPLL")
            End If
        End Set
    End Property

    Private _gre_HoraHastaPLL As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_HoraTotal() As Nullable(Of Decimal)
        Get
            Return _gre_HoraTotal
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraTotal, value) Then
                _gre_HoraTotal = value
                OnPropertyChanged("gre_HoraTotal")
            End If
        End Set
    End Property

    Private _gre_HoraTotal As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_Esdoble() As Boolean
        Get
            Return _gre_Esdoble
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_gre_Esdoble, value) Then
                _gre_Esdoble = value
                OnPropertyChanged("gre_Esdoble")
            End If
        End Set
    End Property

    Private _gre_Esdoble As Boolean

    <DataMember()>
    Public Property gre_observaciones() As String
        Get
            Return _gre_observaciones
        End Get
        Set(ByVal value As String)
            If Not Equals(_gre_observaciones, value) Then
                _gre_observaciones = value
                OnPropertyChanged("gre_observaciones")
            End If
        End Set
    End Property

    Private _gre_observaciones As String

    <DataMember()>
    Public Property gre_FecGrab() As Nullable(Of Date)
        Get
            Return _gre_FecGrab
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_gre_FecGrab, value) Then
                _gre_FecGrab = value
                OnPropertyChanged("gre_FecGrab")
            End If
        End Set
    End Property

    Private _gre_FecGrab As Nullable(Of Date)

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property gre_fecha() As Nullable(Of Date)
        Get
            Return _gre_fecha
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_gre_fecha, value) Then
                _gre_fecha = value
                OnPropertyChanged("gre_fecha")
            End If
        End Set
    End Property

    Private _gre_fecha As Nullable(Of Date)

    <DataMember()>
    Public Property gre_Refrigerio() As Nullable(Of Decimal)
        Get
            Return _gre_Refrigerio
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_Refrigerio, value) Then
                _gre_Refrigerio = value
                OnPropertyChanged("gre_Refrigerio")
            End If
        End Set
    End Property

    Private _gre_Refrigerio As Nullable(Of Decimal)

    <DataMember()>
    Public Property gre_HoraExtraSimple() As Nullable(Of Decimal)
        Get
            Return _gre_HoraExtraSimple
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_gre_HoraExtraSimple, value) Then
                _gre_HoraExtraSimple = value
                OnPropertyChanged("gre_HoraExtraSimple")
            End If
        End Set
    End Property

    Private _gre_HoraExtraSimple As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property GrupoEmpleado() As GrupoEmpleado
        Get
            Return _grupoEmpleado
        End Get
        Set(ByVal value As GrupoEmpleado)
            If _grupoEmpleado IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relaci칩n de identificaci칩n por lo que el extremo principal no se puede cambiar si ya est치 establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(prd_Periodo_id, value.prd_Periodo_id) OrElse Not Equals(gre_Numero, value.gre_Numero) Then
                        Throw New InvalidOperationException("El extremo principal de una relaci칩n de identificaci칩n solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As GrupoEmpleado = _grupoEmpleado
                _grupoEmpleado = value
                FixupGrupoEmpleado(previousValue)
                OnNavigationPropertyChanged("GrupoEmpleado")
            End If
        End Set
    End Property

    Private _grupoEmpleado As GrupoEmpleado


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociaci칩n que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesar치 notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Personas = Nothing
        Usuarios = Nothing
        GrupoEmpleado = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleGrupoEmpleado.Contains(Me) Then
            previousValue.DetalleGrupoEmpleado.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.DetalleGrupoEmpleado.Contains(Me) Then
                Personas.DetalleGrupoEmpleado.Add(Me)
            End If

            per_id = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleGrupoEmpleado.Contains(Me) Then
            previousValue.DetalleGrupoEmpleado.Remove(Me)
        End If

        If Usuarios IsNot Nothing Then
            If Not Usuarios.DetalleGrupoEmpleado.Contains(Me) Then
                Usuarios.DetalleGrupoEmpleado.Add(Me)
            End If

            Usu_Id = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupGrupoEmpleado(ByVal previousValue As GrupoEmpleado)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleGrupoEmpleado.Contains(Me) Then
            previousValue.DetalleGrupoEmpleado.Remove(Me)
        End If

        If GrupoEmpleado IsNot Nothing Then
            If Not GrupoEmpleado.DetalleGrupoEmpleado.Contains(Me) Then
                GrupoEmpleado.DetalleGrupoEmpleado.Add(Me)
            End If

            prd_Periodo_id = GrupoEmpleado.prd_Periodo_id
            gre_Numero = GrupoEmpleado.gre_Numero
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("GrupoEmpleado") AndAlso
                ChangeTracker.OriginalValues("GrupoEmpleado") Is GrupoEmpleado Then
                ChangeTracker.OriginalValues.Remove("GrupoEmpleado")
            Else
                ChangeTracker.RecordOriginalValue("GrupoEmpleado", previousValue)
            End If
            If GrupoEmpleado IsNot Nothing AndAlso Not GrupoEmpleado.ChangeTracker.ChangeTrackingEnabled Then
                GrupoEmpleado.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
