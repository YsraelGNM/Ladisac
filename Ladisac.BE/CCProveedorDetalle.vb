'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CuadroComparativo))>
<KnownType(GetType(CCArticuloProveedorDetalle))>
Partial Public Class CCProveedorDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CPD_ID As string = "CPD_ID"
				public shared CUC_ID As string = "CUC_ID"
				public shared PER_ID_PROVEEDOR As string = "PER_ID_PROVEEDOR"
				public shared PER_DESCRIPCION As string = "PER_DESCRIPCION"
				public shared CPD_DOCUMENTO As string = "CPD_DOCUMENTO"
				public shared CPD_ADJUNTO_DOCUMENTO As string = "CPD_ADJUNTO_DOCUMENTO"
				public shared CPD_ADJUNTO_DOCUMENTO_DESCRI As string = "CPD_ADJUNTO_DOCUMENTO_DESCRI"
				public shared CPD_ADJUNTO_PRESUPUESTO As string = "CPD_ADJUNTO_PRESUPUESTO"
				public shared CPD_ADJUNTO_PRESUPUESTO_DESCRI As string = "CPD_ADJUNTO_PRESUPUESTO_DESCRI"
				public shared CPD_APROBADO As string = "CPD_APROBADO"
		    End Structure
	



    <DataMember()>
    Public Property CPD_ID() As Integer
        Get
            Return _cPD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cPD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CPD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cPD_ID = value
                OnPropertyChanged("CPD_ID")
            End If
        End Set
    End Property

    Private _cPD_ID As Integer

    <DataMember()>
    Public Property CUC_ID() As Nullable(Of Integer)
        Get
            Return _cUC_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cUC_ID, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID", _cUC_ID)
                If Not IsDeserializing Then
                    If CuadroComparativo IsNot Nothing AndAlso Not Equals(CuadroComparativo.CUC_ID, value) Then
                        CuadroComparativo = Nothing
                    End If
                End If
                _cUC_ID = value
                OnPropertyChanged("CUC_ID")
            End If
        End Set
    End Property

    Private _cUC_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PER_ID_PROVEEDOR() As String
        Get
            Return _pER_ID_PROVEEDOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_PROVEEDOR, value) Then
                _pER_ID_PROVEEDOR = value
                OnPropertyChanged("PER_ID_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_ID_PROVEEDOR As String

    <DataMember()>
    Public Property PER_DESCRIPCION() As String
        Get
            Return _pER_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_DESCRIPCION, value) Then
                _pER_DESCRIPCION = value
                OnPropertyChanged("PER_DESCRIPCION")
            End If
        End Set
    End Property

    Private _pER_DESCRIPCION As String

    <DataMember()>
    Public Property CPD_DOCUMENTO() As String
        Get
            Return _cPD_DOCUMENTO
        End Get
        Set(ByVal value As String)
            If Not Equals(_cPD_DOCUMENTO, value) Then
                _cPD_DOCUMENTO = value
                OnPropertyChanged("CPD_DOCUMENTO")
            End If
        End Set
    End Property

    Private _cPD_DOCUMENTO As String

    <DataMember()>
    Public Property CPD_ADJUNTO_DOCUMENTO() As Byte()
        Get
            Return _cPD_ADJUNTO_DOCUMENTO
        End Get
        Set(ByVal value As Byte())
            If _cPD_ADJUNTO_DOCUMENTO IsNot value Then
                _cPD_ADJUNTO_DOCUMENTO = value
                OnPropertyChanged("CPD_ADJUNTO_DOCUMENTO")
            End If
        End Set
    End Property

    Private _cPD_ADJUNTO_DOCUMENTO As Byte()

    <DataMember()>
    Public Property CPD_ADJUNTO_DOCUMENTO_DESCRI() As String
        Get
            Return _cPD_ADJUNTO_DOCUMENTO_DESCRI
        End Get
        Set(ByVal value As String)
            If Not Equals(_cPD_ADJUNTO_DOCUMENTO_DESCRI, value) Then
                _cPD_ADJUNTO_DOCUMENTO_DESCRI = value
                OnPropertyChanged("CPD_ADJUNTO_DOCUMENTO_DESCRI")
            End If
        End Set
    End Property

    Private _cPD_ADJUNTO_DOCUMENTO_DESCRI As String

    <DataMember()>
    Public Property CPD_ADJUNTO_PRESUPUESTO() As Byte()
        Get
            Return _cPD_ADJUNTO_PRESUPUESTO
        End Get
        Set(ByVal value As Byte())
            If _cPD_ADJUNTO_PRESUPUESTO IsNot value Then
                _cPD_ADJUNTO_PRESUPUESTO = value
                OnPropertyChanged("CPD_ADJUNTO_PRESUPUESTO")
            End If
        End Set
    End Property

    Private _cPD_ADJUNTO_PRESUPUESTO As Byte()

    <DataMember()>
    Public Property CPD_ADJUNTO_PRESUPUESTO_DESCRI() As String
        Get
            Return _cPD_ADJUNTO_PRESUPUESTO_DESCRI
        End Get
        Set(ByVal value As String)
            If Not Equals(_cPD_ADJUNTO_PRESUPUESTO_DESCRI, value) Then
                _cPD_ADJUNTO_PRESUPUESTO_DESCRI = value
                OnPropertyChanged("CPD_ADJUNTO_PRESUPUESTO_DESCRI")
            End If
        End Set
    End Property

    Private _cPD_ADJUNTO_PRESUPUESTO_DESCRI As String

    <DataMember()>
    Public Property CPD_APROBADO() As Nullable(Of Boolean)
        Get
            Return _cPD_APROBADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_cPD_APROBADO, value) Then
                _cPD_APROBADO = value
                OnPropertyChanged("CPD_APROBADO")
            End If
        End Set
    End Property

    Private _cPD_APROBADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property CuadroComparativo() As CuadroComparativo
        Get
            Return _cuadroComparativo
        End Get
        Set(ByVal value As CuadroComparativo)
            If _cuadroComparativo IsNot value Then
                Dim previousValue As CuadroComparativo = _cuadroComparativo
                _cuadroComparativo = value
                FixupCuadroComparativo(previousValue)
                OnNavigationPropertyChanged("CuadroComparativo")
            End If
        End Set
    End Property

    Private _cuadroComparativo As CuadroComparativo


    <DataMember()>
    Public Property CCArticuloProveedorDetalle() As TrackableCollection(Of CCArticuloProveedorDetalle)
        Get
            If _cCArticuloProveedorDetalle Is Nothing Then
                _cCArticuloProveedorDetalle = New TrackableCollection(Of CCArticuloProveedorDetalle)
                AddHandler _cCArticuloProveedorDetalle.CollectionChanged, AddressOf FixupCCArticuloProveedorDetalle
            End If
            Return _cCArticuloProveedorDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of CCArticuloProveedorDetalle))
            If Not Object.ReferenceEquals(_cCArticuloProveedorDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cCArticuloProveedorDetalle IsNot Nothing Then
                    RemoveHandler _cCArticuloProveedorDetalle.CollectionChanged, AddressOf FixupCCArticuloProveedorDetalle
                End If
                _cCArticuloProveedorDetalle = value
                If _cCArticuloProveedorDetalle IsNot Nothing Then
                    AddHandler _cCArticuloProveedorDetalle.CollectionChanged, AddressOf FixupCCArticuloProveedorDetalle
                End If
                OnNavigationPropertyChanged("CCArticuloProveedorDetalle")
            End If
        End Set
    End Property

    Private _cCArticuloProveedorDetalle As TrackableCollection(Of CCArticuloProveedorDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CuadroComparativo = Nothing
        CCArticuloProveedorDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCuadroComparativo(ByVal previousValue As CuadroComparativo, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CCProveedorDetalle.Contains(Me) Then
            previousValue.CCProveedorDetalle.Remove(Me)
        End If

        If CuadroComparativo IsNot Nothing Then
            If Not CuadroComparativo.CCProveedorDetalle.Contains(Me) Then
                CuadroComparativo.CCProveedorDetalle.Add(Me)
            End If

            CUC_ID = CuadroComparativo.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuadroComparativo") AndAlso
                ChangeTracker.OriginalValues("CuadroComparativo") Is CuadroComparativo Then
                ChangeTracker.OriginalValues.Remove("CuadroComparativo")
            Else
                ChangeTracker.RecordOriginalValue("CuadroComparativo", previousValue)
            End If
            If CuadroComparativo IsNot Nothing AndAlso Not CuadroComparativo.ChangeTracker.ChangeTrackingEnabled Then
                CuadroComparativo.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCCArticuloProveedorDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CCArticuloProveedorDetalle In e.NewItems
                item.CCProveedorDetalle = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CCArticuloProveedorDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CCArticuloProveedorDetalle In e.OldItems
                If ReferenceEquals(item.CCProveedorDetalle, Me) Then
                    item.CCProveedorDetalle = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CCArticuloProveedorDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
