'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Personas))>
<KnownType(GetType(OrdenTrabajo))>
Partial Public Class DetalleGrupoMantenimiento
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared prd_Periodo_id As string = "prd_Periodo_id"
				public shared grm_Numero As string = "grm_Numero"
				public shared grm_Item As string = "grm_Item"
				public shared OTR_ID As string = "OTR_ID"
				public shared per_id As string = "per_id"
				public shared grm_HoraDesde As string = "grm_HoraDesde"
				public shared grm_HoraHasta As string = "grm_HoraHasta"
				public shared grm_HoraTotal As string = "grm_HoraTotal"
				public shared grm_observaciones As string = "grm_observaciones"
				public shared grt_FecGrab As string = "grt_FecGrab"
				public shared Usu_Id As string = "Usu_Id"
		    End Structure
	



    <DataMember()>
    Public Property prd_Periodo_id() As String
        Get
            Return _prd_Periodo_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_prd_Periodo_id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prd_Periodo_id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _prd_Periodo_id = value
                OnPropertyChanged("prd_Periodo_id")
            End If
        End Set
    End Property

    Private _prd_Periodo_id As String

    <DataMember()>
    Public Property grm_Numero() As String
        Get
            Return _grm_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_grm_Numero, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'grm_Numero' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _grm_Numero = value
                OnPropertyChanged("grm_Numero")
            End If
        End Set
    End Property

    Private _grm_Numero As String

    <DataMember()>
    Public Property grm_Item() As String
        Get
            Return _grm_Item
        End Get
        Set(ByVal value As String)
            If Not Equals(_grm_Item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'grm_Item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _grm_Item = value
                OnPropertyChanged("grm_Item")
            End If
        End Set
    End Property

    Private _grm_Item As String

    <DataMember()>
    Public Property OTR_ID() As Nullable(Of Integer)
        Get
            Return _oTR_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oTR_ID, value) Then
                ChangeTracker.RecordOriginalValue("OTR_ID", _oTR_ID)
                If Not IsDeserializing Then
                    If OrdenTrabajo IsNot Nothing AndAlso Not Equals(OrdenTrabajo.OTR_ID, value) Then
                        OrdenTrabajo = Nothing
                    End If
                End If
                _oTR_ID = value
                OnPropertyChanged("OTR_ID")
            End If
        End Set
    End Property

    Private _oTR_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property per_id() As String
        Get
            Return _per_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_id, value) Then
                ChangeTracker.RecordOriginalValue("per_id", _per_id)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _per_id = value
                OnPropertyChanged("per_id")
            End If
        End Set
    End Property

    Private _per_id As String

    <DataMember()>
    Public Property grm_HoraDesde() As Nullable(Of Decimal)
        Get
            Return _grm_HoraDesde
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_grm_HoraDesde, value) Then
                _grm_HoraDesde = value
                OnPropertyChanged("grm_HoraDesde")
            End If
        End Set
    End Property

    Private _grm_HoraDesde As Nullable(Of Decimal)

    <DataMember()>
    Public Property grm_HoraHasta() As Nullable(Of Decimal)
        Get
            Return _grm_HoraHasta
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_grm_HoraHasta, value) Then
                _grm_HoraHasta = value
                OnPropertyChanged("grm_HoraHasta")
            End If
        End Set
    End Property

    Private _grm_HoraHasta As Nullable(Of Decimal)

    <DataMember()>
    Public Property grm_HoraTotal() As Nullable(Of Decimal)
        Get
            Return _grm_HoraTotal
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_grm_HoraTotal, value) Then
                _grm_HoraTotal = value
                OnPropertyChanged("grm_HoraTotal")
            End If
        End Set
    End Property

    Private _grm_HoraTotal As Nullable(Of Decimal)

    <DataMember()>
    Public Property grm_observaciones() As String
        Get
            Return _grm_observaciones
        End Get
        Set(ByVal value As String)
            If Not Equals(_grm_observaciones, value) Then
                _grm_observaciones = value
                OnPropertyChanged("grm_observaciones")
            End If
        End Set
    End Property

    Private _grm_observaciones As String

    <DataMember()>
    Public Property grt_FecGrab() As Nullable(Of Date)
        Get
            Return _grt_FecGrab
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_grt_FecGrab, value) Then
                _grt_FecGrab = value
                OnPropertyChanged("grt_FecGrab")
            End If
        End Set
    End Property

    Private _grt_FecGrab As Nullable(Of Date)

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property OrdenTrabajo() As OrdenTrabajo
        Get
            Return _ordenTrabajo
        End Get
        Set(ByVal value As OrdenTrabajo)
            If _ordenTrabajo IsNot value Then
                Dim previousValue As OrdenTrabajo = _ordenTrabajo
                _ordenTrabajo = value
                FixupOrdenTrabajo(previousValue)
                OnNavigationPropertyChanged("OrdenTrabajo")
            End If
        End Set
    End Property

    Private _ordenTrabajo As OrdenTrabajo


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Personas = Nothing
        OrdenTrabajo = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            per_id = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupOrdenTrabajo(ByVal previousValue As OrdenTrabajo, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If OrdenTrabajo IsNot Nothing Then
            OTR_ID = OrdenTrabajo.OTR_ID
        ElseIf Not skipKeys Then
            OTR_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("OrdenTrabajo") AndAlso
                ChangeTracker.OriginalValues("OrdenTrabajo") Is OrdenTrabajo Then
                ChangeTracker.OriginalValues.Remove("OrdenTrabajo")
            Else
                ChangeTracker.RecordOriginalValue("OrdenTrabajo", previousValue)
            End If
            If OrdenTrabajo IsNot Nothing AndAlso Not OrdenTrabajo.ChangeTracker.ChangeTrackingEnabled Then
                OrdenTrabajo.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
