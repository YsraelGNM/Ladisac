'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ProcesoCompraDetalle))>
Partial Public Class ProcesoCompra
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PRC_ID As string = "PRC_ID"
				public shared PRC_FECHA As string = "PRC_FECHA"
				public shared USU_ID As string = "USU_ID"
				public shared PRC_FEC_GRAB As string = "PRC_FEC_GRAB"
				public shared PRC_ESTADO As string = "PRC_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property PRC_ID() As Integer
        Get
            Return _pRC_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pRC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PRC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pRC_ID = value
                OnPropertyChanged("PRC_ID")
            End If
        End Set
    End Property

    Private _pRC_ID As Integer

    <DataMember()>
    Public Property PRC_FECHA() As Nullable(Of Date)
        Get
            Return _pRC_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pRC_FECHA, value) Then
                _pRC_FECHA = value
                OnPropertyChanged("PRC_FECHA")
            End If
        End Set
    End Property

    Private _pRC_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property PRC_FEC_GRAB() As Date
        Get
            Return _pRC_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_pRC_FEC_GRAB, value) Then
                _pRC_FEC_GRAB = value
                OnPropertyChanged("PRC_FEC_GRAB")
            End If
        End Set
    End Property

    Private _pRC_FEC_GRAB As Date

    <DataMember()>
    Public Property PRC_ESTADO() As Boolean
        Get
            Return _pRC_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pRC_ESTADO, value) Then
                _pRC_ESTADO = value
                OnPropertyChanged("PRC_ESTADO")
            End If
        End Set
    End Property

    Private _pRC_ESTADO As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property ProcesoCompraDetalle() As TrackableCollection(Of ProcesoCompraDetalle)
        Get
            If _procesoCompraDetalle Is Nothing Then
                _procesoCompraDetalle = New TrackableCollection(Of ProcesoCompraDetalle)
                AddHandler _procesoCompraDetalle.CollectionChanged, AddressOf FixupProcesoCompraDetalle
            End If
            Return _procesoCompraDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of ProcesoCompraDetalle))
            If Not Object.ReferenceEquals(_procesoCompraDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _procesoCompraDetalle IsNot Nothing Then
                    RemoveHandler _procesoCompraDetalle.CollectionChanged, AddressOf FixupProcesoCompraDetalle
                End If
                _procesoCompraDetalle = value
                If _procesoCompraDetalle IsNot Nothing Then
                    AddHandler _procesoCompraDetalle.CollectionChanged, AddressOf FixupProcesoCompraDetalle
                End If
                OnNavigationPropertyChanged("ProcesoCompraDetalle")
            End If
        End Set
    End Property

    Private _procesoCompraDetalle As TrackableCollection(Of ProcesoCompraDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ProcesoCompraDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupProcesoCompraDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ProcesoCompraDetalle In e.NewItems
                item.PRC_ID = PRC_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ProcesoCompraDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ProcesoCompraDetalle In e.OldItems
                item.PRC_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ProcesoCompraDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
