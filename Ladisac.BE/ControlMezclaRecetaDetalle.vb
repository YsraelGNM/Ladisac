'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Articulos))>
Partial Public Class ControlMezclaRecetaDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DMR_ID As string = "DMR_ID"
				public shared CME_ID As string = "CME_ID"
				public shared ART_ID_MP As string = "ART_ID_MP"
				public shared DMR_CANTIDAD As string = "DMR_CANTIDAD"
				public shared CAT_ID As string = "CAT_ID"
				public shared CAT_VOL_PALA As string = "CAT_VOL_PALA"
				public shared DMR_M3 As string = "DMR_M3"
				public shared DMR_M3_BRUTO As string = "DMR_M3_BRUTO"
		    End Structure
	



    <DataMember()>
    Public Property DMR_ID() As Integer
        Get
            Return _dMR_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dMR_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DMR_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dMR_ID = value
                OnPropertyChanged("DMR_ID")
            End If
        End Set
    End Property

    Private _dMR_ID As Integer

    <DataMember()>
    Public Property CME_ID() As Nullable(Of Integer)
        Get
            Return _cME_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cME_ID, value) Then
                ChangeTracker.RecordOriginalValue("CME_ID", _cME_ID)
                _cME_ID = value
                OnPropertyChanged("CME_ID")
            End If
        End Set
    End Property

    Private _cME_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID_MP() As String
        Get
            Return _aRT_ID_MP
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID_MP, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID_MP", _aRT_ID_MP)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID_MP = value
                OnPropertyChanged("ART_ID_MP")
            End If
        End Set
    End Property

    Private _aRT_ID_MP As String

    <DataMember()>
    Public Property DMR_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _dMR_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMR_CANTIDAD, value) Then
                _dMR_CANTIDAD = value
                OnPropertyChanged("DMR_CANTIDAD")
            End If
        End Set
    End Property

    Private _dMR_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property CAT_ID() As Nullable(Of Integer)
        Get
            Return _cAT_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cAT_ID, value) Then
                _cAT_ID = value
                OnPropertyChanged("CAT_ID")
            End If
        End Set
    End Property

    Private _cAT_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property CAT_VOL_PALA() As Nullable(Of Decimal)
        Get
            Return _cAT_VOL_PALA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cAT_VOL_PALA, value) Then
                _cAT_VOL_PALA = value
                OnPropertyChanged("CAT_VOL_PALA")
            End If
        End Set
    End Property

    Private _cAT_VOL_PALA As Nullable(Of Decimal)

    <DataMember()>
    Public Property DMR_M3() As Nullable(Of Decimal)
        Get
            Return _dMR_M3
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMR_M3, value) Then
                _dMR_M3 = value
                OnPropertyChanged("DMR_M3")
            End If
        End Set
    End Property

    Private _dMR_M3 As Nullable(Of Decimal)

    <DataMember()>
    Public Property DMR_M3_BRUTO() As Nullable(Of Decimal)
        Get
            Return _dMR_M3_BRUTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMR_M3_BRUTO, value) Then
                _dMR_M3_BRUTO = value
                OnPropertyChanged("DMR_M3_BRUTO")
            End If
        End Set
    End Property

    Private _dMR_M3_BRUTO As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Articulos = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID_MP = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID_MP = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
