'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Personas))>
<KnownType(GetType(Placas))>
<KnownType(GetType(GuiaRemisionDetalle))>
Partial Public Class GuiaRemision
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared GUI_ID As string = "GUI_ID"
				public shared GUI_NRO As string = "GUI_NRO"
				public shared GUI_PTO_PARTIDA As string = "GUI_PTO_PARTIDA"
				public shared PER_ID_PROVEEDOR As string = "PER_ID_PROVEEDOR"
				public shared GUI_FECHA As string = "GUI_FECHA"
				public shared GUI_FEC_INI_TRAS As string = "GUI_FEC_INI_TRAS"
				public shared GUI_MOTIVO As string = "GUI_MOTIVO"
				public shared PLA_ID As string = "PLA_ID"
				public shared PER_ID_EMP_TRANSP As string = "PER_ID_EMP_TRANSP"
				public shared PER_ID_CHOFER As string = "PER_ID_CHOFER"
				public shared GUI_LICENCIA As string = "GUI_LICENCIA"
				public shared GUI_MARCA As string = "GUI_MARCA"
				public shared GUI_PLACA As string = "GUI_PLACA"
				public shared USU_ID As string = "USU_ID"
				public shared GUI_FEC_GRAB As string = "GUI_FEC_GRAB"
				public shared GUI_ESTADO As string = "GUI_ESTADO"
				public shared GUI_CERTIFICADO As string = "GUI_CERTIFICADO"
				public shared DMO_ID As string = "DMO_ID"
				public shared GUI_SERIE As string = "GUI_SERIE"
				public shared GUI_PTO_LLEGADA As string = "GUI_PTO_LLEGADA"
		    End Structure
	



    <DataMember()>
    Public Property GUI_ID() As Integer
        Get
            Return _gUI_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_gUI_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'GUI_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _gUI_ID = value
                OnPropertyChanged("GUI_ID")
            End If
        End Set
    End Property

    Private _gUI_ID As Integer

    <DataMember()>
    Public Property GUI_NRO() As String
        Get
            Return _gUI_NRO
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_NRO, value) Then
                _gUI_NRO = value
                OnPropertyChanged("GUI_NRO")
            End If
        End Set
    End Property

    Private _gUI_NRO As String

    <DataMember()>
    Public Property GUI_PTO_PARTIDA() As String
        Get
            Return _gUI_PTO_PARTIDA
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_PTO_PARTIDA, value) Then
                _gUI_PTO_PARTIDA = value
                OnPropertyChanged("GUI_PTO_PARTIDA")
            End If
        End Set
    End Property

    Private _gUI_PTO_PARTIDA As String

    <DataMember()>
    Public Property PER_ID_PROVEEDOR() As String
        Get
            Return _pER_ID_PROVEEDOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_PROVEEDOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_PROVEEDOR", _pER_ID_PROVEEDOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_PROVEEDOR = value
                OnPropertyChanged("PER_ID_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_ID_PROVEEDOR As String

    <DataMember()>
    Public Property GUI_FECHA() As Nullable(Of Date)
        Get
            Return _gUI_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_gUI_FECHA, value) Then
                _gUI_FECHA = value
                OnPropertyChanged("GUI_FECHA")
            End If
        End Set
    End Property

    Private _gUI_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property GUI_FEC_INI_TRAS() As Nullable(Of Date)
        Get
            Return _gUI_FEC_INI_TRAS
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_gUI_FEC_INI_TRAS, value) Then
                _gUI_FEC_INI_TRAS = value
                OnPropertyChanged("GUI_FEC_INI_TRAS")
            End If
        End Set
    End Property

    Private _gUI_FEC_INI_TRAS As Nullable(Of Date)

    <DataMember()>
    Public Property GUI_MOTIVO() As Nullable(Of Integer)
        Get
            Return _gUI_MOTIVO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_gUI_MOTIVO, value) Then
                _gUI_MOTIVO = value
                OnPropertyChanged("GUI_MOTIVO")
            End If
        End Set
    End Property

    Private _gUI_MOTIVO As Nullable(Of Integer)

    <DataMember()>
    Public Property PLA_ID() As String
        Get
            Return _pLA_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pLA_ID, value) Then
                ChangeTracker.RecordOriginalValue("PLA_ID", _pLA_ID)
                If Not IsDeserializing Then
                    If Placas IsNot Nothing AndAlso Not Equals(Placas.PLA_ID, value) Then
                        Placas = Nothing
                    End If
                End If
                _pLA_ID = value
                OnPropertyChanged("PLA_ID")
            End If
        End Set
    End Property

    Private _pLA_ID As String

    <DataMember()>
    Public Property PER_ID_EMP_TRANSP() As String
        Get
            Return _pER_ID_EMP_TRANSP
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_EMP_TRANSP, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_EMP_TRANSP", _pER_ID_EMP_TRANSP)
                If Not IsDeserializing Then
                    If Personas1 IsNot Nothing AndAlso Not Equals(Personas1.PER_ID, value) Then
                        Personas1 = Nothing
                    End If
                End If
                _pER_ID_EMP_TRANSP = value
                OnPropertyChanged("PER_ID_EMP_TRANSP")
            End If
        End Set
    End Property

    Private _pER_ID_EMP_TRANSP As String

    <DataMember()>
    Public Property PER_ID_CHOFER() As String
        Get
            Return _pER_ID_CHOFER
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_CHOFER, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_CHOFER", _pER_ID_CHOFER)
                If Not IsDeserializing Then
                    If Personas2 IsNot Nothing AndAlso Not Equals(Personas2.PER_ID, value) Then
                        Personas2 = Nothing
                    End If
                End If
                _pER_ID_CHOFER = value
                OnPropertyChanged("PER_ID_CHOFER")
            End If
        End Set
    End Property

    Private _pER_ID_CHOFER As String

    <DataMember()>
    Public Property GUI_LICENCIA() As String
        Get
            Return _gUI_LICENCIA
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_LICENCIA, value) Then
                _gUI_LICENCIA = value
                OnPropertyChanged("GUI_LICENCIA")
            End If
        End Set
    End Property

    Private _gUI_LICENCIA As String

    <DataMember()>
    Public Property GUI_MARCA() As String
        Get
            Return _gUI_MARCA
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_MARCA, value) Then
                _gUI_MARCA = value
                OnPropertyChanged("GUI_MARCA")
            End If
        End Set
    End Property

    Private _gUI_MARCA As String

    <DataMember()>
    Public Property GUI_PLACA() As String
        Get
            Return _gUI_PLACA
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_PLACA, value) Then
                _gUI_PLACA = value
                OnPropertyChanged("GUI_PLACA")
            End If
        End Set
    End Property

    Private _gUI_PLACA As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property GUI_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _gUI_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_gUI_FEC_GRAB, value) Then
                _gUI_FEC_GRAB = value
                OnPropertyChanged("GUI_FEC_GRAB")
            End If
        End Set
    End Property

    Private _gUI_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property GUI_ESTADO() As Nullable(Of Boolean)
        Get
            Return _gUI_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_gUI_ESTADO, value) Then
                _gUI_ESTADO = value
                OnPropertyChanged("GUI_ESTADO")
            End If
        End Set
    End Property

    Private _gUI_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property GUI_CERTIFICADO() As String
        Get
            Return _gUI_CERTIFICADO
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_CERTIFICADO, value) Then
                _gUI_CERTIFICADO = value
                OnPropertyChanged("GUI_CERTIFICADO")
            End If
        End Set
    End Property

    Private _gUI_CERTIFICADO As String

    <DataMember()>
    Public Property DMO_ID() As Nullable(Of Integer)
        Get
            Return _dMO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dMO_ID, value) Then
                _dMO_ID = value
                OnPropertyChanged("DMO_ID")
            End If
        End Set
    End Property

    Private _dMO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property GUI_SERIE() As String
        Get
            Return _gUI_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_SERIE, value) Then
                _gUI_SERIE = value
                OnPropertyChanged("GUI_SERIE")
            End If
        End Set
    End Property

    Private _gUI_SERIE As String

    <DataMember()>
    Public Property GUI_PTO_LLEGADA() As String
        Get
            Return _gUI_PTO_LLEGADA
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_PTO_LLEGADA, value) Then
                _gUI_PTO_LLEGADA = value
                OnPropertyChanged("GUI_PTO_LLEGADA")
            End If
        End Set
    End Property

    Private _gUI_PTO_LLEGADA As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Personas1() As Personas
        Get
            Return _personas1
        End Get
        Set(ByVal value As Personas)
            If _personas1 IsNot value Then
                Dim previousValue As Personas = _personas1
                _personas1 = value
                FixupPersonas1(previousValue)
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As Personas


    <DataMember()>
    Public Property Personas2() As Personas
        Get
            Return _personas2
        End Get
        Set(ByVal value As Personas)
            If _personas2 IsNot value Then
                Dim previousValue As Personas = _personas2
                _personas2 = value
                FixupPersonas2(previousValue)
                OnNavigationPropertyChanged("Personas2")
            End If
        End Set
    End Property

    Private _personas2 As Personas


    <DataMember()>
    Public Property Placas() As Placas
        Get
            Return _placas
        End Get
        Set(ByVal value As Placas)
            If _placas IsNot value Then
                Dim previousValue As Placas = _placas
                _placas = value
                FixupPlacas(previousValue)
                OnNavigationPropertyChanged("Placas")
            End If
        End Set
    End Property

    Private _placas As Placas


    <DataMember()>
    Public Property GuiaRemisionDetalle() As TrackableCollection(Of GuiaRemisionDetalle)
        Get
            If _guiaRemisionDetalle Is Nothing Then
                _guiaRemisionDetalle = New TrackableCollection(Of GuiaRemisionDetalle)
                AddHandler _guiaRemisionDetalle.CollectionChanged, AddressOf FixupGuiaRemisionDetalle
            End If
            Return _guiaRemisionDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of GuiaRemisionDetalle))
            If Not Object.ReferenceEquals(_guiaRemisionDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _guiaRemisionDetalle IsNot Nothing Then
                    RemoveHandler _guiaRemisionDetalle.CollectionChanged, AddressOf FixupGuiaRemisionDetalle
                End If
                _guiaRemisionDetalle = value
                If _guiaRemisionDetalle IsNot Nothing Then
                    AddHandler _guiaRemisionDetalle.CollectionChanged, AddressOf FixupGuiaRemisionDetalle
                End If
                OnNavigationPropertyChanged("GuiaRemisionDetalle")
            End If
        End Set
    End Property

    Private _guiaRemisionDetalle As TrackableCollection(Of GuiaRemisionDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Personas = Nothing
        Personas1 = Nothing
        Personas2 = Nothing
        Placas = Nothing
        GuiaRemisionDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_PROVEEDOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_PROVEEDOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas1 IsNot Nothing Then
            PER_ID_EMP_TRANSP = Personas1.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_EMP_TRANSP = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas1") AndAlso
                ChangeTracker.OriginalValues("Personas1") Is Personas1 Then
                ChangeTracker.OriginalValues.Remove("Personas1")
            Else
                ChangeTracker.RecordOriginalValue("Personas1", previousValue)
            End If
            If Personas1 IsNot Nothing AndAlso Not Personas1.ChangeTracker.ChangeTrackingEnabled Then
                Personas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas2(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas2 IsNot Nothing Then
            PER_ID_CHOFER = Personas2.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_CHOFER = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas2") AndAlso
                ChangeTracker.OriginalValues("Personas2") Is Personas2 Then
                ChangeTracker.OriginalValues.Remove("Personas2")
            Else
                ChangeTracker.RecordOriginalValue("Personas2", previousValue)
            End If
            If Personas2 IsNot Nothing AndAlso Not Personas2.ChangeTracker.ChangeTrackingEnabled Then
                Personas2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPlacas(ByVal previousValue As Placas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Placas IsNot Nothing Then
            PLA_ID = Placas.PLA_ID
        ElseIf Not skipKeys Then
            PLA_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Placas") AndAlso
                ChangeTracker.OriginalValues("Placas") Is Placas Then
                ChangeTracker.OriginalValues.Remove("Placas")
            Else
                ChangeTracker.RecordOriginalValue("Placas", previousValue)
            End If
            If Placas IsNot Nothing AndAlso Not Placas.ChangeTracker.ChangeTrackingEnabled Then
                Placas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupGuiaRemisionDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As GuiaRemisionDetalle In e.NewItems
                item.GUI_ID = GUI_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("GuiaRemisionDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As GuiaRemisionDetalle In e.OldItems
                item.GUI_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("GuiaRemisionDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
