'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(OrdenDespachoDetalle))>
Partial Public Class OrdenDespacho
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared ODE_ID As string = "ODE_ID"
				public shared ODE_FECHA As string = "ODE_FECHA"
				public shared TICKET As string = "TICKET"
				public shared UNI_ID As string = "UNI_ID"
				public shared PLACA As string = "PLACA"
				public shared ODE_DESTINO As string = "ODE_DESTINO"
				public shared CARGA As string = "CARGA"
				public shared USU_ID As string = "USU_ID"
				public shared ODE_FEC_GRAB As string = "ODE_FEC_GRAB"
				public shared ODE_ESTADO As string = "ODE_ESTADO"
				public shared TARA As string = "TARA"
		    End Structure
	



    <DataMember()>
    Public Property ODE_ID() As Integer
        Get
            Return _oDE_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_oDE_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'ODE_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _oDE_ID = value
                OnPropertyChanged("ODE_ID")
            End If
        End Set
    End Property

    Private _oDE_ID As Integer

    <DataMember()>
    Public Property ODE_FECHA() As Nullable(Of Date)
        Get
            Return _oDE_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oDE_FECHA, value) Then
                _oDE_FECHA = value
                OnPropertyChanged("ODE_FECHA")
            End If
        End Set
    End Property

    Private _oDE_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property TICKET() As Nullable(Of Integer)
        Get
            Return _tICKET
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_tICKET, value) Then
                _tICKET = value
                OnPropertyChanged("TICKET")
            End If
        End Set
    End Property

    Private _tICKET As Nullable(Of Integer)

    <DataMember()>
    Public Property UNI_ID() As String
        Get
            Return _uNI_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNI_ID, value) Then
                _uNI_ID = value
                OnPropertyChanged("UNI_ID")
            End If
        End Set
    End Property

    Private _uNI_ID As String

    <DataMember()>
    Public Property PLACA() As String
        Get
            Return _pLACA
        End Get
        Set(ByVal value As String)
            If Not Equals(_pLACA, value) Then
                _pLACA = value
                OnPropertyChanged("PLACA")
            End If
        End Set
    End Property

    Private _pLACA As String

    <DataMember()>
    Public Property ODE_DESTINO() As String
        Get
            Return _oDE_DESTINO
        End Get
        Set(ByVal value As String)
            If Not Equals(_oDE_DESTINO, value) Then
                _oDE_DESTINO = value
                OnPropertyChanged("ODE_DESTINO")
            End If
        End Set
    End Property

    Private _oDE_DESTINO As String

    <DataMember()>
    Public Property CARGA() As Nullable(Of Decimal)
        Get
            Return _cARGA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cARGA, value) Then
                _cARGA = value
                OnPropertyChanged("CARGA")
            End If
        End Set
    End Property

    Private _cARGA As Nullable(Of Decimal)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property ODE_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _oDE_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oDE_FEC_GRAB, value) Then
                _oDE_FEC_GRAB = value
                OnPropertyChanged("ODE_FEC_GRAB")
            End If
        End Set
    End Property

    Private _oDE_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property ODE_ESTADO() As Nullable(Of Boolean)
        Get
            Return _oDE_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_oDE_ESTADO, value) Then
                _oDE_ESTADO = value
                OnPropertyChanged("ODE_ESTADO")
            End If
        End Set
    End Property

    Private _oDE_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property TARA() As Nullable(Of Decimal)
        Get
            Return _tARA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_tARA, value) Then
                _tARA = value
                OnPropertyChanged("TARA")
            End If
        End Set
    End Property

    Private _tARA As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property OrdenDespachoDetalle() As TrackableCollection(Of OrdenDespachoDetalle)
        Get
            If _ordenDespachoDetalle Is Nothing Then
                _ordenDespachoDetalle = New TrackableCollection(Of OrdenDespachoDetalle)
                AddHandler _ordenDespachoDetalle.CollectionChanged, AddressOf FixupOrdenDespachoDetalle
            End If
            Return _ordenDespachoDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenDespachoDetalle))
            If Not Object.ReferenceEquals(_ordenDespachoDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenDespachoDetalle IsNot Nothing Then
                    RemoveHandler _ordenDespachoDetalle.CollectionChanged, AddressOf FixupOrdenDespachoDetalle
                End If
                _ordenDespachoDetalle = value
                If _ordenDespachoDetalle IsNot Nothing Then
                    AddHandler _ordenDespachoDetalle.CollectionChanged, AddressOf FixupOrdenDespachoDetalle
                End If
                OnNavigationPropertyChanged("OrdenDespachoDetalle")
            End If
        End Set
    End Property

    Private _ordenDespachoDetalle As TrackableCollection(Of OrdenDespachoDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        OrdenDespachoDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupOrdenDespachoDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenDespachoDetalle In e.NewItems
                item.OrdenDespacho = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenDespachoDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenDespachoDetalle In e.OldItems
                If ReferenceEquals(item.OrdenDespacho, Me) Then
                    item.OrdenDespacho = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenDespachoDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
