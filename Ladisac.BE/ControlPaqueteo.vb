'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Produccion))>
<KnownType(GetType(ControlPaqueteoCancha))>
Partial Public Class ControlPaqueteo
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PQT_ID As string = "PQT_ID"
				public shared PRO_ID As string = "PRO_ID"
				public shared PQT_CANT_MESA As string = "PQT_CANT_MESA"
				public shared PQT_CANT_ALA As string = "PQT_CANT_ALA"
				public shared PQT_MESA As string = "PQT_MESA"
				public shared PQT_ALA As string = "PQT_ALA"
				public shared PQT_RECICLAJE As string = "PQT_RECICLAJE"
				public shared PQT_OBSERVCION As string = "PQT_OBSERVCION"
				public shared USU_ID As string = "USU_ID"
				public shared PQT_FEC_GRAB As string = "PQT_FEC_GRAB"
				public shared PQT_ESTADO As string = "PQT_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property PQT_ID() As Integer
        Get
            Return _pQT_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pQT_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PQT_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pQT_ID = value
                OnPropertyChanged("PQT_ID")
            End If
        End Set
    End Property

    Private _pQT_ID As Integer

    <DataMember()>
    Public Property PRO_ID() As Integer
        Get
            Return _pRO_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pRO_ID, value) Then
                ChangeTracker.RecordOriginalValue("PRO_ID", _pRO_ID)
                If Not IsDeserializing Then
                    If Produccion IsNot Nothing AndAlso Not Equals(Produccion.PRO_ID, value) Then
                        Produccion = Nothing
                    End If
                End If
                _pRO_ID = value
                OnPropertyChanged("PRO_ID")
            End If
        End Set
    End Property

    Private _pRO_ID As Integer

    <DataMember()>
    Public Property PQT_CANT_MESA() As Nullable(Of Integer)
        Get
            Return _pQT_CANT_MESA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pQT_CANT_MESA, value) Then
                _pQT_CANT_MESA = value
                OnPropertyChanged("PQT_CANT_MESA")
            End If
        End Set
    End Property

    Private _pQT_CANT_MESA As Nullable(Of Integer)

    <DataMember()>
    Public Property PQT_CANT_ALA() As Nullable(Of Integer)
        Get
            Return _pQT_CANT_ALA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pQT_CANT_ALA, value) Then
                _pQT_CANT_ALA = value
                OnPropertyChanged("PQT_CANT_ALA")
            End If
        End Set
    End Property

    Private _pQT_CANT_ALA As Nullable(Of Integer)

    <DataMember()>
    Public Property PQT_MESA() As Nullable(Of Integer)
        Get
            Return _pQT_MESA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pQT_MESA, value) Then
                _pQT_MESA = value
                OnPropertyChanged("PQT_MESA")
            End If
        End Set
    End Property

    Private _pQT_MESA As Nullable(Of Integer)

    <DataMember()>
    Public Property PQT_ALA() As Nullable(Of Integer)
        Get
            Return _pQT_ALA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pQT_ALA, value) Then
                _pQT_ALA = value
                OnPropertyChanged("PQT_ALA")
            End If
        End Set
    End Property

    Private _pQT_ALA As Nullable(Of Integer)

    <DataMember()>
    Public Property PQT_RECICLAJE() As Nullable(Of Integer)
        Get
            Return _pQT_RECICLAJE
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pQT_RECICLAJE, value) Then
                _pQT_RECICLAJE = value
                OnPropertyChanged("PQT_RECICLAJE")
            End If
        End Set
    End Property

    Private _pQT_RECICLAJE As Nullable(Of Integer)

    <DataMember()>
    Public Property PQT_OBSERVCION() As String
        Get
            Return _pQT_OBSERVCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pQT_OBSERVCION, value) Then
                _pQT_OBSERVCION = value
                OnPropertyChanged("PQT_OBSERVCION")
            End If
        End Set
    End Property

    Private _pQT_OBSERVCION As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property PQT_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _pQT_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pQT_FEC_GRAB, value) Then
                _pQT_FEC_GRAB = value
                OnPropertyChanged("PQT_FEC_GRAB")
            End If
        End Set
    End Property

    Private _pQT_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property PQT_ESTADO() As Nullable(Of Boolean)
        Get
            Return _pQT_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pQT_ESTADO, value) Then
                _pQT_ESTADO = value
                OnPropertyChanged("PQT_ESTADO")
            End If
        End Set
    End Property

    Private _pQT_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Produccion() As Produccion
        Get
            Return _produccion
        End Get
        Set(ByVal value As Produccion)
            If _produccion IsNot value Then
                Dim previousValue As Produccion = _produccion
                _produccion = value
                FixupProduccion(previousValue)
                OnNavigationPropertyChanged("Produccion")
            End If
        End Set
    End Property

    Private _produccion As Produccion


    <DataMember()>
    Public Property ControlPaqueteoCancha() As TrackableCollection(Of ControlPaqueteoCancha)
        Get
            If _controlPaqueteoCancha Is Nothing Then
                _controlPaqueteoCancha = New TrackableCollection(Of ControlPaqueteoCancha)
                AddHandler _controlPaqueteoCancha.CollectionChanged, AddressOf FixupControlPaqueteoCancha
            End If
            Return _controlPaqueteoCancha
        End Get
        Set(ByVal value As TrackableCollection(Of ControlPaqueteoCancha))
            If Not Object.ReferenceEquals(_controlPaqueteoCancha, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _controlPaqueteoCancha IsNot Nothing Then
                    RemoveHandler _controlPaqueteoCancha.CollectionChanged, AddressOf FixupControlPaqueteoCancha
                End If
                _controlPaqueteoCancha = value
                If _controlPaqueteoCancha IsNot Nothing Then
                    AddHandler _controlPaqueteoCancha.CollectionChanged, AddressOf FixupControlPaqueteoCancha
                End If
                OnNavigationPropertyChanged("ControlPaqueteoCancha")
            End If
        End Set
    End Property

    Private _controlPaqueteoCancha As TrackableCollection(Of ControlPaqueteoCancha)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Produccion = Nothing
        ControlPaqueteoCancha.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupProduccion(ByVal previousValue As Produccion)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ControlPaqueteo.Contains(Me) Then
            previousValue.ControlPaqueteo.Remove(Me)
        End If

        If Produccion IsNot Nothing Then
            If Not Produccion.ControlPaqueteo.Contains(Me) Then
                Produccion.ControlPaqueteo.Add(Me)
            End If

            PRO_ID = Produccion.PRO_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Produccion") AndAlso
                ChangeTracker.OriginalValues("Produccion") Is Produccion Then
                ChangeTracker.OriginalValues.Remove("Produccion")
            Else
                ChangeTracker.RecordOriginalValue("Produccion", previousValue)
            End If
            If Produccion IsNot Nothing AndAlso Not Produccion.ChangeTracker.ChangeTrackingEnabled Then
                Produccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupControlPaqueteoCancha(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ControlPaqueteoCancha In e.NewItems
                item.ControlPaqueteo = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ControlPaqueteoCancha", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ControlPaqueteoCancha In e.OldItems
                If ReferenceEquals(item.ControlPaqueteo, Me) Then
                    item.ControlPaqueteo = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ControlPaqueteoCancha", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
