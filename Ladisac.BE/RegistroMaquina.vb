'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Entidad))>
<KnownType(GetType(Personas))>
Partial Public Class RegistroMaquina
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared RMA_ID As string = "RMA_ID"
				public shared ENO_ID As string = "ENO_ID"
				public shared RMA_FECHA As string = "RMA_FECHA"
				public shared RMA_KILOMETRAJE As string = "RMA_KILOMETRAJE"
				public shared RMA_HOROMETRO As string = "RMA_HOROMETRO"
				public shared RMA_TN As string = "RMA_TN"
				public shared RMA_DIA As string = "RMA_DIA"
				public shared RMA_USO As string = "RMA_USO"
				public shared USU_ID As string = "USU_ID"
				public shared RMA_FEC_GRAB As string = "RMA_FEC_GRAB"
				public shared RMA_ESTADO As string = "RMA_ESTADO"
				public shared PER_ID_CHOFER As string = "PER_ID_CHOFER"
				public shared RMA_OBSERVACION As string = "RMA_OBSERVACION"
		    End Structure
	



    <DataMember()>
    Public Property RMA_ID() As Integer
        Get
            Return _rMA_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_rMA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'RMA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _rMA_ID = value
                OnPropertyChanged("RMA_ID")
            End If
        End Set
    End Property

    Private _rMA_ID As Integer

    <DataMember()>
    Public Property ENO_ID() As Nullable(Of Integer)
        Get
            Return _eNO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID", _eNO_ID)
                If Not IsDeserializing Then
                    If Entidad IsNot Nothing AndAlso Not Equals(Entidad.ENO_ID, value) Then
                        Entidad = Nothing
                    End If
                End If
                _eNO_ID = value
                OnPropertyChanged("ENO_ID")
            End If
        End Set
    End Property

    Private _eNO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property RMA_FECHA() As Nullable(Of Date)
        Get
            Return _rMA_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rMA_FECHA, value) Then
                _rMA_FECHA = value
                OnPropertyChanged("RMA_FECHA")
            End If
        End Set
    End Property

    Private _rMA_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property RMA_KILOMETRAJE() As Nullable(Of Decimal)
        Get
            Return _rMA_KILOMETRAJE
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rMA_KILOMETRAJE, value) Then
                _rMA_KILOMETRAJE = value
                OnPropertyChanged("RMA_KILOMETRAJE")
            End If
        End Set
    End Property

    Private _rMA_KILOMETRAJE As Nullable(Of Decimal)

    <DataMember()>
    Public Property RMA_HOROMETRO() As Nullable(Of Decimal)
        Get
            Return _rMA_HOROMETRO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rMA_HOROMETRO, value) Then
                _rMA_HOROMETRO = value
                OnPropertyChanged("RMA_HOROMETRO")
            End If
        End Set
    End Property

    Private _rMA_HOROMETRO As Nullable(Of Decimal)

    <DataMember()>
    Public Property RMA_TN() As Nullable(Of Decimal)
        Get
            Return _rMA_TN
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rMA_TN, value) Then
                _rMA_TN = value
                OnPropertyChanged("RMA_TN")
            End If
        End Set
    End Property

    Private _rMA_TN As Nullable(Of Decimal)

    <DataMember()>
    Public Property RMA_DIA() As Nullable(Of Integer)
        Get
            Return _rMA_DIA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rMA_DIA, value) Then
                _rMA_DIA = value
                OnPropertyChanged("RMA_DIA")
            End If
        End Set
    End Property

    Private _rMA_DIA As Nullable(Of Integer)

    <DataMember()>
    Public Property RMA_USO() As Nullable(Of Decimal)
        Get
            Return _rMA_USO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rMA_USO, value) Then
                _rMA_USO = value
                OnPropertyChanged("RMA_USO")
            End If
        End Set
    End Property

    Private _rMA_USO As Nullable(Of Decimal)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property RMA_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _rMA_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rMA_FEC_GRAB, value) Then
                _rMA_FEC_GRAB = value
                OnPropertyChanged("RMA_FEC_GRAB")
            End If
        End Set
    End Property

    Private _rMA_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property RMA_ESTADO() As Nullable(Of Boolean)
        Get
            Return _rMA_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_rMA_ESTADO, value) Then
                _rMA_ESTADO = value
                OnPropertyChanged("RMA_ESTADO")
            End If
        End Set
    End Property

    Private _rMA_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property PER_ID_CHOFER() As String
        Get
            Return _pER_ID_CHOFER
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_CHOFER, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_CHOFER", _pER_ID_CHOFER)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_CHOFER = value
                OnPropertyChanged("PER_ID_CHOFER")
            End If
        End Set
    End Property

    Private _pER_ID_CHOFER As String

    <DataMember()>
    Public Property RMA_OBSERVACION() As String
        Get
            Return _rMA_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_rMA_OBSERVACION, value) Then
                _rMA_OBSERVACION = value
                OnPropertyChanged("RMA_OBSERVACION")
            End If
        End Set
    End Property

    Private _rMA_OBSERVACION As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Entidad() As Entidad
        Get
            Return _entidad
        End Get
        Set(ByVal value As Entidad)
            If _entidad IsNot value Then
                Dim previousValue As Entidad = _entidad
                _entidad = value
                FixupEntidad(previousValue)
                OnNavigationPropertyChanged("Entidad")
            End If
        End Set
    End Property

    Private _entidad As Entidad


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Entidad = Nothing
        Personas = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupEntidad(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Entidad IsNot Nothing Then
            ENO_ID = Entidad.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad") AndAlso
                ChangeTracker.OriginalValues("Entidad") Is Entidad Then
                ChangeTracker.OriginalValues.Remove("Entidad")
            Else
                ChangeTracker.RecordOriginalValue("Entidad", previousValue)
            End If
            If Entidad IsNot Nothing AndAlso Not Entidad.ChangeTracker.ChangeTrackingEnabled Then
                Entidad.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.RegistroMaquina.Contains(Me) Then
            previousValue.RegistroMaquina.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.RegistroMaquina.Contains(Me) Then
                Personas.RegistroMaquina.Add(Me)
            End If

            PER_ID_CHOFER = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_CHOFER = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
