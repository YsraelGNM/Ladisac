'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(DetalleDocumentos))>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(DetalleTesoreria))>
<KnownType(GetType(MovimientoCajaBanco))>
<KnownType(GetType(RolOpeCtaCteEntregas))>
<KnownType(GetType(DetalleAsientosManuales))>
<KnownType(GetType(Documentos))>
<KnownType(GetType(Despachos))>
<KnownType(GetType(RolOpeCtaCte))>
<KnownType(GetType(DetalleAfectaDocumentos))>
<KnownType(GetType(DetalleAfectaProductoDocumentos))>
<KnownType(GetType(DetalleDocumentosPromocion))>
<KnownType(GetType(DetallePermisoCuentaCorriente))>
<KnownType(GetType(DetallePrestamo))>
Partial Public Class CtaCte
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CCT_ID As string = "CCT_ID"
				public shared CCT_DESCRIPCION As string = "CCT_DESCRIPCION"
				public shared CCT_ACT_PAS As string = "CCT_ACT_PAS"
				public shared USU_ID As string = "USU_ID"
				public shared CCT_FEC_GRAB As string = "CCT_FEC_GRAB"
				public shared CCT_ESTADO As string = "CCT_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property CCT_ID() As String
        Get
            Return _cCT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CCT_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cCT_ID = value
                OnPropertyChanged("CCT_ID")
            End If
        End Set
    End Property

    Private _cCT_ID As String

    <DataMember()>
    Public Property CCT_DESCRIPCION() As String
        Get
            Return _cCT_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_DESCRIPCION, value) Then
                _cCT_DESCRIPCION = value
                OnPropertyChanged("CCT_DESCRIPCION")
            End If
        End Set
    End Property

    Private _cCT_DESCRIPCION As String

    <DataMember()>
    Public Property CCT_ACT_PAS() As Boolean
        Get
            Return _cCT_ACT_PAS
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cCT_ACT_PAS, value) Then
                _cCT_ACT_PAS = value
                OnPropertyChanged("CCT_ACT_PAS")
            End If
        End Set
    End Property

    Private _cCT_ACT_PAS As Boolean

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CCT_FEC_GRAB() As Date
        Get
            Return _cCT_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cCT_FEC_GRAB, value) Then
                _cCT_FEC_GRAB = value
                OnPropertyChanged("CCT_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cCT_FEC_GRAB As Date

    <DataMember()>
    Public Property CCT_ESTADO() As Boolean
        Get
            Return _cCT_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cCT_ESTADO, value) Then
                _cCT_ESTADO = value
                OnPropertyChanged("CCT_ESTADO")
            End If
        End Set
    End Property

    Private _cCT_ESTADO As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property DetalleDocumentos() As TrackableCollection(Of DetalleDocumentos)
        Get
            If _detalleDocumentos Is Nothing Then
                _detalleDocumentos = New TrackableCollection(Of DetalleDocumentos)
                AddHandler _detalleDocumentos.CollectionChanged, AddressOf FixupDetalleDocumentos
            End If
            Return _detalleDocumentos
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleDocumentos))
            If Not Object.ReferenceEquals(_detalleDocumentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleDocumentos IsNot Nothing Then
                    RemoveHandler _detalleDocumentos.CollectionChanged, AddressOf FixupDetalleDocumentos
                End If
                _detalleDocumentos = value
                If _detalleDocumentos IsNot Nothing Then
                    AddHandler _detalleDocumentos.CollectionChanged, AddressOf FixupDetalleDocumentos
                End If
                OnNavigationPropertyChanged("DetalleDocumentos")
            End If
        End Set
    End Property

    Private _detalleDocumentos As TrackableCollection(Of DetalleDocumentos)

    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property DetalleTesoreria() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria Is Nothing Then
                _detalleTesoreria = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
            End If
            Return _detalleTesoreria
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria IsNot Nothing Then
                    RemoveHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                _detalleTesoreria = value
                If _detalleTesoreria IsNot Nothing Then
                    AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                OnNavigationPropertyChanged("DetalleTesoreria")
            End If
        End Set
    End Property

    Private _detalleTesoreria As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property DetalleTesoreria1() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria1 Is Nothing Then
                _detalleTesoreria1 = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
            End If
            Return _detalleTesoreria1
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria1 IsNot Nothing Then
                    RemoveHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
                End If
                _detalleTesoreria1 = value
                If _detalleTesoreria1 IsNot Nothing Then
                    AddHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
                End If
                OnNavigationPropertyChanged("DetalleTesoreria1")
            End If
        End Set
    End Property

    Private _detalleTesoreria1 As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property DetalleTesoreria2() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria2 Is Nothing Then
                _detalleTesoreria2 = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria2.CollectionChanged, AddressOf FixupDetalleTesoreria2
            End If
            Return _detalleTesoreria2
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria2 IsNot Nothing Then
                    RemoveHandler _detalleTesoreria2.CollectionChanged, AddressOf FixupDetalleTesoreria2
                End If
                _detalleTesoreria2 = value
                If _detalleTesoreria2 IsNot Nothing Then
                    AddHandler _detalleTesoreria2.CollectionChanged, AddressOf FixupDetalleTesoreria2
                End If
                OnNavigationPropertyChanged("DetalleTesoreria2")
            End If
        End Set
    End Property

    Private _detalleTesoreria2 As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property MovimientoCajaBanco() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco Is Nothing Then
                _movimientoCajaBanco = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
            End If
            Return _movimientoCajaBanco
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                _movimientoCajaBanco = value
                If _movimientoCajaBanco IsNot Nothing Then
                    AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property MovimientoCajaBanco1() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco1 Is Nothing Then
                _movimientoCajaBanco1 = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
            End If
            Return _movimientoCajaBanco1
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco1 IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
                End If
                _movimientoCajaBanco1 = value
                If _movimientoCajaBanco1 IsNot Nothing Then
                    AddHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco1")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco1 As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property RolOpeCtaCteEntregas() As TrackableCollection(Of RolOpeCtaCteEntregas)
        Get
            If _rolOpeCtaCteEntregas Is Nothing Then
                _rolOpeCtaCteEntregas = New TrackableCollection(Of RolOpeCtaCteEntregas)
                AddHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
            End If
            Return _rolOpeCtaCteEntregas
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCteEntregas))
            If Not Object.ReferenceEquals(_rolOpeCtaCteEntregas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCteEntregas IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As RolOpeCtaCteEntregas In _rolOpeCtaCteEntregas
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _rolOpeCtaCteEntregas = value
                If _rolOpeCtaCteEntregas IsNot Nothing Then
                    AddHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As RolOpeCtaCteEntregas In _rolOpeCtaCteEntregas
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("RolOpeCtaCteEntregas")
            End If
        End Set
    End Property

    Private _rolOpeCtaCteEntregas As TrackableCollection(Of RolOpeCtaCteEntregas)

    <DataMember()>
    Public Property DetalleAsientosManuales() As TrackableCollection(Of DetalleAsientosManuales)
        Get
            If _detalleAsientosManuales Is Nothing Then
                _detalleAsientosManuales = New TrackableCollection(Of DetalleAsientosManuales)
                AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
            End If
            Return _detalleAsientosManuales
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAsientosManuales))
            If Not Object.ReferenceEquals(_detalleAsientosManuales, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAsientosManuales IsNot Nothing Then
                    RemoveHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                _detalleAsientosManuales = value
                If _detalleAsientosManuales IsNot Nothing Then
                    AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                OnNavigationPropertyChanged("DetalleAsientosManuales")
            End If
        End Set
    End Property

    Private _detalleAsientosManuales As TrackableCollection(Of DetalleAsientosManuales)

    <DataMember()>
    Public Property Documentos() As TrackableCollection(Of Documentos)
        Get
            If _documentos Is Nothing Then
                _documentos = New TrackableCollection(Of Documentos)
                AddHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
            End If
            Return _documentos
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos IsNot Nothing Then
                    RemoveHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
                End If
                _documentos = value
                If _documentos IsNot Nothing Then
                    AddHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
                End If
                OnNavigationPropertyChanged("Documentos")
            End If
        End Set
    End Property

    Private _documentos As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos1() As TrackableCollection(Of Documentos)
        Get
            If _documentos1 Is Nothing Then
                _documentos1 = New TrackableCollection(Of Documentos)
                AddHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
            End If
            Return _documentos1
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos1 IsNot Nothing Then
                    RemoveHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
                End If
                _documentos1 = value
                If _documentos1 IsNot Nothing Then
                    AddHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
                End If
                OnNavigationPropertyChanged("Documentos1")
            End If
        End Set
    End Property

    Private _documentos1 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Despachos() As TrackableCollection(Of Despachos)
        Get
            If _despachos Is Nothing Then
                _despachos = New TrackableCollection(Of Despachos)
                AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
            End If
            Return _despachos
        End Get
        Set(ByVal value As TrackableCollection(Of Despachos))
            If Not Object.ReferenceEquals(_despachos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _despachos IsNot Nothing Then
                    RemoveHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                _despachos = value
                If _despachos IsNot Nothing Then
                    AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                OnNavigationPropertyChanged("Despachos")
            End If
        End Set
    End Property

    Private _despachos As TrackableCollection(Of Despachos)

    <DataMember()>
    Public Property RolOpeCtaCte() As TrackableCollection(Of RolOpeCtaCte)
        Get
            If _rolOpeCtaCte Is Nothing Then
                _rolOpeCtaCte = New TrackableCollection(Of RolOpeCtaCte)
                AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
            End If
            Return _rolOpeCtaCte
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCte))
            If Not Object.ReferenceEquals(_rolOpeCtaCte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCte IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As RolOpeCtaCte In _rolOpeCtaCte
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _rolOpeCtaCte = value
                If _rolOpeCtaCte IsNot Nothing Then
                    AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As RolOpeCtaCte In _rolOpeCtaCte
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("RolOpeCtaCte")
            End If
        End Set
    End Property

    Private _rolOpeCtaCte As TrackableCollection(Of RolOpeCtaCte)

    <DataMember()>
    Public Property DetalleAfectaDocumentos() As TrackableCollection(Of DetalleAfectaDocumentos)
        Get
            If _detalleAfectaDocumentos Is Nothing Then
                _detalleAfectaDocumentos = New TrackableCollection(Of DetalleAfectaDocumentos)
                AddHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
            End If
            Return _detalleAfectaDocumentos
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAfectaDocumentos))
            If Not Object.ReferenceEquals(_detalleAfectaDocumentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAfectaDocumentos IsNot Nothing Then
                    RemoveHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
                End If
                _detalleAfectaDocumentos = value
                If _detalleAfectaDocumentos IsNot Nothing Then
                    AddHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
                End If
                OnNavigationPropertyChanged("DetalleAfectaDocumentos")
            End If
        End Set
    End Property

    Private _detalleAfectaDocumentos As TrackableCollection(Of DetalleAfectaDocumentos)

    <DataMember()>
    Public Property DetalleAfectaProductoDocumentos() As TrackableCollection(Of DetalleAfectaProductoDocumentos)
        Get
            If _detalleAfectaProductoDocumentos Is Nothing Then
                _detalleAfectaProductoDocumentos = New TrackableCollection(Of DetalleAfectaProductoDocumentos)
                AddHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
            End If
            Return _detalleAfectaProductoDocumentos
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAfectaProductoDocumentos))
            If Not Object.ReferenceEquals(_detalleAfectaProductoDocumentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAfectaProductoDocumentos IsNot Nothing Then
                    RemoveHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
                End If
                _detalleAfectaProductoDocumentos = value
                If _detalleAfectaProductoDocumentos IsNot Nothing Then
                    AddHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
                End If
                OnNavigationPropertyChanged("DetalleAfectaProductoDocumentos")
            End If
        End Set
    End Property

    Private _detalleAfectaProductoDocumentos As TrackableCollection(Of DetalleAfectaProductoDocumentos)

    <DataMember()>
    Public Property DetalleDocumentosPromocion() As TrackableCollection(Of DetalleDocumentosPromocion)
        Get
            If _detalleDocumentosPromocion Is Nothing Then
                _detalleDocumentosPromocion = New TrackableCollection(Of DetalleDocumentosPromocion)
                AddHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
            End If
            Return _detalleDocumentosPromocion
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleDocumentosPromocion))
            If Not Object.ReferenceEquals(_detalleDocumentosPromocion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleDocumentosPromocion IsNot Nothing Then
                    RemoveHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
                End If
                _detalleDocumentosPromocion = value
                If _detalleDocumentosPromocion IsNot Nothing Then
                    AddHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
                End If
                OnNavigationPropertyChanged("DetalleDocumentosPromocion")
            End If
        End Set
    End Property

    Private _detalleDocumentosPromocion As TrackableCollection(Of DetalleDocumentosPromocion)

    <DataMember()>
    Public Property DetallePermisoCuentaCorriente() As TrackableCollection(Of DetallePermisoCuentaCorriente)
        Get
            If _detallePermisoCuentaCorriente Is Nothing Then
                _detallePermisoCuentaCorriente = New TrackableCollection(Of DetallePermisoCuentaCorriente)
                AddHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
            End If
            Return _detallePermisoCuentaCorriente
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePermisoCuentaCorriente))
            If Not Object.ReferenceEquals(_detallePermisoCuentaCorriente, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePermisoCuentaCorriente IsNot Nothing Then
                    RemoveHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As DetallePermisoCuentaCorriente In _detallePermisoCuentaCorriente
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _detallePermisoCuentaCorriente = value
                If _detallePermisoCuentaCorriente IsNot Nothing Then
                    AddHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As DetallePermisoCuentaCorriente In _detallePermisoCuentaCorriente
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("DetallePermisoCuentaCorriente")
            End If
        End Set
    End Property

    Private _detallePermisoCuentaCorriente As TrackableCollection(Of DetallePermisoCuentaCorriente)

    <DataMember()>
    Public Property DetallePrestamo() As TrackableCollection(Of DetallePrestamo)
        Get
            If _detallePrestamo Is Nothing Then
                _detallePrestamo = New TrackableCollection(Of DetallePrestamo)
                AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
            End If
            Return _detallePrestamo
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePrestamo))
            If Not Object.ReferenceEquals(_detallePrestamo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePrestamo IsNot Nothing Then
                    RemoveHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                _detallePrestamo = value
                If _detallePrestamo IsNot Nothing Then
                    AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                OnNavigationPropertyChanged("DetallePrestamo")
            End If
        End Set
    End Property

    Private _detallePrestamo As TrackableCollection(Of DetallePrestamo)

    <DataMember()>
    Public Property DetallePrestamo1() As TrackableCollection(Of DetallePrestamo)
        Get
            If _detallePrestamo1 Is Nothing Then
                _detallePrestamo1 = New TrackableCollection(Of DetallePrestamo)
                AddHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
            End If
            Return _detallePrestamo1
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePrestamo))
            If Not Object.ReferenceEquals(_detallePrestamo1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePrestamo1 IsNot Nothing Then
                    RemoveHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
                End If
                _detallePrestamo1 = value
                If _detallePrestamo1 IsNot Nothing Then
                    AddHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
                End If
                OnNavigationPropertyChanged("DetallePrestamo1")
            End If
        End Set
    End Property

    Private _detallePrestamo1 As TrackableCollection(Of DetallePrestamo)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        DetalleDocumentos.Clear()
        Usuarios = Nothing
        DetalleTesoreria.Clear()
        DetalleTesoreria1.Clear()
        DetalleTesoreria2.Clear()
        MovimientoCajaBanco.Clear()
        MovimientoCajaBanco1.Clear()
        RolOpeCtaCteEntregas.Clear()
        DetalleAsientosManuales.Clear()
        Documentos.Clear()
        Documentos1.Clear()
        Despachos.Clear()
        RolOpeCtaCte.Clear()
        DetalleAfectaDocumentos.Clear()
        DetalleAfectaProductoDocumentos.Clear()
        DetalleDocumentosPromocion.Clear()
        DetallePermisoCuentaCorriente.Clear()
        DetallePrestamo.Clear()
        DetallePrestamo1.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleDocumentos In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleDocumentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleDocumentos In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleDocumentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.CtaCte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.CtaCte1, Me) Then
                    item.CtaCte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.CtaCte2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.CtaCte2, Me) Then
                    item.CtaCte2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.CtaCte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.CtaCte1, Me) Then
                    item.CtaCte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCteEntregas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCteEntregas", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCteEntregas", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDetalleAsientosManuales(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.CtaCte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.CtaCte1, Me) Then
                    item.CtaCte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDespachos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Despachos In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Despachos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Despachos In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Despachos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCte", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCte", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDetalleAfectaDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAfectaDocumentos In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAfectaDocumentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAfectaDocumentos In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAfectaDocumentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleAfectaProductoDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAfectaProductoDocumentos In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAfectaProductoDocumentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAfectaProductoDocumentos In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAfectaProductoDocumentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleDocumentosPromocion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleDocumentosPromocion In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleDocumentosPromocion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleDocumentosPromocion In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleDocumentosPromocion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePermisoCuentaCorriente(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePermisoCuentaCorriente In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePermisoCuentaCorriente", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePermisoCuentaCorriente In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePermisoCuentaCorriente", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDetallePrestamo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.NewItems
                item.CtaCte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.OldItems
                If ReferenceEquals(item.CtaCte, Me) Then
                    item.CtaCte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePrestamo1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.NewItems
                item.CtaCte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePrestamo1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.OldItems
                If ReferenceEquals(item.CtaCte1, Me) Then
                    item.CtaCte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePrestamo1", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
