'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Cancha))>
Partial Public Class ControlCancheroDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DCA_ID As string = "DCA_ID"
				public shared CCA_ID As string = "CCA_ID"
				public shared CAN_ID As string = "CAN_ID"
				public shared DCA_GOLPEADAS As string = "DCA_GOLPEADAS"
				public shared DCA_RAJADAS As string = "DCA_RAJADAS"
				public shared DCA_AGUADAS As string = "DCA_AGUADAS"
				public shared DCA_CORTE_MAL As string = "DCA_CORTE_MAL"
				public shared DCA_GOLPE_VEHICULO As string = "DCA_GOLPE_VEHICULO"
				public shared DCA_OBSERVACION As string = "DCA_OBSERVACION"
		    End Structure
	



    <DataMember()>
    Public Property DCA_ID() As Integer
        Get
            Return _dCA_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dCA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DCA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dCA_ID = value
                OnPropertyChanged("DCA_ID")
            End If
        End Set
    End Property

    Private _dCA_ID As Integer

    <DataMember()>
    Public Property CCA_ID() As Nullable(Of Integer)
        Get
            Return _cCA_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cCA_ID, value) Then
                ChangeTracker.RecordOriginalValue("CCA_ID", _cCA_ID)
                _cCA_ID = value
                OnPropertyChanged("CCA_ID")
            End If
        End Set
    End Property

    Private _cCA_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property CAN_ID() As Nullable(Of Integer)
        Get
            Return _cAN_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cAN_ID, value) Then
                ChangeTracker.RecordOriginalValue("CAN_ID", _cAN_ID)
                If Not IsDeserializing Then
                    If Cancha IsNot Nothing AndAlso Not Equals(Cancha.CAN_ID, value) Then
                        Cancha = Nothing
                    End If
                End If
                _cAN_ID = value
                OnPropertyChanged("CAN_ID")
            End If
        End Set
    End Property

    Private _cAN_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_GOLPEADAS() As Nullable(Of Integer)
        Get
            Return _dCA_GOLPEADAS
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dCA_GOLPEADAS, value) Then
                _dCA_GOLPEADAS = value
                OnPropertyChanged("DCA_GOLPEADAS")
            End If
        End Set
    End Property

    Private _dCA_GOLPEADAS As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_RAJADAS() As Nullable(Of Integer)
        Get
            Return _dCA_RAJADAS
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dCA_RAJADAS, value) Then
                _dCA_RAJADAS = value
                OnPropertyChanged("DCA_RAJADAS")
            End If
        End Set
    End Property

    Private _dCA_RAJADAS As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_AGUADAS() As Nullable(Of Integer)
        Get
            Return _dCA_AGUADAS
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dCA_AGUADAS, value) Then
                _dCA_AGUADAS = value
                OnPropertyChanged("DCA_AGUADAS")
            End If
        End Set
    End Property

    Private _dCA_AGUADAS As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_CORTE_MAL() As Nullable(Of Integer)
        Get
            Return _dCA_CORTE_MAL
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dCA_CORTE_MAL, value) Then
                _dCA_CORTE_MAL = value
                OnPropertyChanged("DCA_CORTE_MAL")
            End If
        End Set
    End Property

    Private _dCA_CORTE_MAL As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_GOLPE_VEHICULO() As Nullable(Of Integer)
        Get
            Return _dCA_GOLPE_VEHICULO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dCA_GOLPE_VEHICULO, value) Then
                _dCA_GOLPE_VEHICULO = value
                OnPropertyChanged("DCA_GOLPE_VEHICULO")
            End If
        End Set
    End Property

    Private _dCA_GOLPE_VEHICULO As Nullable(Of Integer)

    <DataMember()>
    Public Property DCA_OBSERVACION() As String
        Get
            Return _dCA_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_dCA_OBSERVACION, value) Then
                _dCA_OBSERVACION = value
                OnPropertyChanged("DCA_OBSERVACION")
            End If
        End Set
    End Property

    Private _dCA_OBSERVACION As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Cancha() As Cancha
        Get
            Return _cancha
        End Get
        Set(ByVal value As Cancha)
            If _cancha IsNot value Then
                Dim previousValue As Cancha = _cancha
                _cancha = value
                FixupCancha(previousValue)
                OnNavigationPropertyChanged("Cancha")
            End If
        End Set
    End Property

    Private _cancha As Cancha


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Cancha = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCancha(ByVal previousValue As Cancha, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Cancha IsNot Nothing Then
            CAN_ID = Cancha.CAN_ID
        ElseIf Not skipKeys Then
            CAN_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Cancha") AndAlso
                ChangeTracker.OriginalValues("Cancha") Is Cancha Then
                ChangeTracker.OriginalValues.Remove("Cancha")
            Else
                ChangeTracker.RecordOriginalValue("Cancha", previousValue)
            End If
            If Cancha IsNot Nothing AndAlso Not Cancha.ChangeTracker.ChangeTrackingEnabled Then
                Cancha.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
