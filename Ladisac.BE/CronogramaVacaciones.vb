'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(Planillas))>
Partial Public Class CronogramaVacaciones
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared per_Id As string = "per_Id"
				public shared crv_FechaInicio As string = "crv_FechaInicio"
				public shared crv_FechaFin As string = "crv_FechaFin"
				public shared crv_Estado As string = "crv_Estado"
				public shared crv_ItemCroVaca As string = "crv_ItemCroVaca"
				public shared crv_Observaciones As string = "crv_Observaciones"
				public shared Usu_Id As string = "Usu_Id"
				public shared crv_FecGrab As string = "crv_FecGrab"
				public shared crv_Periodo As string = "crv_Periodo"
				public shared tdo_Id As string = "tdo_Id"
				public shared pla_SeriePlani As string = "pla_SeriePlani"
				public shared pla_Numero As string = "pla_Numero"
				public shared crv_dias As string = "crv_dias"
				public shared crv_Domingos As string = "crv_Domingos"
				public shared crv_periodoAsignado As string = "crv_periodoAsignado"
		    End Structure
	



    <DataMember()>
    Public Property per_Id() As String
        Get
            Return _per_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'per_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _per_Id = value
                OnPropertyChanged("per_Id")
            End If
        End Set
    End Property

    Private _per_Id As String

    <DataMember()>
    Public Property crv_FechaInicio() As Date
        Get
            Return _crv_FechaInicio
        End Get
        Set(ByVal value As Date)
            If Not Equals(_crv_FechaInicio, value) Then
                _crv_FechaInicio = value
                OnPropertyChanged("crv_FechaInicio")
            End If
        End Set
    End Property

    Private _crv_FechaInicio As Date

    <DataMember()>
    Public Property crv_FechaFin() As Date
        Get
            Return _crv_FechaFin
        End Get
        Set(ByVal value As Date)
            If Not Equals(_crv_FechaFin, value) Then
                _crv_FechaFin = value
                OnPropertyChanged("crv_FechaFin")
            End If
        End Set
    End Property

    Private _crv_FechaFin As Date

    <DataMember()>
    Public Property crv_Estado() As Boolean
        Get
            Return _crv_Estado
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_crv_Estado, value) Then
                _crv_Estado = value
                OnPropertyChanged("crv_Estado")
            End If
        End Set
    End Property

    Private _crv_Estado As Boolean

    <DataMember()>
    Public Property crv_ItemCroVaca() As String
        Get
            Return _crv_ItemCroVaca
        End Get
        Set(ByVal value As String)
            If Not Equals(_crv_ItemCroVaca, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'crv_ItemCroVaca' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _crv_ItemCroVaca = value
                OnPropertyChanged("crv_ItemCroVaca")
            End If
        End Set
    End Property

    Private _crv_ItemCroVaca As String

    <DataMember()>
    Public Property crv_Observaciones() As String
        Get
            Return _crv_Observaciones
        End Get
        Set(ByVal value As String)
            If Not Equals(_crv_Observaciones, value) Then
                _crv_Observaciones = value
                OnPropertyChanged("crv_Observaciones")
            End If
        End Set
    End Property

    Private _crv_Observaciones As String

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property crv_FecGrab() As Date
        Get
            Return _crv_FecGrab
        End Get
        Set(ByVal value As Date)
            If Not Equals(_crv_FecGrab, value) Then
                _crv_FecGrab = value
                OnPropertyChanged("crv_FecGrab")
            End If
        End Set
    End Property

    Private _crv_FecGrab As Date

    <DataMember()>
    Public Property crv_Periodo() As String
        Get
            Return _crv_Periodo
        End Get
        Set(ByVal value As String)
            If Not Equals(_crv_Periodo, value) Then
                _crv_Periodo = value
                OnPropertyChanged("crv_Periodo")
            End If
        End Set
    End Property

    Private _crv_Periodo As String

    <DataMember()>
    Public Property tdo_Id() As String
        Get
            Return _tdo_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_Id, value) Then
                ChangeTracker.RecordOriginalValue("tdo_Id", _tdo_Id)
                If Not IsDeserializing Then
                    If Planillas IsNot Nothing AndAlso Not Equals(Planillas.tdo_Id, value) Then
                        Dim previousValue As Planillas = _planillas
                        _planillas = Nothing
                        FixupPlanillas(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Planillas")
                    End If
                End If
                _tdo_Id = value
                OnPropertyChanged("tdo_Id")
            End If
        End Set
    End Property

    Private _tdo_Id As String

    <DataMember()>
    Public Property pla_SeriePlani() As String
        Get
            Return _pla_SeriePlani
        End Get
        Set(ByVal value As String)
            If Not Equals(_pla_SeriePlani, value) Then
                ChangeTracker.RecordOriginalValue("pla_SeriePlani", _pla_SeriePlani)
                If Not IsDeserializing Then
                    If Planillas IsNot Nothing AndAlso Not Equals(Planillas.pla_SeriePlani, value) Then
                        Dim previousValue As Planillas = _planillas
                        _planillas = Nothing
                        FixupPlanillas(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Planillas")
                    End If
                End If
                _pla_SeriePlani = value
                OnPropertyChanged("pla_SeriePlani")
            End If
        End Set
    End Property

    Private _pla_SeriePlani As String

    <DataMember()>
    Public Property pla_Numero() As String
        Get
            Return _pla_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_pla_Numero, value) Then
                ChangeTracker.RecordOriginalValue("pla_Numero", _pla_Numero)
                If Not IsDeserializing Then
                    If Planillas IsNot Nothing AndAlso Not Equals(Planillas.pla_Numero, value) Then
                        Dim previousValue As Planillas = _planillas
                        _planillas = Nothing
                        FixupPlanillas(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Planillas")
                    End If
                End If
                _pla_Numero = value
                OnPropertyChanged("pla_Numero")
            End If
        End Set
    End Property

    Private _pla_Numero As String

    <DataMember()>
    Public Property crv_dias() As Nullable(Of Integer)
        Get
            Return _crv_dias
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_crv_dias, value) Then
                _crv_dias = value
                OnPropertyChanged("crv_dias")
            End If
        End Set
    End Property

    Private _crv_dias As Nullable(Of Integer)

    <DataMember()>
    Public Property crv_Domingos() As Nullable(Of Integer)
        Get
            Return _crv_Domingos
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_crv_Domingos, value) Then
                _crv_Domingos = value
                OnPropertyChanged("crv_Domingos")
            End If
        End Set
    End Property

    Private _crv_Domingos As Nullable(Of Integer)

    <DataMember()>
    Public Property crv_periodoAsignado() As String
        Get
            Return _crv_periodoAsignado
        End Get
        Set(ByVal value As String)
            If Not Equals(_crv_periodoAsignado, value) Then
                _crv_periodoAsignado = value
                OnPropertyChanged("crv_periodoAsignado")
            End If
        End Set
    End Property

    Private _crv_periodoAsignado As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property Planillas() As Planillas
        Get
            Return _planillas
        End Get
        Set(ByVal value As Planillas)
            If _planillas IsNot value Then
                Dim previousValue As Planillas = _planillas
                _planillas = value
                FixupPlanillas(previousValue)
                OnNavigationPropertyChanged("Planillas")
            End If
        End Set
    End Property

    Private _planillas As Planillas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociaci칩n que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesar치 notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Usuarios = Nothing
        Planillas = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            Usu_Id = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPlanillas(ByVal previousValue As Planillas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CronogramaVacaciones.Contains(Me) Then
            previousValue.CronogramaVacaciones.Remove(Me)
        End If

        If Planillas IsNot Nothing Then
            If Not Planillas.CronogramaVacaciones.Contains(Me) Then
                Planillas.CronogramaVacaciones.Add(Me)
            End If

            pla_SeriePlani = Planillas.pla_SeriePlani
            pla_Numero = Planillas.pla_Numero
            tdo_Id = Planillas.tdo_Id
        ElseIf Not skipKeys Then
            pla_SeriePlani = Nothing
            pla_Numero = Nothing
            tdo_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Planillas") AndAlso
                ChangeTracker.OriginalValues("Planillas") Is Planillas Then
                ChangeTracker.OriginalValues.Remove("Planillas")
            Else
                ChangeTracker.RecordOriginalValue("Planillas", previousValue)
            End If
            If Planillas IsNot Nothing AndAlso Not Planillas.ChangeTracker.ChangeTrackingEnabled Then
                Planillas.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
