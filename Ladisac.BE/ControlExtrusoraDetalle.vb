'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
Partial Public Class ControlExtrusoraDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DEX_ID As string = "DEX_ID"
				public shared CEX_ID As string = "CEX_ID"
				public shared DEX_HORA As string = "DEX_HORA"
				public shared DEX_VACIO As string = "DEX_VACIO"
				public shared DEX_AMPERAJE As string = "DEX_AMPERAJE"
				public shared DEX_CORTES_MINUTO As string = "DEX_CORTES_MINUTO"
				public shared DEX_CANTIDAD_CORTE_MAQUINA As string = "DEX_CANTIDAD_CORTE_MAQUINA"
				public shared DEX_TOTAL_CORTES_HORA As string = "DEX_TOTAL_CORTES_HORA"
		    End Structure
	



    <DataMember()>
    Public Property DEX_ID() As Integer
        Get
            Return _dEX_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dEX_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DEX_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dEX_ID = value
                OnPropertyChanged("DEX_ID")
            End If
        End Set
    End Property

    Private _dEX_ID As Integer

    <DataMember()>
    Public Property CEX_ID() As Nullable(Of Integer)
        Get
            Return _cEX_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cEX_ID, value) Then
                ChangeTracker.RecordOriginalValue("CEX_ID", _cEX_ID)
                _cEX_ID = value
                OnPropertyChanged("CEX_ID")
            End If
        End Set
    End Property

    Private _cEX_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property DEX_HORA() As Nullable(Of Decimal)
        Get
            Return _dEX_HORA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_HORA, value) Then
                _dEX_HORA = value
                OnPropertyChanged("DEX_HORA")
            End If
        End Set
    End Property

    Private _dEX_HORA As Nullable(Of Decimal)

    <DataMember()>
    Public Property DEX_VACIO() As Nullable(Of Decimal)
        Get
            Return _dEX_VACIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_VACIO, value) Then
                _dEX_VACIO = value
                OnPropertyChanged("DEX_VACIO")
            End If
        End Set
    End Property

    Private _dEX_VACIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property DEX_AMPERAJE() As Nullable(Of Decimal)
        Get
            Return _dEX_AMPERAJE
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_AMPERAJE, value) Then
                _dEX_AMPERAJE = value
                OnPropertyChanged("DEX_AMPERAJE")
            End If
        End Set
    End Property

    Private _dEX_AMPERAJE As Nullable(Of Decimal)

    <DataMember()>
    Public Property DEX_CORTES_MINUTO() As Nullable(Of Decimal)
        Get
            Return _dEX_CORTES_MINUTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_CORTES_MINUTO, value) Then
                _dEX_CORTES_MINUTO = value
                OnPropertyChanged("DEX_CORTES_MINUTO")
            End If
        End Set
    End Property

    Private _dEX_CORTES_MINUTO As Nullable(Of Decimal)

    <DataMember()>
    Public Property DEX_CANTIDAD_CORTE_MAQUINA() As Nullable(Of Decimal)
        Get
            Return _dEX_CANTIDAD_CORTE_MAQUINA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_CANTIDAD_CORTE_MAQUINA, value) Then
                _dEX_CANTIDAD_CORTE_MAQUINA = value
                OnPropertyChanged("DEX_CANTIDAD_CORTE_MAQUINA")
            End If
        End Set
    End Property

    Private _dEX_CANTIDAD_CORTE_MAQUINA As Nullable(Of Decimal)

    <DataMember()>
    Public Property DEX_TOTAL_CORTES_HORA() As Nullable(Of Decimal)
        Get
            Return _dEX_TOTAL_CORTES_HORA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dEX_TOTAL_CORTES_HORA, value) Then
                _dEX_TOTAL_CORTES_HORA = value
                OnPropertyChanged("DEX_TOTAL_CORTES_HORA")
            End If
        End Set
    End Property

    Private _dEX_TOTAL_CORTES_HORA As Nullable(Of Decimal)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
    End Sub

#End Region
End Class
