'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(TiposTrabajador))>
<KnownType(GetType(Personas))>
Partial Public Class DetalleTrabajadorHoras
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared tit_TipoTrab_Id As string = "tit_TipoTrab_Id"
				public shared trh_Numero As string = "trh_Numero"
				public shared trh_Item As string = "trh_Item"
				public shared per_Id As string = "per_Id"
				public shared trh_HoraSimpProduccion As string = "trh_HoraSimpProduccion"
				public shared trh_HoraDobleProduccion As string = "trh_HoraDobleProduccion"
				public shared trh_HoraSimCambios As string = "trh_HoraSimCambios"
				public shared trh_HoraDobCambios As string = "trh_HoraDobCambios"
				public shared trh_HoraSimReparoHora As string = "trh_HoraSimReparoHora"
				public shared trh_HoraSimReparoDia As string = "trh_HoraSimReparoDia"
				public shared trh_horaDobReparo As string = "trh_horaDobReparo"
				public shared trh_HoraEssalud As string = "trh_HoraEssalud"
				public shared trh_HoraSimTotal As string = "trh_HoraSimTotal"
				public shared trh_HoraDobTotal As string = "trh_HoraDobTotal"
				public shared trh_DiasTrabajador As string = "trh_DiasTrabajador"
				public shared trh_DiasTrabajadorXHora As string = "trh_DiasTrabajadorXHora"
				public shared trh_observacion1 As string = "trh_observacion1"
				public shared trh_Observacion2 As string = "trh_Observacion2"
				public shared trh_HoraSimTotalExtra As string = "trh_HoraSimTotalExtra"
				public shared trh_HoraDobTotalExtra As string = "trh_HoraDobTotalExtra"
				public shared trh_EsDia As string = "trh_EsDia"
				public shared Usu_Id As string = "Usu_Id"
				public shared trh_FecGrab As string = "trh_FecGrab"
				public shared trh_HoraBonificadaProduccion As string = "trh_HoraBonificadaProduccion"
				public shared trh_HoraBonificadaCambios As string = "trh_HoraBonificadaCambios"
				public shared trh_HoraBonificadaExtra As string = "trh_HoraBonificadaExtra"
				public shared trh_HoraSimpProduccionDestajo As string = "trh_HoraSimpProduccionDestajo"
				public shared trh_HoraSimCambiosDestajo As string = "trh_HoraSimCambiosDestajo"
				public shared trh_HoraSimTotalDestajo As string = "trh_HoraSimTotalDestajo"
				public shared trh_HoraDobleProduccionDestajo As string = "trh_HoraDobleProduccionDestajo"
				public shared trh_HoraDobCambiosDestajo As string = "trh_HoraDobCambiosDestajo"
				public shared trh_HoraDobTotalDestajo As string = "trh_HoraDobTotalDestajo"
		    End Structure
	



    <DataMember()>
    Public Property tit_TipoTrab_Id() As String
        Get
            Return _tit_TipoTrab_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tit_TipoTrab_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'tit_TipoTrab_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If TiposTrabajador IsNot Nothing AndAlso Not Equals(TiposTrabajador.tit_TipoTrab_Id, value) Then
                        TiposTrabajador = Nothing
                    End If
                End If
                _tit_TipoTrab_Id = value
                OnPropertyChanged("tit_TipoTrab_Id")
            End If
        End Set
    End Property

    Private _tit_TipoTrab_Id As String

    <DataMember()>
    Public Property trh_Numero() As String
        Get
            Return _trh_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_trh_Numero, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'trh_Numero' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _trh_Numero = value
                OnPropertyChanged("trh_Numero")
            End If
        End Set
    End Property

    Private _trh_Numero As String

    <DataMember()>
    Public Property trh_Item() As String
        Get
            Return _trh_Item
        End Get
        Set(ByVal value As String)
            If Not Equals(_trh_Item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'trh_Item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _trh_Item = value
                OnPropertyChanged("trh_Item")
            End If
        End Set
    End Property

    Private _trh_Item As String

    <DataMember()>
    Public Property per_Id() As String
        Get
            Return _per_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id, value) Then
                ChangeTracker.RecordOriginalValue("per_Id", _per_Id)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _per_Id = value
                OnPropertyChanged("per_Id")
            End If
        End Set
    End Property

    Private _per_Id As String

    <DataMember()>
    Public Property trh_HoraSimpProduccion() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimpProduccion
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimpProduccion, value) Then
                _trh_HoraSimpProduccion = value
                OnPropertyChanged("trh_HoraSimpProduccion")
            End If
        End Set
    End Property

    Private _trh_HoraSimpProduccion As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobleProduccion() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobleProduccion
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobleProduccion, value) Then
                _trh_HoraDobleProduccion = value
                OnPropertyChanged("trh_HoraDobleProduccion")
            End If
        End Set
    End Property

    Private _trh_HoraDobleProduccion As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimCambios() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimCambios
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimCambios, value) Then
                _trh_HoraSimCambios = value
                OnPropertyChanged("trh_HoraSimCambios")
            End If
        End Set
    End Property

    Private _trh_HoraSimCambios As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobCambios() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobCambios
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobCambios, value) Then
                _trh_HoraDobCambios = value
                OnPropertyChanged("trh_HoraDobCambios")
            End If
        End Set
    End Property

    Private _trh_HoraDobCambios As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimReparoHora() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimReparoHora
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimReparoHora, value) Then
                _trh_HoraSimReparoHora = value
                OnPropertyChanged("trh_HoraSimReparoHora")
            End If
        End Set
    End Property

    Private _trh_HoraSimReparoHora As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimReparoDia() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimReparoDia
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimReparoDia, value) Then
                _trh_HoraSimReparoDia = value
                OnPropertyChanged("trh_HoraSimReparoDia")
            End If
        End Set
    End Property

    Private _trh_HoraSimReparoDia As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_horaDobReparo() As Nullable(Of Decimal)
        Get
            Return _trh_horaDobReparo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_horaDobReparo, value) Then
                _trh_horaDobReparo = value
                OnPropertyChanged("trh_horaDobReparo")
            End If
        End Set
    End Property

    Private _trh_horaDobReparo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraEssalud() As Nullable(Of Decimal)
        Get
            Return _trh_HoraEssalud
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraEssalud, value) Then
                _trh_HoraEssalud = value
                OnPropertyChanged("trh_HoraEssalud")
            End If
        End Set
    End Property

    Private _trh_HoraEssalud As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimTotal() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimTotal
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimTotal, value) Then
                _trh_HoraSimTotal = value
                OnPropertyChanged("trh_HoraSimTotal")
            End If
        End Set
    End Property

    Private _trh_HoraSimTotal As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobTotal() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobTotal
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobTotal, value) Then
                _trh_HoraDobTotal = value
                OnPropertyChanged("trh_HoraDobTotal")
            End If
        End Set
    End Property

    Private _trh_HoraDobTotal As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_DiasTrabajador() As Nullable(Of Integer)
        Get
            Return _trh_DiasTrabajador
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_trh_DiasTrabajador, value) Then
                _trh_DiasTrabajador = value
                OnPropertyChanged("trh_DiasTrabajador")
            End If
        End Set
    End Property

    Private _trh_DiasTrabajador As Nullable(Of Integer)

    <DataMember()>
    Public Property trh_DiasTrabajadorXHora() As Nullable(Of Decimal)
        Get
            Return _trh_DiasTrabajadorXHora
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_DiasTrabajadorXHora, value) Then
                _trh_DiasTrabajadorXHora = value
                OnPropertyChanged("trh_DiasTrabajadorXHora")
            End If
        End Set
    End Property

    Private _trh_DiasTrabajadorXHora As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_observacion1() As String
        Get
            Return _trh_observacion1
        End Get
        Set(ByVal value As String)
            If Not Equals(_trh_observacion1, value) Then
                _trh_observacion1 = value
                OnPropertyChanged("trh_observacion1")
            End If
        End Set
    End Property

    Private _trh_observacion1 As String

    <DataMember()>
    Public Property trh_Observacion2() As String
        Get
            Return _trh_Observacion2
        End Get
        Set(ByVal value As String)
            If Not Equals(_trh_Observacion2, value) Then
                _trh_Observacion2 = value
                OnPropertyChanged("trh_Observacion2")
            End If
        End Set
    End Property

    Private _trh_Observacion2 As String

    <DataMember()>
    Public Property trh_HoraSimTotalExtra() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimTotalExtra
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimTotalExtra, value) Then
                _trh_HoraSimTotalExtra = value
                OnPropertyChanged("trh_HoraSimTotalExtra")
            End If
        End Set
    End Property

    Private _trh_HoraSimTotalExtra As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobTotalExtra() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobTotalExtra
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobTotalExtra, value) Then
                _trh_HoraDobTotalExtra = value
                OnPropertyChanged("trh_HoraDobTotalExtra")
            End If
        End Set
    End Property

    Private _trh_HoraDobTotalExtra As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_EsDia() As Nullable(Of Boolean)
        Get
            Return _trh_EsDia
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_trh_EsDia, value) Then
                _trh_EsDia = value
                OnPropertyChanged("trh_EsDia")
            End If
        End Set
    End Property

    Private _trh_EsDia As Nullable(Of Boolean)

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property trh_FecGrab() As Date
        Get
            Return _trh_FecGrab
        End Get
        Set(ByVal value As Date)
            If Not Equals(_trh_FecGrab, value) Then
                _trh_FecGrab = value
                OnPropertyChanged("trh_FecGrab")
            End If
        End Set
    End Property

    Private _trh_FecGrab As Date

    <DataMember()>
    Public Property trh_HoraBonificadaProduccion() As Nullable(Of Decimal)
        Get
            Return _trh_HoraBonificadaProduccion
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraBonificadaProduccion, value) Then
                _trh_HoraBonificadaProduccion = value
                OnPropertyChanged("trh_HoraBonificadaProduccion")
            End If
        End Set
    End Property

    Private _trh_HoraBonificadaProduccion As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraBonificadaCambios() As Nullable(Of Decimal)
        Get
            Return _trh_HoraBonificadaCambios
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraBonificadaCambios, value) Then
                _trh_HoraBonificadaCambios = value
                OnPropertyChanged("trh_HoraBonificadaCambios")
            End If
        End Set
    End Property

    Private _trh_HoraBonificadaCambios As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraBonificadaExtra() As Nullable(Of Decimal)
        Get
            Return _trh_HoraBonificadaExtra
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraBonificadaExtra, value) Then
                _trh_HoraBonificadaExtra = value
                OnPropertyChanged("trh_HoraBonificadaExtra")
            End If
        End Set
    End Property

    Private _trh_HoraBonificadaExtra As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimpProduccionDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimpProduccionDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimpProduccionDestajo, value) Then
                _trh_HoraSimpProduccionDestajo = value
                OnPropertyChanged("trh_HoraSimpProduccionDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraSimpProduccionDestajo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimCambiosDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimCambiosDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimCambiosDestajo, value) Then
                _trh_HoraSimCambiosDestajo = value
                OnPropertyChanged("trh_HoraSimCambiosDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraSimCambiosDestajo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraSimTotalDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraSimTotalDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraSimTotalDestajo, value) Then
                _trh_HoraSimTotalDestajo = value
                OnPropertyChanged("trh_HoraSimTotalDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraSimTotalDestajo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobleProduccionDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobleProduccionDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobleProduccionDestajo, value) Then
                _trh_HoraDobleProduccionDestajo = value
                OnPropertyChanged("trh_HoraDobleProduccionDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraDobleProduccionDestajo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobCambiosDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobCambiosDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobCambiosDestajo, value) Then
                _trh_HoraDobCambiosDestajo = value
                OnPropertyChanged("trh_HoraDobCambiosDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraDobCambiosDestajo As Nullable(Of Decimal)

    <DataMember()>
    Public Property trh_HoraDobTotalDestajo() As Nullable(Of Decimal)
        Get
            Return _trh_HoraDobTotalDestajo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_trh_HoraDobTotalDestajo, value) Then
                _trh_HoraDobTotalDestajo = value
                OnPropertyChanged("trh_HoraDobTotalDestajo")
            End If
        End Set
    End Property

    Private _trh_HoraDobTotalDestajo As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property TiposTrabajador() As TiposTrabajador
        Get
            Return _tiposTrabajador
        End Get
        Set(ByVal value As TiposTrabajador)
            If _tiposTrabajador IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relaci칩n de identificaci칩n por lo que el extremo principal no se puede cambiar si ya est치 establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(tit_TipoTrab_Id, value.tit_TipoTrab_Id) Then
                        Throw New InvalidOperationException("El extremo principal de una relaci칩n de identificaci칩n solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As TiposTrabajador = _tiposTrabajador
                _tiposTrabajador = value
                FixupTiposTrabajador(previousValue)
                OnNavigationPropertyChanged("TiposTrabajador")
            End If
        End Set
    End Property

    Private _tiposTrabajador As TiposTrabajador


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociaci칩n que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesar치 notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Usuarios = Nothing
        TiposTrabajador = Nothing
        Personas = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            Usu_Id = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupTiposTrabajador(ByVal previousValue As TiposTrabajador)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleTrabajadorHoras.Contains(Me) Then
            previousValue.DetalleTrabajadorHoras.Remove(Me)
        End If

        If TiposTrabajador IsNot Nothing Then
            If Not TiposTrabajador.DetalleTrabajadorHoras.Contains(Me) Then
                TiposTrabajador.DetalleTrabajadorHoras.Add(Me)
            End If

            tit_TipoTrab_Id = TiposTrabajador.tit_TipoTrab_Id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("TiposTrabajador") AndAlso
                ChangeTracker.OriginalValues("TiposTrabajador") Is TiposTrabajador Then
                ChangeTracker.OriginalValues.Remove("TiposTrabajador")
            Else
                ChangeTracker.RecordOriginalValue("TiposTrabajador", previousValue)
            End If
            If TiposTrabajador IsNot Nothing AndAlso Not TiposTrabajador.ChangeTracker.ChangeTrackingEnabled Then
                TiposTrabajador.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleTrabajadorHoras.Contains(Me) Then
            previousValue.DetalleTrabajadorHoras.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.DetalleTrabajadorHoras.Contains(Me) Then
                Personas.DetalleTrabajadorHoras.Add(Me)
            End If

            per_Id = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
