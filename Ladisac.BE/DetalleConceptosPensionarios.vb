'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(RegimenPensionario))>
<KnownType(GetType(Conceptos))>
Partial Public Class DetalleConceptosPensionarios
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared rep_RegiPension_id As string = "rep_RegiPension_id"
				public shared dcp_Factor As string = "dcp_Factor"
				public shared cuc_Id As string = "cuc_Id"
				public shared con_Conceptos_Id As string = "con_Conceptos_Id"
				public shared tic_TipoConcep_Id As string = "tic_TipoConcep_Id"
				public shared Usu_Id As string = "Usu_Id"
				public shared dcp_FecGrab As string = "dcp_FecGrab"
				public shared dcp_importeMaximo As string = "dcp_importeMaximo"
				public shared dcp_EdadMaxima As string = "dcp_EdadMaxima"
				public shared dcp_esConRestriccion As string = "dcp_esConRestriccion"
				public shared dcp_FactorIndependientes As string = "dcp_FactorIndependientes"
		    End Structure
	



    <DataMember()>
    Public Property rep_RegiPension_id() As String
        Get
            Return _rep_RegiPension_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_rep_RegiPension_id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'rep_RegiPension_id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RegimenPensionario IsNot Nothing AndAlso Not Equals(RegimenPensionario.rep_RegiPension_id, value) Then
                        RegimenPensionario = Nothing
                    End If
                End If
                _rep_RegiPension_id = value
                OnPropertyChanged("rep_RegiPension_id")
            End If
        End Set
    End Property

    Private _rep_RegiPension_id As String

    <DataMember()>
    Public Property dcp_Factor() As Nullable(Of Decimal)
        Get
            Return _dcp_Factor
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dcp_Factor, value) Then
                _dcp_Factor = value
                OnPropertyChanged("dcp_Factor")
            End If
        End Set
    End Property

    Private _dcp_Factor As Nullable(Of Decimal)

    <DataMember()>
    Public Property cuc_Id() As String
        Get
            Return _cuc_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_Id, value) Then
                _cuc_Id = value
                OnPropertyChanged("cuc_Id")
            End If
        End Set
    End Property

    Private _cuc_Id As String

    <DataMember()>
    Public Property con_Conceptos_Id() As String
        Get
            Return _con_Conceptos_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_con_Conceptos_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'con_Conceptos_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If Conceptos IsNot Nothing AndAlso Not Equals(Conceptos.con_Conceptos_Id, value) Then
                        Conceptos = Nothing
                    End If
                End If
                _con_Conceptos_Id = value
                OnPropertyChanged("con_Conceptos_Id")
            End If
        End Set
    End Property

    Private _con_Conceptos_Id As String

    <DataMember()>
    Public Property tic_TipoConcep_Id() As String
        Get
            Return _tic_TipoConcep_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tic_TipoConcep_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'tic_TipoConcep_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If Conceptos IsNot Nothing AndAlso Not Equals(Conceptos.tic_TipoConcep_Id, value) Then
                        Conceptos = Nothing
                    End If
                End If
                _tic_TipoConcep_Id = value
                OnPropertyChanged("tic_TipoConcep_Id")
            End If
        End Set
    End Property

    Private _tic_TipoConcep_Id As String

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property dcp_FecGrab() As Date
        Get
            Return _dcp_FecGrab
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dcp_FecGrab, value) Then
                _dcp_FecGrab = value
                OnPropertyChanged("dcp_FecGrab")
            End If
        End Set
    End Property

    Private _dcp_FecGrab As Date

    <DataMember()>
    Public Property dcp_importeMaximo() As Nullable(Of Decimal)
        Get
            Return _dcp_importeMaximo
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dcp_importeMaximo, value) Then
                _dcp_importeMaximo = value
                OnPropertyChanged("dcp_importeMaximo")
            End If
        End Set
    End Property

    Private _dcp_importeMaximo As Nullable(Of Decimal)

    <DataMember()>
    Public Property dcp_EdadMaxima() As Nullable(Of Decimal)
        Get
            Return _dcp_EdadMaxima
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dcp_EdadMaxima, value) Then
                _dcp_EdadMaxima = value
                OnPropertyChanged("dcp_EdadMaxima")
            End If
        End Set
    End Property

    Private _dcp_EdadMaxima As Nullable(Of Decimal)

    <DataMember()>
    Public Property dcp_esConRestriccion() As Nullable(Of Boolean)
        Get
            Return _dcp_esConRestriccion
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dcp_esConRestriccion, value) Then
                _dcp_esConRestriccion = value
                OnPropertyChanged("dcp_esConRestriccion")
            End If
        End Set
    End Property

    Private _dcp_esConRestriccion As Nullable(Of Boolean)

    <DataMember()>
    Public Property dcp_FactorIndependientes() As Nullable(Of Decimal)
        Get
            Return _dcp_FactorIndependientes
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dcp_FactorIndependientes, value) Then
                _dcp_FactorIndependientes = value
                OnPropertyChanged("dcp_FactorIndependientes")
            End If
        End Set
    End Property

    Private _dcp_FactorIndependientes As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property RegimenPensionario() As RegimenPensionario
        Get
            Return _regimenPensionario
        End Get
        Set(ByVal value As RegimenPensionario)
            If _regimenPensionario IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(rep_RegiPension_id, value.rep_RegiPension_id) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As RegimenPensionario = _regimenPensionario
                _regimenPensionario = value
                FixupRegimenPensionario(previousValue)
                OnNavigationPropertyChanged("RegimenPensionario")
            End If
        End Set
    End Property

    Private _regimenPensionario As RegimenPensionario


    <DataMember()>
    Public Property Conceptos() As Conceptos
        Get
            Return _conceptos
        End Get
        Set(ByVal value As Conceptos)
            If _conceptos IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(con_Conceptos_Id, value.con_Conceptos_Id) OrElse Not Equals(tic_TipoConcep_Id, value.tic_TipoConcep_Id) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As Conceptos = _conceptos
                _conceptos = value
                FixupConceptos(previousValue)
                OnNavigationPropertyChanged("Conceptos")
            End If
        End Set
    End Property

    Private _conceptos As Conceptos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Usuarios = Nothing
        RegimenPensionario = Nothing
        Conceptos = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            Usu_Id = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupRegimenPensionario(ByVal previousValue As RegimenPensionario)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleConceptosPensionarios.Contains(Me) Then
            previousValue.DetalleConceptosPensionarios.Remove(Me)
        End If

        If RegimenPensionario IsNot Nothing Then
            If Not RegimenPensionario.DetalleConceptosPensionarios.Contains(Me) Then
                RegimenPensionario.DetalleConceptosPensionarios.Add(Me)
            End If

            rep_RegiPension_id = RegimenPensionario.rep_RegiPension_id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("RegimenPensionario") AndAlso
                ChangeTracker.OriginalValues("RegimenPensionario") Is RegimenPensionario Then
                ChangeTracker.OriginalValues.Remove("RegimenPensionario")
            Else
                ChangeTracker.RecordOriginalValue("RegimenPensionario", previousValue)
            End If
            If RegimenPensionario IsNot Nothing AndAlso Not RegimenPensionario.ChangeTracker.ChangeTrackingEnabled Then
                RegimenPensionario.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupConceptos(ByVal previousValue As Conceptos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleConceptosPensionarios.Contains(Me) Then
            previousValue.DetalleConceptosPensionarios.Remove(Me)
        End If

        If Conceptos IsNot Nothing Then
            If Not Conceptos.DetalleConceptosPensionarios.Contains(Me) Then
                Conceptos.DetalleConceptosPensionarios.Add(Me)
            End If

            con_Conceptos_Id = Conceptos.con_Conceptos_Id
            tic_TipoConcep_Id = Conceptos.tic_TipoConcep_Id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Conceptos") AndAlso
                ChangeTracker.OriginalValues("Conceptos") Is Conceptos Then
                ChangeTracker.OriginalValues.Remove("Conceptos")
            Else
                ChangeTracker.RecordOriginalValue("Conceptos", previousValue)
            End If
            If Conceptos IsNot Nothing AndAlso Not Conceptos.ChangeTracker.ChangeTrackingEnabled Then
                Conceptos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
