'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(ConceptosPlanilla))>
<KnownType(GetType(DetalleTiposPlanillas))>
<KnownType(GetType(DetalleTrabajadorJudicial))>
Partial Public Class TiposPlanillas
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared tip_TipoPlan_Id As string = "tip_TipoPlan_Id"
				public shared tip_Descripcion As string = "tip_Descripcion"
				public shared tip_EsAcumuladoDePlanillas As string = "tip_EsAcumuladoDePlanillas"
				public shared Usu_Id As string = "Usu_Id"
				public shared tip_FecGrab As string = "tip_FecGrab"
		    End Structure
	



    <DataMember()>
    Public Property tip_TipoPlan_Id() As String
        Get
            Return _tip_TipoPlan_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tip_TipoPlan_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'tip_TipoPlan_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _tip_TipoPlan_Id = value
                OnPropertyChanged("tip_TipoPlan_Id")
            End If
        End Set
    End Property

    Private _tip_TipoPlan_Id As String

    <DataMember()>
    Public Property tip_Descripcion() As String
        Get
            Return _tip_Descripcion
        End Get
        Set(ByVal value As String)
            If Not Equals(_tip_Descripcion, value) Then
                _tip_Descripcion = value
                OnPropertyChanged("tip_Descripcion")
            End If
        End Set
    End Property

    Private _tip_Descripcion As String

    <DataMember()>
    Public Property tip_EsAcumuladoDePlanillas() As Nullable(Of Boolean)
        Get
            Return _tip_EsAcumuladoDePlanillas
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_tip_EsAcumuladoDePlanillas, value) Then
                _tip_EsAcumuladoDePlanillas = value
                OnPropertyChanged("tip_EsAcumuladoDePlanillas")
            End If
        End Set
    End Property

    Private _tip_EsAcumuladoDePlanillas As Nullable(Of Boolean)

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property tip_FecGrab() As Nullable(Of Date)
        Get
            Return _tip_FecGrab
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_tip_FecGrab, value) Then
                _tip_FecGrab = value
                OnPropertyChanged("tip_FecGrab")
            End If
        End Set
    End Property

    Private _tip_FecGrab As Nullable(Of Date)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property ConceptosPlanilla() As TrackableCollection(Of ConceptosPlanilla)
        Get
            If _conceptosPlanilla Is Nothing Then
                _conceptosPlanilla = New TrackableCollection(Of ConceptosPlanilla)
                AddHandler _conceptosPlanilla.CollectionChanged, AddressOf FixupConceptosPlanilla
            End If
            Return _conceptosPlanilla
        End Get
        Set(ByVal value As TrackableCollection(Of ConceptosPlanilla))
            If Not Object.ReferenceEquals(_conceptosPlanilla, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _conceptosPlanilla IsNot Nothing Then
                    RemoveHandler _conceptosPlanilla.CollectionChanged, AddressOf FixupConceptosPlanilla
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As ConceptosPlanilla In _conceptosPlanilla
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _conceptosPlanilla = value
                If _conceptosPlanilla IsNot Nothing Then
                    AddHandler _conceptosPlanilla.CollectionChanged, AddressOf FixupConceptosPlanilla
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As ConceptosPlanilla In _conceptosPlanilla
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("ConceptosPlanilla")
            End If
        End Set
    End Property

    Private _conceptosPlanilla As TrackableCollection(Of ConceptosPlanilla)

    <DataMember()>
    Public Property DetalleTiposPlanillas() As TrackableCollection(Of DetalleTiposPlanillas)
        Get
            If _detalleTiposPlanillas Is Nothing Then
                _detalleTiposPlanillas = New TrackableCollection(Of DetalleTiposPlanillas)
                AddHandler _detalleTiposPlanillas.CollectionChanged, AddressOf FixupDetalleTiposPlanillas
            End If
            Return _detalleTiposPlanillas
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTiposPlanillas))
            If Not Object.ReferenceEquals(_detalleTiposPlanillas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTiposPlanillas IsNot Nothing Then
                    RemoveHandler _detalleTiposPlanillas.CollectionChanged, AddressOf FixupDetalleTiposPlanillas
                End If
                _detalleTiposPlanillas = value
                If _detalleTiposPlanillas IsNot Nothing Then
                    AddHandler _detalleTiposPlanillas.CollectionChanged, AddressOf FixupDetalleTiposPlanillas
                End If
                OnNavigationPropertyChanged("DetalleTiposPlanillas")
            End If
        End Set
    End Property

    Private _detalleTiposPlanillas As TrackableCollection(Of DetalleTiposPlanillas)

    <DataMember()>
    Public Property DetalleTiposPlanillas1() As TrackableCollection(Of DetalleTiposPlanillas)
        Get
            If _detalleTiposPlanillas1 Is Nothing Then
                _detalleTiposPlanillas1 = New TrackableCollection(Of DetalleTiposPlanillas)
                AddHandler _detalleTiposPlanillas1.CollectionChanged, AddressOf FixupDetalleTiposPlanillas1
            End If
            Return _detalleTiposPlanillas1
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTiposPlanillas))
            If Not Object.ReferenceEquals(_detalleTiposPlanillas1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTiposPlanillas1 IsNot Nothing Then
                    RemoveHandler _detalleTiposPlanillas1.CollectionChanged, AddressOf FixupDetalleTiposPlanillas1
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As DetalleTiposPlanillas In _detalleTiposPlanillas1
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _detalleTiposPlanillas1 = value
                If _detalleTiposPlanillas1 IsNot Nothing Then
                    AddHandler _detalleTiposPlanillas1.CollectionChanged, AddressOf FixupDetalleTiposPlanillas1
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As DetalleTiposPlanillas In _detalleTiposPlanillas1
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("DetalleTiposPlanillas1")
            End If
        End Set
    End Property

    Private _detalleTiposPlanillas1 As TrackableCollection(Of DetalleTiposPlanillas)

    <DataMember()>
    Public Property DetalleTrabajadorJudicial() As TrackableCollection(Of DetalleTrabajadorJudicial)
        Get
            If _detalleTrabajadorJudicial Is Nothing Then
                _detalleTrabajadorJudicial = New TrackableCollection(Of DetalleTrabajadorJudicial)
                AddHandler _detalleTrabajadorJudicial.CollectionChanged, AddressOf FixupDetalleTrabajadorJudicial
            End If
            Return _detalleTrabajadorJudicial
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTrabajadorJudicial))
            If Not Object.ReferenceEquals(_detalleTrabajadorJudicial, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTrabajadorJudicial IsNot Nothing Then
                    RemoveHandler _detalleTrabajadorJudicial.CollectionChanged, AddressOf FixupDetalleTrabajadorJudicial
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As DetalleTrabajadorJudicial In _detalleTrabajadorJudicial
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _detalleTrabajadorJudicial = value
                If _detalleTrabajadorJudicial IsNot Nothing Then
                    AddHandler _detalleTrabajadorJudicial.CollectionChanged, AddressOf FixupDetalleTrabajadorJudicial
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As DetalleTrabajadorJudicial In _detalleTrabajadorJudicial
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("DetalleTrabajadorJudicial")
            End If
        End Set
    End Property

    Private _detalleTrabajadorJudicial As TrackableCollection(Of DetalleTrabajadorJudicial)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Usuarios = Nothing
        ConceptosPlanilla.Clear()
        DetalleTiposPlanillas.Clear()
        DetalleTiposPlanillas1.Clear()
        DetalleTrabajadorJudicial.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            Usu_Id = Usuarios.USU_ID
        ElseIf Not skipKeys Then
            Usu_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupConceptosPlanilla(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ConceptosPlanilla In e.NewItems
                item.TiposPlanillas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ConceptosPlanilla", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ConceptosPlanilla In e.OldItems
                If ReferenceEquals(item.TiposPlanillas, Me) Then
                    item.TiposPlanillas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ConceptosPlanilla", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDetalleTiposPlanillas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTiposPlanillas In e.NewItems
                item.TiposPlanillas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTiposPlanillas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTiposPlanillas In e.OldItems
                If ReferenceEquals(item.TiposPlanillas, Me) Then
                    item.TiposPlanillas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTiposPlanillas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTiposPlanillas1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTiposPlanillas In e.NewItems
                item.TiposPlanillas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTiposPlanillas1", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTiposPlanillas In e.OldItems
                If ReferenceEquals(item.TiposPlanillas1, Me) Then
                    item.TiposPlanillas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTiposPlanillas1", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDetalleTrabajadorJudicial(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTrabajadorJudicial In e.NewItems
                item.TiposPlanillas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTrabajadorJudicial", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTrabajadorJudicial In e.OldItems
                If ReferenceEquals(item.TiposPlanillas, Me) Then
                    item.TiposPlanillas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTrabajadorJudicial", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

#End Region
End Class
