'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CuentasActivos))>
<KnownType(GetType(ClaseCuenta))>
<KnownType(GetType(CajaCtaCte))>
<KnownType(GetType(CuentasContables))>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(DetalleTesoreria))>
<KnownType(GetType(CuentasArticulo))>
<KnownType(GetType(DetalleAsientosManuales))>
<KnownType(GetType(CuentasVarias))>
<KnownType(GetType(AsientosContables))>
<KnownType(GetType(MovimientoCajaBanco))>
<KnownType(GetType(RolOpeCtaCteEntregas))>
<KnownType(GetType(CuentasComprobantesLogistica))>
<KnownType(GetType(RolOpeCtaCte))>
<KnownType(GetType(DetalleProvisionCompras))>
<KnownType(GetType(OrdenCompraDetalle))>
<KnownType(GetType(Articulos))>
<KnownType(GetType(OrdenServicioDetalle))>
Partial Public Class CuentasContables
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CUC_ID As string = "CUC_ID"
				public shared CUC_DESCRIPCION As string = "CUC_DESCRIPCION"
				public shared cls_Id As string = "cls_Id"
				public shared cuc_IdCargo As string = "cuc_IdCargo"
				public shared cuc_IdAbono As string = "cuc_IdAbono"
				public shared cuc_EsCentroCosto As string = "cuc_EsCentroCosto"
				public shared USU_ID As string = "USU_ID"
				public shared CUC_FEC_GRAB As string = "CUC_FEC_GRAB"
				public shared CUC_ESTADO As string = "CUC_ESTADO"
				public shared cuc_EsMovimiento As string = "cuc_EsMovimiento"
				public shared cuc_Abreviatura As string = "cuc_Abreviatura"
		    End Structure
	



    <DataMember()>
    Public Property CUC_ID() As String
        Get
            Return _cUC_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CUC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If CuentasContables2 IsNot Nothing AndAlso Not Equals(CuentasContables2.CUC_ID, value) Then
                        CuentasContables2 = Nothing
                    End If
                    If CuentasContables3 IsNot Nothing AndAlso Not Equals(CuentasContables3.CUC_ID, value) Then
                        CuentasContables3 = Nothing
                    End If
                End If
                _cUC_ID = value
                OnPropertyChanged("CUC_ID")
            End If
        End Set
    End Property

    Private _cUC_ID As String

    <DataMember()>
    Public Property CUC_DESCRIPCION() As String
        Get
            Return _cUC_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_DESCRIPCION, value) Then
                _cUC_DESCRIPCION = value
                OnPropertyChanged("CUC_DESCRIPCION")
            End If
        End Set
    End Property

    Private _cUC_DESCRIPCION As String

    <DataMember()>
    Public Property cls_Id() As String
        Get
            Return _cls_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cls_Id, value) Then
                ChangeTracker.RecordOriginalValue("cls_Id", _cls_Id)
                If Not IsDeserializing Then
                    If ClaseCuenta IsNot Nothing AndAlso Not Equals(ClaseCuenta.cls_Id, value) Then
                        ClaseCuenta = Nothing
                    End If
                End If
                _cls_Id = value
                OnPropertyChanged("cls_Id")
            End If
        End Set
    End Property

    Private _cls_Id As String

    <DataMember()>
    Public Property cuc_IdCargo() As String
        Get
            Return _cuc_IdCargo
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdCargo, value) Then
                _cuc_IdCargo = value
                OnPropertyChanged("cuc_IdCargo")
            End If
        End Set
    End Property

    Private _cuc_IdCargo As String

    <DataMember()>
    Public Property cuc_IdAbono() As String
        Get
            Return _cuc_IdAbono
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdAbono, value) Then
                _cuc_IdAbono = value
                OnPropertyChanged("cuc_IdAbono")
            End If
        End Set
    End Property

    Private _cuc_IdAbono As String

    <DataMember()>
    Public Property cuc_EsCentroCosto() As Nullable(Of Boolean)
        Get
            Return _cuc_EsCentroCosto
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_cuc_EsCentroCosto, value) Then
                _cuc_EsCentroCosto = value
                OnPropertyChanged("cuc_EsCentroCosto")
            End If
        End Set
    End Property

    Private _cuc_EsCentroCosto As Nullable(Of Boolean)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CUC_FEC_GRAB() As Date
        Get
            Return _cUC_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cUC_FEC_GRAB, value) Then
                _cUC_FEC_GRAB = value
                OnPropertyChanged("CUC_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cUC_FEC_GRAB As Date

    <DataMember()>
    Public Property CUC_ESTADO() As Boolean
        Get
            Return _cUC_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cUC_ESTADO, value) Then
                _cUC_ESTADO = value
                OnPropertyChanged("CUC_ESTADO")
            End If
        End Set
    End Property

    Private _cUC_ESTADO As Boolean

    <DataMember()>
    Public Property cuc_EsMovimiento() As String
        Get
            Return _cuc_EsMovimiento
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_EsMovimiento, value) Then
                _cuc_EsMovimiento = value
                OnPropertyChanged("cuc_EsMovimiento")
            End If
        End Set
    End Property

    Private _cuc_EsMovimiento As String

    <DataMember()>
    Public Property cuc_Abreviatura() As String
        Get
            Return _cuc_Abreviatura
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_Abreviatura, value) Then
                _cuc_Abreviatura = value
                OnPropertyChanged("cuc_Abreviatura")
            End If
        End Set
    End Property

    Private _cuc_Abreviatura As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property CuentasActivos() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos Is Nothing Then
                _cuentasActivos = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos.CollectionChanged, AddressOf FixupCuentasActivos
            End If
            Return _cuentasActivos
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos IsNot Nothing Then
                    RemoveHandler _cuentasActivos.CollectionChanged, AddressOf FixupCuentasActivos
                End If
                _cuentasActivos = value
                If _cuentasActivos IsNot Nothing Then
                    AddHandler _cuentasActivos.CollectionChanged, AddressOf FixupCuentasActivos
                End If
                OnNavigationPropertyChanged("CuentasActivos")
            End If
        End Set
    End Property

    Private _cuentasActivos As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property CuentasActivos1() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos1 Is Nothing Then
                _cuentasActivos1 = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos1.CollectionChanged, AddressOf FixupCuentasActivos1
            End If
            Return _cuentasActivos1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos1 IsNot Nothing Then
                    RemoveHandler _cuentasActivos1.CollectionChanged, AddressOf FixupCuentasActivos1
                End If
                _cuentasActivos1 = value
                If _cuentasActivos1 IsNot Nothing Then
                    AddHandler _cuentasActivos1.CollectionChanged, AddressOf FixupCuentasActivos1
                End If
                OnNavigationPropertyChanged("CuentasActivos1")
            End If
        End Set
    End Property

    Private _cuentasActivos1 As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property CuentasActivos2() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos2 Is Nothing Then
                _cuentasActivos2 = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos2.CollectionChanged, AddressOf FixupCuentasActivos2
            End If
            Return _cuentasActivos2
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos2 IsNot Nothing Then
                    RemoveHandler _cuentasActivos2.CollectionChanged, AddressOf FixupCuentasActivos2
                End If
                _cuentasActivos2 = value
                If _cuentasActivos2 IsNot Nothing Then
                    AddHandler _cuentasActivos2.CollectionChanged, AddressOf FixupCuentasActivos2
                End If
                OnNavigationPropertyChanged("CuentasActivos2")
            End If
        End Set
    End Property

    Private _cuentasActivos2 As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property CuentasActivos3() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos3 Is Nothing Then
                _cuentasActivos3 = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos3.CollectionChanged, AddressOf FixupCuentasActivos3
            End If
            Return _cuentasActivos3
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos3 IsNot Nothing Then
                    RemoveHandler _cuentasActivos3.CollectionChanged, AddressOf FixupCuentasActivos3
                End If
                _cuentasActivos3 = value
                If _cuentasActivos3 IsNot Nothing Then
                    AddHandler _cuentasActivos3.CollectionChanged, AddressOf FixupCuentasActivos3
                End If
                OnNavigationPropertyChanged("CuentasActivos3")
            End If
        End Set
    End Property

    Private _cuentasActivos3 As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property CuentasActivos4() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos4 Is Nothing Then
                _cuentasActivos4 = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos4.CollectionChanged, AddressOf FixupCuentasActivos4
            End If
            Return _cuentasActivos4
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos4, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos4 IsNot Nothing Then
                    RemoveHandler _cuentasActivos4.CollectionChanged, AddressOf FixupCuentasActivos4
                End If
                _cuentasActivos4 = value
                If _cuentasActivos4 IsNot Nothing Then
                    AddHandler _cuentasActivos4.CollectionChanged, AddressOf FixupCuentasActivos4
                End If
                OnNavigationPropertyChanged("CuentasActivos4")
            End If
        End Set
    End Property

    Private _cuentasActivos4 As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property CuentasActivos5() As TrackableCollection(Of CuentasActivos)
        Get
            If _cuentasActivos5 Is Nothing Then
                _cuentasActivos5 = New TrackableCollection(Of CuentasActivos)
                AddHandler _cuentasActivos5.CollectionChanged, AddressOf FixupCuentasActivos5
            End If
            Return _cuentasActivos5
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasActivos))
            If Not Object.ReferenceEquals(_cuentasActivos5, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasActivos5 IsNot Nothing Then
                    RemoveHandler _cuentasActivos5.CollectionChanged, AddressOf FixupCuentasActivos5
                End If
                _cuentasActivos5 = value
                If _cuentasActivos5 IsNot Nothing Then
                    AddHandler _cuentasActivos5.CollectionChanged, AddressOf FixupCuentasActivos5
                End If
                OnNavigationPropertyChanged("CuentasActivos5")
            End If
        End Set
    End Property

    Private _cuentasActivos5 As TrackableCollection(Of CuentasActivos)

    <DataMember()>
    Public Property ClaseCuenta() As ClaseCuenta
        Get
            Return _claseCuenta
        End Get
        Set(ByVal value As ClaseCuenta)
            If _claseCuenta IsNot value Then
                Dim previousValue As ClaseCuenta = _claseCuenta
                _claseCuenta = value
                FixupClaseCuenta(previousValue)
                OnNavigationPropertyChanged("ClaseCuenta")
            End If
        End Set
    End Property

    Private _claseCuenta As ClaseCuenta


    <DataMember()>
    Public Property CajaCtaCte() As TrackableCollection(Of CajaCtaCte)
        Get
            If _cajaCtaCte Is Nothing Then
                _cajaCtaCte = New TrackableCollection(Of CajaCtaCte)
                AddHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
            End If
            Return _cajaCtaCte
        End Get
        Set(ByVal value As TrackableCollection(Of CajaCtaCte))
            If Not Object.ReferenceEquals(_cajaCtaCte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cajaCtaCte IsNot Nothing Then
                    RemoveHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
                End If
                _cajaCtaCte = value
                If _cajaCtaCte IsNot Nothing Then
                    AddHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
                End If
                OnNavigationPropertyChanged("CajaCtaCte")
            End If
        End Set
    End Property

    Private _cajaCtaCte As TrackableCollection(Of CajaCtaCte)

    <DataMember()>
    Public Property CuentasContables1() As CuentasContables
        Get
            Return _cuentasContables1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables1
                _cuentasContables1 = value
                FixupCuentasContables1(previousValue)
                OnNavigationPropertyChanged("CuentasContables1")
            End If
        End Set
    End Property

    Private _cuentasContables1 As CuentasContables


    <DataMember()>
    Public Property CuentasContables2() As CuentasContables
        Get
            Return _cuentasContables2
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables2 IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(CUC_ID, value.CUC_ID) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As CuentasContables = _cuentasContables2
                _cuentasContables2 = value
                FixupCuentasContables2(previousValue)
                OnNavigationPropertyChanged("CuentasContables2")
            End If
        End Set
    End Property

    Private _cuentasContables2 As CuentasContables


    <DataMember()>
    Public Property CuentasContables11() As CuentasContables
        Get
            Return _cuentasContables11
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables11 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables11
                _cuentasContables11 = value
                FixupCuentasContables11(previousValue)
                OnNavigationPropertyChanged("CuentasContables11")
            End If
        End Set
    End Property

    Private _cuentasContables11 As CuentasContables


    <DataMember()>
    Public Property CuentasContables3() As CuentasContables
        Get
            Return _cuentasContables3
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables3 IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(CUC_ID, value.CUC_ID) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As CuentasContables = _cuentasContables3
                _cuentasContables3 = value
                FixupCuentasContables3(previousValue)
                OnNavigationPropertyChanged("CuentasContables3")
            End If
        End Set
    End Property

    Private _cuentasContables3 As CuentasContables


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property DetalleTesoreria() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria Is Nothing Then
                _detalleTesoreria = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
            End If
            Return _detalleTesoreria
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria IsNot Nothing Then
                    RemoveHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                _detalleTesoreria = value
                If _detalleTesoreria IsNot Nothing Then
                    AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                OnNavigationPropertyChanged("DetalleTesoreria")
            End If
        End Set
    End Property

    Private _detalleTesoreria As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property CuentasArticulo() As TrackableCollection(Of CuentasArticulo)
        Get
            If _cuentasArticulo Is Nothing Then
                _cuentasArticulo = New TrackableCollection(Of CuentasArticulo)
                AddHandler _cuentasArticulo.CollectionChanged, AddressOf FixupCuentasArticulo
            End If
            Return _cuentasArticulo
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasArticulo))
            If Not Object.ReferenceEquals(_cuentasArticulo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasArticulo IsNot Nothing Then
                    RemoveHandler _cuentasArticulo.CollectionChanged, AddressOf FixupCuentasArticulo
                End If
                _cuentasArticulo = value
                If _cuentasArticulo IsNot Nothing Then
                    AddHandler _cuentasArticulo.CollectionChanged, AddressOf FixupCuentasArticulo
                End If
                OnNavigationPropertyChanged("CuentasArticulo")
            End If
        End Set
    End Property

    Private _cuentasArticulo As TrackableCollection(Of CuentasArticulo)

    <DataMember()>
    Public Property CuentasArticulo1() As TrackableCollection(Of CuentasArticulo)
        Get
            If _cuentasArticulo1 Is Nothing Then
                _cuentasArticulo1 = New TrackableCollection(Of CuentasArticulo)
                AddHandler _cuentasArticulo1.CollectionChanged, AddressOf FixupCuentasArticulo1
            End If
            Return _cuentasArticulo1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasArticulo))
            If Not Object.ReferenceEquals(_cuentasArticulo1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasArticulo1 IsNot Nothing Then
                    RemoveHandler _cuentasArticulo1.CollectionChanged, AddressOf FixupCuentasArticulo1
                End If
                _cuentasArticulo1 = value
                If _cuentasArticulo1 IsNot Nothing Then
                    AddHandler _cuentasArticulo1.CollectionChanged, AddressOf FixupCuentasArticulo1
                End If
                OnNavigationPropertyChanged("CuentasArticulo1")
            End If
        End Set
    End Property

    Private _cuentasArticulo1 As TrackableCollection(Of CuentasArticulo)

    <DataMember()>
    Public Property CuentasArticulo2() As TrackableCollection(Of CuentasArticulo)
        Get
            If _cuentasArticulo2 Is Nothing Then
                _cuentasArticulo2 = New TrackableCollection(Of CuentasArticulo)
                AddHandler _cuentasArticulo2.CollectionChanged, AddressOf FixupCuentasArticulo2
            End If
            Return _cuentasArticulo2
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasArticulo))
            If Not Object.ReferenceEquals(_cuentasArticulo2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasArticulo2 IsNot Nothing Then
                    RemoveHandler _cuentasArticulo2.CollectionChanged, AddressOf FixupCuentasArticulo2
                End If
                _cuentasArticulo2 = value
                If _cuentasArticulo2 IsNot Nothing Then
                    AddHandler _cuentasArticulo2.CollectionChanged, AddressOf FixupCuentasArticulo2
                End If
                OnNavigationPropertyChanged("CuentasArticulo2")
            End If
        End Set
    End Property

    Private _cuentasArticulo2 As TrackableCollection(Of CuentasArticulo)

    <DataMember()>
    Public Property DetalleAsientosManuales() As TrackableCollection(Of DetalleAsientosManuales)
        Get
            If _detalleAsientosManuales Is Nothing Then
                _detalleAsientosManuales = New TrackableCollection(Of DetalleAsientosManuales)
                AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
            End If
            Return _detalleAsientosManuales
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAsientosManuales))
            If Not Object.ReferenceEquals(_detalleAsientosManuales, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAsientosManuales IsNot Nothing Then
                    RemoveHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                _detalleAsientosManuales = value
                If _detalleAsientosManuales IsNot Nothing Then
                    AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                OnNavigationPropertyChanged("DetalleAsientosManuales")
            End If
        End Set
    End Property

    Private _detalleAsientosManuales As TrackableCollection(Of DetalleAsientosManuales)

    <DataMember()>
    Public Property CuentasVarias() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias Is Nothing Then
                _cuentasVarias = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias.CollectionChanged, AddressOf FixupCuentasVarias
            End If
            Return _cuentasVarias
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias IsNot Nothing Then
                    RemoveHandler _cuentasVarias.CollectionChanged, AddressOf FixupCuentasVarias
                End If
                _cuentasVarias = value
                If _cuentasVarias IsNot Nothing Then
                    AddHandler _cuentasVarias.CollectionChanged, AddressOf FixupCuentasVarias
                End If
                OnNavigationPropertyChanged("CuentasVarias")
            End If
        End Set
    End Property

    Private _cuentasVarias As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias1() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias1 Is Nothing Then
                _cuentasVarias1 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias1.CollectionChanged, AddressOf FixupCuentasVarias1
            End If
            Return _cuentasVarias1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias1 IsNot Nothing Then
                    RemoveHandler _cuentasVarias1.CollectionChanged, AddressOf FixupCuentasVarias1
                End If
                _cuentasVarias1 = value
                If _cuentasVarias1 IsNot Nothing Then
                    AddHandler _cuentasVarias1.CollectionChanged, AddressOf FixupCuentasVarias1
                End If
                OnNavigationPropertyChanged("CuentasVarias1")
            End If
        End Set
    End Property

    Private _cuentasVarias1 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias2() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias2 Is Nothing Then
                _cuentasVarias2 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias2.CollectionChanged, AddressOf FixupCuentasVarias2
            End If
            Return _cuentasVarias2
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias2 IsNot Nothing Then
                    RemoveHandler _cuentasVarias2.CollectionChanged, AddressOf FixupCuentasVarias2
                End If
                _cuentasVarias2 = value
                If _cuentasVarias2 IsNot Nothing Then
                    AddHandler _cuentasVarias2.CollectionChanged, AddressOf FixupCuentasVarias2
                End If
                OnNavigationPropertyChanged("CuentasVarias2")
            End If
        End Set
    End Property

    Private _cuentasVarias2 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias3() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias3 Is Nothing Then
                _cuentasVarias3 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias3.CollectionChanged, AddressOf FixupCuentasVarias3
            End If
            Return _cuentasVarias3
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias3 IsNot Nothing Then
                    RemoveHandler _cuentasVarias3.CollectionChanged, AddressOf FixupCuentasVarias3
                End If
                _cuentasVarias3 = value
                If _cuentasVarias3 IsNot Nothing Then
                    AddHandler _cuentasVarias3.CollectionChanged, AddressOf FixupCuentasVarias3
                End If
                OnNavigationPropertyChanged("CuentasVarias3")
            End If
        End Set
    End Property

    Private _cuentasVarias3 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias4() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias4 Is Nothing Then
                _cuentasVarias4 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias4.CollectionChanged, AddressOf FixupCuentasVarias4
            End If
            Return _cuentasVarias4
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias4, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias4 IsNot Nothing Then
                    RemoveHandler _cuentasVarias4.CollectionChanged, AddressOf FixupCuentasVarias4
                End If
                _cuentasVarias4 = value
                If _cuentasVarias4 IsNot Nothing Then
                    AddHandler _cuentasVarias4.CollectionChanged, AddressOf FixupCuentasVarias4
                End If
                OnNavigationPropertyChanged("CuentasVarias4")
            End If
        End Set
    End Property

    Private _cuentasVarias4 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias5() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias5 Is Nothing Then
                _cuentasVarias5 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias5.CollectionChanged, AddressOf FixupCuentasVarias5
            End If
            Return _cuentasVarias5
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias5, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias5 IsNot Nothing Then
                    RemoveHandler _cuentasVarias5.CollectionChanged, AddressOf FixupCuentasVarias5
                End If
                _cuentasVarias5 = value
                If _cuentasVarias5 IsNot Nothing Then
                    AddHandler _cuentasVarias5.CollectionChanged, AddressOf FixupCuentasVarias5
                End If
                OnNavigationPropertyChanged("CuentasVarias5")
            End If
        End Set
    End Property

    Private _cuentasVarias5 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias6() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias6 Is Nothing Then
                _cuentasVarias6 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias6.CollectionChanged, AddressOf FixupCuentasVarias6
            End If
            Return _cuentasVarias6
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias6, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias6 IsNot Nothing Then
                    RemoveHandler _cuentasVarias6.CollectionChanged, AddressOf FixupCuentasVarias6
                End If
                _cuentasVarias6 = value
                If _cuentasVarias6 IsNot Nothing Then
                    AddHandler _cuentasVarias6.CollectionChanged, AddressOf FixupCuentasVarias6
                End If
                OnNavigationPropertyChanged("CuentasVarias6")
            End If
        End Set
    End Property

    Private _cuentasVarias6 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias7() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias7 Is Nothing Then
                _cuentasVarias7 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias7.CollectionChanged, AddressOf FixupCuentasVarias7
            End If
            Return _cuentasVarias7
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias7, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias7 IsNot Nothing Then
                    RemoveHandler _cuentasVarias7.CollectionChanged, AddressOf FixupCuentasVarias7
                End If
                _cuentasVarias7 = value
                If _cuentasVarias7 IsNot Nothing Then
                    AddHandler _cuentasVarias7.CollectionChanged, AddressOf FixupCuentasVarias7
                End If
                OnNavigationPropertyChanged("CuentasVarias7")
            End If
        End Set
    End Property

    Private _cuentasVarias7 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias8() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias8 Is Nothing Then
                _cuentasVarias8 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias8.CollectionChanged, AddressOf FixupCuentasVarias8
            End If
            Return _cuentasVarias8
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias8, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias8 IsNot Nothing Then
                    RemoveHandler _cuentasVarias8.CollectionChanged, AddressOf FixupCuentasVarias8
                End If
                _cuentasVarias8 = value
                If _cuentasVarias8 IsNot Nothing Then
                    AddHandler _cuentasVarias8.CollectionChanged, AddressOf FixupCuentasVarias8
                End If
                OnNavigationPropertyChanged("CuentasVarias8")
            End If
        End Set
    End Property

    Private _cuentasVarias8 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias9() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias9 Is Nothing Then
                _cuentasVarias9 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias9.CollectionChanged, AddressOf FixupCuentasVarias9
            End If
            Return _cuentasVarias9
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias9, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias9 IsNot Nothing Then
                    RemoveHandler _cuentasVarias9.CollectionChanged, AddressOf FixupCuentasVarias9
                End If
                _cuentasVarias9 = value
                If _cuentasVarias9 IsNot Nothing Then
                    AddHandler _cuentasVarias9.CollectionChanged, AddressOf FixupCuentasVarias9
                End If
                OnNavigationPropertyChanged("CuentasVarias9")
            End If
        End Set
    End Property

    Private _cuentasVarias9 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias10() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias10 Is Nothing Then
                _cuentasVarias10 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias10.CollectionChanged, AddressOf FixupCuentasVarias10
            End If
            Return _cuentasVarias10
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias10, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias10 IsNot Nothing Then
                    RemoveHandler _cuentasVarias10.CollectionChanged, AddressOf FixupCuentasVarias10
                End If
                _cuentasVarias10 = value
                If _cuentasVarias10 IsNot Nothing Then
                    AddHandler _cuentasVarias10.CollectionChanged, AddressOf FixupCuentasVarias10
                End If
                OnNavigationPropertyChanged("CuentasVarias10")
            End If
        End Set
    End Property

    Private _cuentasVarias10 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias11() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias11 Is Nothing Then
                _cuentasVarias11 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias11.CollectionChanged, AddressOf FixupCuentasVarias11
            End If
            Return _cuentasVarias11
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias11, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias11 IsNot Nothing Then
                    RemoveHandler _cuentasVarias11.CollectionChanged, AddressOf FixupCuentasVarias11
                End If
                _cuentasVarias11 = value
                If _cuentasVarias11 IsNot Nothing Then
                    AddHandler _cuentasVarias11.CollectionChanged, AddressOf FixupCuentasVarias11
                End If
                OnNavigationPropertyChanged("CuentasVarias11")
            End If
        End Set
    End Property

    Private _cuentasVarias11 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property AsientosContables() As TrackableCollection(Of AsientosContables)
        Get
            If _asientosContables Is Nothing Then
                _asientosContables = New TrackableCollection(Of AsientosContables)
                AddHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
            End If
            Return _asientosContables
        End Get
        Set(ByVal value As TrackableCollection(Of AsientosContables))
            If Not Object.ReferenceEquals(_asientosContables, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _asientosContables IsNot Nothing Then
                    RemoveHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
                End If
                _asientosContables = value
                If _asientosContables IsNot Nothing Then
                    AddHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
                End If
                OnNavigationPropertyChanged("AsientosContables")
            End If
        End Set
    End Property

    Private _asientosContables As TrackableCollection(Of AsientosContables)

    <DataMember()>
    Public Property MovimientoCajaBanco() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco Is Nothing Then
                _movimientoCajaBanco = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
            End If
            Return _movimientoCajaBanco
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                _movimientoCajaBanco = value
                If _movimientoCajaBanco IsNot Nothing Then
                    AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property RolOpeCtaCteEntregas() As TrackableCollection(Of RolOpeCtaCteEntregas)
        Get
            If _rolOpeCtaCteEntregas Is Nothing Then
                _rolOpeCtaCteEntregas = New TrackableCollection(Of RolOpeCtaCteEntregas)
                AddHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
            End If
            Return _rolOpeCtaCteEntregas
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCteEntregas))
            If Not Object.ReferenceEquals(_rolOpeCtaCteEntregas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCteEntregas IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
                End If
                _rolOpeCtaCteEntregas = value
                If _rolOpeCtaCteEntregas IsNot Nothing Then
                    AddHandler _rolOpeCtaCteEntregas.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas
                End If
                OnNavigationPropertyChanged("RolOpeCtaCteEntregas")
            End If
        End Set
    End Property

    Private _rolOpeCtaCteEntregas As TrackableCollection(Of RolOpeCtaCteEntregas)

    <DataMember()>
    Public Property RolOpeCtaCteEntregas1() As TrackableCollection(Of RolOpeCtaCteEntregas)
        Get
            If _rolOpeCtaCteEntregas1 Is Nothing Then
                _rolOpeCtaCteEntregas1 = New TrackableCollection(Of RolOpeCtaCteEntregas)
                AddHandler _rolOpeCtaCteEntregas1.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas1
            End If
            Return _rolOpeCtaCteEntregas1
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCteEntregas))
            If Not Object.ReferenceEquals(_rolOpeCtaCteEntregas1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCteEntregas1 IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCteEntregas1.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas1
                End If
                _rolOpeCtaCteEntregas1 = value
                If _rolOpeCtaCteEntregas1 IsNot Nothing Then
                    AddHandler _rolOpeCtaCteEntregas1.CollectionChanged, AddressOf FixupRolOpeCtaCteEntregas1
                End If
                OnNavigationPropertyChanged("RolOpeCtaCteEntregas1")
            End If
        End Set
    End Property

    Private _rolOpeCtaCteEntregas1 As TrackableCollection(Of RolOpeCtaCteEntregas)

    <DataMember()>
    Public Property CuentasComprobantesLogistica() As TrackableCollection(Of CuentasComprobantesLogistica)
        Get
            If _cuentasComprobantesLogistica Is Nothing Then
                _cuentasComprobantesLogistica = New TrackableCollection(Of CuentasComprobantesLogistica)
                AddHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
            End If
            Return _cuentasComprobantesLogistica
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasComprobantesLogistica))
            If Not Object.ReferenceEquals(_cuentasComprobantesLogistica, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasComprobantesLogistica IsNot Nothing Then
                    RemoveHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As CuentasComprobantesLogistica In _cuentasComprobantesLogistica
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _cuentasComprobantesLogistica = value
                If _cuentasComprobantesLogistica IsNot Nothing Then
                    AddHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As CuentasComprobantesLogistica In _cuentasComprobantesLogistica
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("CuentasComprobantesLogistica")
            End If
        End Set
    End Property

    Private _cuentasComprobantesLogistica As TrackableCollection(Of CuentasComprobantesLogistica)

    <DataMember()>
    Public Property CuentasVarias_1() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias_1 Is Nothing Then
                _cuentasVarias_1 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias_1.CollectionChanged, AddressOf FixupCuentasVarias_1
            End If
            Return _cuentasVarias_1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias_1 IsNot Nothing Then
                    RemoveHandler _cuentasVarias_1.CollectionChanged, AddressOf FixupCuentasVarias_1
                End If
                _cuentasVarias_1 = value
                If _cuentasVarias_1 IsNot Nothing Then
                    AddHandler _cuentasVarias_1.CollectionChanged, AddressOf FixupCuentasVarias_1
                End If
                OnNavigationPropertyChanged("CuentasVarias_1")
            End If
        End Set
    End Property

    Private _cuentasVarias_1 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property RolOpeCtaCte() As TrackableCollection(Of RolOpeCtaCte)
        Get
            If _rolOpeCtaCte Is Nothing Then
                _rolOpeCtaCte = New TrackableCollection(Of RolOpeCtaCte)
                AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
            End If
            Return _rolOpeCtaCte
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCte))
            If Not Object.ReferenceEquals(_rolOpeCtaCte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCte IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                End If
                _rolOpeCtaCte = value
                If _rolOpeCtaCte IsNot Nothing Then
                    AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                End If
                OnNavigationPropertyChanged("RolOpeCtaCte")
            End If
        End Set
    End Property

    Private _rolOpeCtaCte As TrackableCollection(Of RolOpeCtaCte)

    <DataMember()>
    Public Property RolOpeCtaCte1() As TrackableCollection(Of RolOpeCtaCte)
        Get
            If _rolOpeCtaCte1 Is Nothing Then
                _rolOpeCtaCte1 = New TrackableCollection(Of RolOpeCtaCte)
                AddHandler _rolOpeCtaCte1.CollectionChanged, AddressOf FixupRolOpeCtaCte1
            End If
            Return _rolOpeCtaCte1
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCte))
            If Not Object.ReferenceEquals(_rolOpeCtaCte1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCte1 IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCte1.CollectionChanged, AddressOf FixupRolOpeCtaCte1
                End If
                _rolOpeCtaCte1 = value
                If _rolOpeCtaCte1 IsNot Nothing Then
                    AddHandler _rolOpeCtaCte1.CollectionChanged, AddressOf FixupRolOpeCtaCte1
                End If
                OnNavigationPropertyChanged("RolOpeCtaCte1")
            End If
        End Set
    End Property

    Private _rolOpeCtaCte1 As TrackableCollection(Of RolOpeCtaCte)

    <DataMember()>
    Public Property DetalleProvisionCompras() As TrackableCollection(Of DetalleProvisionCompras)
        Get
            If _detalleProvisionCompras Is Nothing Then
                _detalleProvisionCompras = New TrackableCollection(Of DetalleProvisionCompras)
                AddHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
            End If
            Return _detalleProvisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleProvisionCompras))
            If Not Object.ReferenceEquals(_detalleProvisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleProvisionCompras IsNot Nothing Then
                    RemoveHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
                End If
                _detalleProvisionCompras = value
                If _detalleProvisionCompras IsNot Nothing Then
                    AddHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
                End If
                OnNavigationPropertyChanged("DetalleProvisionCompras")
            End If
        End Set
    End Property

    Private _detalleProvisionCompras As TrackableCollection(Of DetalleProvisionCompras)

    <DataMember()>
    Public Property CuentasVarias_2() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias_2 Is Nothing Then
                _cuentasVarias_2 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias_2.CollectionChanged, AddressOf FixupCuentasVarias_2
            End If
            Return _cuentasVarias_2
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias_2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias_2 IsNot Nothing Then
                    RemoveHandler _cuentasVarias_2.CollectionChanged, AddressOf FixupCuentasVarias_2
                End If
                _cuentasVarias_2 = value
                If _cuentasVarias_2 IsNot Nothing Then
                    AddHandler _cuentasVarias_2.CollectionChanged, AddressOf FixupCuentasVarias_2
                End If
                OnNavigationPropertyChanged("CuentasVarias_2")
            End If
        End Set
    End Property

    Private _cuentasVarias_2 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias1_1() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias1_1 Is Nothing Then
                _cuentasVarias1_1 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias1_1.CollectionChanged, AddressOf FixupCuentasVarias1_1
            End If
            Return _cuentasVarias1_1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias1_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias1_1 IsNot Nothing Then
                    RemoveHandler _cuentasVarias1_1.CollectionChanged, AddressOf FixupCuentasVarias1_1
                End If
                _cuentasVarias1_1 = value
                If _cuentasVarias1_1 IsNot Nothing Then
                    AddHandler _cuentasVarias1_1.CollectionChanged, AddressOf FixupCuentasVarias1_1
                End If
                OnNavigationPropertyChanged("CuentasVarias1_1")
            End If
        End Set
    End Property

    Private _cuentasVarias1_1 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property CuentasVarias3_1() As TrackableCollection(Of CuentasVarias)
        Get
            If _cuentasVarias3_1 Is Nothing Then
                _cuentasVarias3_1 = New TrackableCollection(Of CuentasVarias)
                AddHandler _cuentasVarias3_1.CollectionChanged, AddressOf FixupCuentasVarias3_1
            End If
            Return _cuentasVarias3_1
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasVarias))
            If Not Object.ReferenceEquals(_cuentasVarias3_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasVarias3_1 IsNot Nothing Then
                    RemoveHandler _cuentasVarias3_1.CollectionChanged, AddressOf FixupCuentasVarias3_1
                End If
                _cuentasVarias3_1 = value
                If _cuentasVarias3_1 IsNot Nothing Then
                    AddHandler _cuentasVarias3_1.CollectionChanged, AddressOf FixupCuentasVarias3_1
                End If
                OnNavigationPropertyChanged("CuentasVarias3_1")
            End If
        End Set
    End Property

    Private _cuentasVarias3_1 As TrackableCollection(Of CuentasVarias)

    <DataMember()>
    Public Property OrdenCompraDetalle() As TrackableCollection(Of OrdenCompraDetalle)
        Get
            If _ordenCompraDetalle Is Nothing Then
                _ordenCompraDetalle = New TrackableCollection(Of OrdenCompraDetalle)
                AddHandler _ordenCompraDetalle.CollectionChanged, AddressOf FixupOrdenCompraDetalle
            End If
            Return _ordenCompraDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenCompraDetalle))
            If Not Object.ReferenceEquals(_ordenCompraDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenCompraDetalle IsNot Nothing Then
                    RemoveHandler _ordenCompraDetalle.CollectionChanged, AddressOf FixupOrdenCompraDetalle
                End If
                _ordenCompraDetalle = value
                If _ordenCompraDetalle IsNot Nothing Then
                    AddHandler _ordenCompraDetalle.CollectionChanged, AddressOf FixupOrdenCompraDetalle
                End If
                OnNavigationPropertyChanged("OrdenCompraDetalle")
            End If
        End Set
    End Property

    Private _ordenCompraDetalle As TrackableCollection(Of OrdenCompraDetalle)

    <DataMember()>
    Public Property Articulos() As TrackableCollection(Of Articulos)
        Get
            If _articulos Is Nothing Then
                _articulos = New TrackableCollection(Of Articulos)
                AddHandler _articulos.CollectionChanged, AddressOf FixupArticulos
            End If
            Return _articulos
        End Get
        Set(ByVal value As TrackableCollection(Of Articulos))
            If Not Object.ReferenceEquals(_articulos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _articulos IsNot Nothing Then
                    RemoveHandler _articulos.CollectionChanged, AddressOf FixupArticulos
                End If
                _articulos = value
                If _articulos IsNot Nothing Then
                    AddHandler _articulos.CollectionChanged, AddressOf FixupArticulos
                End If
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As TrackableCollection(Of Articulos)

    <DataMember()>
    Public Property Articulos1() As TrackableCollection(Of Articulos)
        Get
            If _articulos1 Is Nothing Then
                _articulos1 = New TrackableCollection(Of Articulos)
                AddHandler _articulos1.CollectionChanged, AddressOf FixupArticulos1
            End If
            Return _articulos1
        End Get
        Set(ByVal value As TrackableCollection(Of Articulos))
            If Not Object.ReferenceEquals(_articulos1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _articulos1 IsNot Nothing Then
                    RemoveHandler _articulos1.CollectionChanged, AddressOf FixupArticulos1
                End If
                _articulos1 = value
                If _articulos1 IsNot Nothing Then
                    AddHandler _articulos1.CollectionChanged, AddressOf FixupArticulos1
                End If
                OnNavigationPropertyChanged("Articulos1")
            End If
        End Set
    End Property

    Private _articulos1 As TrackableCollection(Of Articulos)

    <DataMember()>
    Public Property Articulos2() As TrackableCollection(Of Articulos)
        Get
            If _articulos2 Is Nothing Then
                _articulos2 = New TrackableCollection(Of Articulos)
                AddHandler _articulos2.CollectionChanged, AddressOf FixupArticulos2
            End If
            Return _articulos2
        End Get
        Set(ByVal value As TrackableCollection(Of Articulos))
            If Not Object.ReferenceEquals(_articulos2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _articulos2 IsNot Nothing Then
                    RemoveHandler _articulos2.CollectionChanged, AddressOf FixupArticulos2
                End If
                _articulos2 = value
                If _articulos2 IsNot Nothing Then
                    AddHandler _articulos2.CollectionChanged, AddressOf FixupArticulos2
                End If
                OnNavigationPropertyChanged("Articulos2")
            End If
        End Set
    End Property

    Private _articulos2 As TrackableCollection(Of Articulos)

    <DataMember()>
    Public Property Articulos3() As TrackableCollection(Of Articulos)
        Get
            If _articulos3 Is Nothing Then
                _articulos3 = New TrackableCollection(Of Articulos)
                AddHandler _articulos3.CollectionChanged, AddressOf FixupArticulos3
            End If
            Return _articulos3
        End Get
        Set(ByVal value As TrackableCollection(Of Articulos))
            If Not Object.ReferenceEquals(_articulos3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _articulos3 IsNot Nothing Then
                    RemoveHandler _articulos3.CollectionChanged, AddressOf FixupArticulos3
                End If
                _articulos3 = value
                If _articulos3 IsNot Nothing Then
                    AddHandler _articulos3.CollectionChanged, AddressOf FixupArticulos3
                End If
                OnNavigationPropertyChanged("Articulos3")
            End If
        End Set
    End Property

    Private _articulos3 As TrackableCollection(Of Articulos)

    <DataMember()>
    Public Property OrdenServicioDetalle() As TrackableCollection(Of OrdenServicioDetalle)
        Get
            If _ordenServicioDetalle Is Nothing Then
                _ordenServicioDetalle = New TrackableCollection(Of OrdenServicioDetalle)
                AddHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
            End If
            Return _ordenServicioDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenServicioDetalle))
            If Not Object.ReferenceEquals(_ordenServicioDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenServicioDetalle IsNot Nothing Then
                    RemoveHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
                End If
                _ordenServicioDetalle = value
                If _ordenServicioDetalle IsNot Nothing Then
                    AddHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
                End If
                OnNavigationPropertyChanged("OrdenServicioDetalle")
            End If
        End Set
    End Property

    Private _ordenServicioDetalle As TrackableCollection(Of OrdenServicioDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CuentasActivos.Clear()
        CuentasActivos1.Clear()
        CuentasActivos2.Clear()
        CuentasActivos3.Clear()
        CuentasActivos4.Clear()
        CuentasActivos5.Clear()
        ClaseCuenta = Nothing
        CajaCtaCte.Clear()
        CuentasContables1 = Nothing
        CuentasContables2 = Nothing
        CuentasContables11 = Nothing
        CuentasContables3 = Nothing
        Usuarios = Nothing
        DetalleTesoreria.Clear()
        CuentasArticulo.Clear()
        CuentasArticulo1.Clear()
        CuentasArticulo2.Clear()
        DetalleAsientosManuales.Clear()
        CuentasVarias.Clear()
        CuentasVarias1.Clear()
        CuentasVarias2.Clear()
        CuentasVarias3.Clear()
        CuentasVarias4.Clear()
        CuentasVarias5.Clear()
        CuentasVarias6.Clear()
        CuentasVarias7.Clear()
        CuentasVarias8.Clear()
        CuentasVarias9.Clear()
        CuentasVarias10.Clear()
        CuentasVarias11.Clear()
        AsientosContables.Clear()
        MovimientoCajaBanco.Clear()
        RolOpeCtaCteEntregas.Clear()
        RolOpeCtaCteEntregas1.Clear()
        CuentasComprobantesLogistica.Clear()
        CuentasVarias_1.Clear()
        RolOpeCtaCte.Clear()
        RolOpeCtaCte1.Clear()
        DetalleProvisionCompras.Clear()
        CuentasVarias_2.Clear()
        CuentasVarias1_1.Clear()
        CuentasVarias3_1.Clear()
        OrdenCompraDetalle.Clear()
        Articulos.Clear()
        Articulos1.Clear()
        Articulos2.Clear()
        Articulos3.Clear()
        OrdenServicioDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupClaseCuenta(ByVal previousValue As ClaseCuenta, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasContables.Contains(Me) Then
            previousValue.CuentasContables.Remove(Me)
        End If

        If ClaseCuenta IsNot Nothing Then
            If Not ClaseCuenta.CuentasContables.Contains(Me) Then
                ClaseCuenta.CuentasContables.Add(Me)
            End If

            cls_Id = ClaseCuenta.cls_Id
        ElseIf Not skipKeys Then
            cls_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ClaseCuenta") AndAlso
                ChangeTracker.OriginalValues("ClaseCuenta") Is ClaseCuenta Then
                ChangeTracker.OriginalValues.Remove("ClaseCuenta")
            Else
                ChangeTracker.RecordOriginalValue("ClaseCuenta", previousValue)
            End If
            If ClaseCuenta IsNot Nothing AndAlso Not ClaseCuenta.ChangeTracker.ChangeTrackingEnabled Then
                ClaseCuenta.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables1(ByVal previousValue As CuentasContables)
        If previousValue IsNot Nothing Then
            RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf previousValue.HandleCascadeDelete
        End If

        If CuentasContables1 IsNot Nothing Then
            AddHandler ChangeTracker.ObjectStateChanging, AddressOf CuentasContables1.HandleCascadeDelete
        End If
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.CuentasContables2, Me) Then
            previousValue.CuentasContables2 = Nothing
        End If

        If CuentasContables1 IsNot Nothing Then
            CuentasContables1.CuentasContables2 = Me
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables1") Is CuentasContables1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables1", previousValue)
                ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                ' permite que la relación se modifique sin eliminar el elemento dependiente.
                If previousValue IsNot Nothing AndAlso previousValue.ChangeTracker.State <> ObjectState.Added Then
                    previousValue.MarkAsDeleted()
                End If
            End If
            If CuentasContables1 IsNot Nothing AndAlso Not CuentasContables1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables2(ByVal previousValue As CuentasContables)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.CuentasContables1, Me) Then
            previousValue.CuentasContables1 = Nothing
        End If

        If CuentasContables2 IsNot Nothing Then
            CuentasContables2.CuentasContables1 = Me
            CUC_ID = CuentasContables2.CUC_ID
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables2") AndAlso
                ChangeTracker.OriginalValues("CuentasContables2") Is CuentasContables2 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables2")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables2", previousValue)
            End If
            If CuentasContables2 IsNot Nothing AndAlso Not CuentasContables2.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables11(ByVal previousValue As CuentasContables)
        If previousValue IsNot Nothing Then
            RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf previousValue.HandleCascadeDelete
        End If

        If CuentasContables11 IsNot Nothing Then
            AddHandler ChangeTracker.ObjectStateChanging, AddressOf CuentasContables11.HandleCascadeDelete
        End If
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.CuentasContables3, Me) Then
            previousValue.CuentasContables3 = Nothing
        End If

        If CuentasContables11 IsNot Nothing Then
            CuentasContables11.CuentasContables3 = Me
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables11") AndAlso
                ChangeTracker.OriginalValues("CuentasContables11") Is CuentasContables11 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables11")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables11", previousValue)
                ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                ' permite que la relación se modifique sin eliminar el elemento dependiente.
                If previousValue IsNot Nothing AndAlso previousValue.ChangeTracker.State <> ObjectState.Added Then
                    previousValue.MarkAsDeleted()
                End If
            End If
            If CuentasContables11 IsNot Nothing AndAlso Not CuentasContables11.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables11.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables3(ByVal previousValue As CuentasContables)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.CuentasContables11, Me) Then
            previousValue.CuentasContables11 = Nothing
        End If

        If CuentasContables3 IsNot Nothing Then
            CuentasContables3.CuentasContables11 = Me
            CUC_ID = CuentasContables3.CUC_ID
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables3") AndAlso
                ChangeTracker.OriginalValues("CuentasContables3") Is CuentasContables3 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables3")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables3", previousValue)
            End If
            If CuentasContables3 IsNot Nothing AndAlso Not CuentasContables3.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasActivos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasActivos1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasActivos2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables2, Me) Then
                    item.CuentasContables2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasActivos3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables3, Me) Then
                    item.CuentasContables3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasActivos4(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables4 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos4", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables4, Me) Then
                    item.CuentasContables4 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos4", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasActivos5(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasActivos In e.NewItems
                item.CuentasContables5 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasActivos5", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasActivos In e.OldItems
                If ReferenceEquals(item.CuentasContables5, Me) Then
                    item.CuentasContables5 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasActivos5", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCajaCtaCte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CajaCtaCte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CajaCtaCte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasArticulo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasArticulo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasArticulo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasArticulo1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasArticulo1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasArticulo1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasArticulo2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.NewItems
                item.CuentasContables2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasArticulo2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasArticulo In e.OldItems
                If ReferenceEquals(item.CuentasContables2, Me) Then
                    item.CuentasContables2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasArticulo2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleAsientosManuales(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables2, Me) Then
                    item.CuentasContables2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables3, Me) Then
                    item.CuentasContables3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias4(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables4 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias4", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables4, Me) Then
                    item.CuentasContables4 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias4", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias5(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables5 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias5", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables5, Me) Then
                    item.CuentasContables5 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias5", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias6(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables6 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias6", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables6, Me) Then
                    item.CuentasContables6 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias6", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias7(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables7 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias7", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables7, Me) Then
                    item.CuentasContables7 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias7", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias8(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables8 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias8", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables8, Me) Then
                    item.CuentasContables8 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias8", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias9(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables9 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias9", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables9, Me) Then
                    item.CuentasContables9 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias9", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias10(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables10 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias10", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables10, Me) Then
                    item.CuentasContables10 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias10", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias11(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables11 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias11", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables11, Me) Then
                    item.CuentasContables11 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias11", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupAsientosContables(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As AsientosContables In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("AsientosContables", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As AsientosContables In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("AsientosContables", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCteEntregas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCteEntregas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCteEntregas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCteEntregas1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCteEntregas1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCteEntregas In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCteEntregas1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasComprobantesLogistica(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasComprobantesLogistica In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasComprobantesLogistica", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasComprobantesLogistica In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasComprobantesLogistica", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables_1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables_1, Me) Then
                    item.CuentasContables_1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCte1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCte1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCte1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleProvisionCompras In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleProvisionCompras In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias_2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables_2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias_2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables_2, Me) Then
                    item.CuentasContables_2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias_2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias1_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables1_1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias1_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables1_1, Me) Then
                    item.CuentasContables1_1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias1_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasVarias3_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasVarias In e.NewItems
                item.CuentasContables3_1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasVarias3_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasVarias In e.OldItems
                If ReferenceEquals(item.CuentasContables3_1, Me) Then
                    item.CuentasContables3_1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasVarias3_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupOrdenCompraDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenCompraDetalle In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenCompraDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenCompraDetalle In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenCompraDetalle", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupArticulos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Articulos In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Articulos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Articulos In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Articulos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupArticulos1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Articulos In e.NewItems
                item.CuentasContables1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Articulos1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Articulos In e.OldItems
                If ReferenceEquals(item.CuentasContables1, Me) Then
                    item.CuentasContables1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Articulos1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupArticulos2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Articulos In e.NewItems
                item.CuentasContables2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Articulos2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Articulos In e.OldItems
                If ReferenceEquals(item.CuentasContables2, Me) Then
                    item.CuentasContables2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Articulos2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupArticulos3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Articulos In e.NewItems
                item.CuentasContables3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Articulos3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Articulos In e.OldItems
                If ReferenceEquals(item.CuentasContables3, Me) Then
                    item.CuentasContables3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Articulos3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupOrdenServicioDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenServicioDetalle In e.NewItems
                item.CuentasContables = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenServicioDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenServicioDetalle In e.OldItems
                If ReferenceEquals(item.CuentasContables, Me) Then
                    item.CuentasContables = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenServicioDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
