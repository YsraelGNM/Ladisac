'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(PuntoVenta))>
<KnownType(GetType(Usuarios))>
Partial Public Class TesoreriaEditar
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared TEE_USU_ID As string = "TEE_USU_ID"
				public shared PVE_ID As string = "PVE_ID"
				public shared TES_SERIE As string = "TES_SERIE"
				public shared TES_FECHA_EMI As string = "TES_FECHA_EMI"
				public shared TEE_NO_CAJERO As string = "TEE_NO_CAJERO"
				public shared USU_ID As string = "USU_ID"
				public shared TEE_FEC_GRAB As string = "TEE_FEC_GRAB"
				public shared TEE_ESTADO As string = "TEE_ESTADO"
				public shared TEE_RECIBOEGRESOPLANILLA As string = "TEE_RECIBOEGRESOPLANILLA"
				public shared TEE_RECIBOINGRESOPLANILLA As string = "TEE_RECIBOINGRESOPLANILLA"
		    End Structure
	



    <DataMember()>
    Public Property TEE_USU_ID() As String
        Get
            Return _tEE_USU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tEE_USU_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'TEE_USU_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If Usuarios1 IsNot Nothing AndAlso Not Equals(Usuarios1.USU_ID, value) Then
                        Usuarios1 = Nothing
                    End If
                End If
                _tEE_USU_ID = value
                OnPropertyChanged("TEE_USU_ID")
            End If
        End Set
    End Property

    Private _tEE_USU_ID As String

    <DataMember()>
    Public Property PVE_ID() As String
        Get
            Return _pVE_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pVE_ID, value) Then
                ChangeTracker.RecordOriginalValue("PVE_ID", _pVE_ID)
                If Not IsDeserializing Then
                    If PuntoVenta IsNot Nothing AndAlso Not Equals(PuntoVenta.PVE_ID, value) Then
                        PuntoVenta = Nothing
                    End If
                End If
                _pVE_ID = value
                OnPropertyChanged("PVE_ID")
            End If
        End Set
    End Property

    Private _pVE_ID As String

    <DataMember()>
    Public Property TES_SERIE() As String
        Get
            Return _tES_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_tES_SERIE, value) Then
                _tES_SERIE = value
                OnPropertyChanged("TES_SERIE")
            End If
        End Set
    End Property

    Private _tES_SERIE As String

    <DataMember()>
    Public Property TES_FECHA_EMI() As Boolean
        Get
            Return _tES_FECHA_EMI
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_tES_FECHA_EMI, value) Then
                _tES_FECHA_EMI = value
                OnPropertyChanged("TES_FECHA_EMI")
            End If
        End Set
    End Property

    Private _tES_FECHA_EMI As Boolean

    <DataMember()>
    Public Property TEE_NO_CAJERO() As Boolean
        Get
            Return _tEE_NO_CAJERO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_tEE_NO_CAJERO, value) Then
                _tEE_NO_CAJERO = value
                OnPropertyChanged("TEE_NO_CAJERO")
            End If
        End Set
    End Property

    Private _tEE_NO_CAJERO As Boolean

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property TEE_FEC_GRAB() As Date
        Get
            Return _tEE_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_tEE_FEC_GRAB, value) Then
                _tEE_FEC_GRAB = value
                OnPropertyChanged("TEE_FEC_GRAB")
            End If
        End Set
    End Property

    Private _tEE_FEC_GRAB As Date

    <DataMember()>
    Public Property TEE_ESTADO() As Boolean
        Get
            Return _tEE_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_tEE_ESTADO, value) Then
                _tEE_ESTADO = value
                OnPropertyChanged("TEE_ESTADO")
            End If
        End Set
    End Property

    Private _tEE_ESTADO As Boolean

    <DataMember()>
    Public Property TEE_RECIBOEGRESOPLANILLA() As Boolean
        Get
            Return _tEE_RECIBOEGRESOPLANILLA
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_tEE_RECIBOEGRESOPLANILLA, value) Then
                _tEE_RECIBOEGRESOPLANILLA = value
                OnPropertyChanged("TEE_RECIBOEGRESOPLANILLA")
            End If
        End Set
    End Property

    Private _tEE_RECIBOEGRESOPLANILLA As Boolean

    <DataMember()>
    Public Property TEE_RECIBOINGRESOPLANILLA() As Boolean
        Get
            Return _tEE_RECIBOINGRESOPLANILLA
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_tEE_RECIBOINGRESOPLANILLA, value) Then
                _tEE_RECIBOINGRESOPLANILLA = value
                OnPropertyChanged("TEE_RECIBOINGRESOPLANILLA")
            End If
        End Set
    End Property

    Private _tEE_RECIBOINGRESOPLANILLA As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property PuntoVenta() As PuntoVenta
        Get
            Return _puntoVenta
        End Get
        Set(ByVal value As PuntoVenta)
            If _puntoVenta IsNot value Then
                Dim previousValue As PuntoVenta = _puntoVenta
                _puntoVenta = value
                FixupPuntoVenta(previousValue)
                OnNavigationPropertyChanged("PuntoVenta")
            End If
        End Set
    End Property

    Private _puntoVenta As PuntoVenta


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property Usuarios1() As Usuarios
        Get
            Return _usuarios1
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios1 IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(TEE_USU_ID, value.USU_ID) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As Usuarios = _usuarios1
                _usuarios1 = value
                FixupUsuarios1(previousValue)
                OnNavigationPropertyChanged("Usuarios1")
            End If
        End Set
    End Property

    Private _usuarios1 As Usuarios


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        PuntoVenta = Nothing
        Usuarios = Nothing
        Usuarios1 = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupPuntoVenta(ByVal previousValue As PuntoVenta, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.TesoreriaEditar.Contains(Me) Then
            previousValue.TesoreriaEditar.Remove(Me)
        End If

        If PuntoVenta IsNot Nothing Then
            If Not PuntoVenta.TesoreriaEditar.Contains(Me) Then
                PuntoVenta.TesoreriaEditar.Add(Me)
            End If

            PVE_ID = PuntoVenta.PVE_ID
        ElseIf Not skipKeys Then
            PVE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("PuntoVenta") AndAlso
                ChangeTracker.OriginalValues("PuntoVenta") Is PuntoVenta Then
                ChangeTracker.OriginalValues.Remove("PuntoVenta")
            Else
                ChangeTracker.RecordOriginalValue("PuntoVenta", previousValue)
            End If
            If PuntoVenta IsNot Nothing AndAlso Not PuntoVenta.ChangeTracker.ChangeTrackingEnabled Then
                PuntoVenta.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.TesoreriaEditar.Contains(Me) Then
            previousValue.TesoreriaEditar.Remove(Me)
        End If

        If Usuarios IsNot Nothing Then
            If Not Usuarios.TesoreriaEditar.Contains(Me) Then
                Usuarios.TesoreriaEditar.Add(Me)
            End If

            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios1(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.TesoreriaEditar1, Me) Then
            previousValue.TesoreriaEditar1 = Nothing
        End If

        If Usuarios1 IsNot Nothing Then
            Usuarios1.TesoreriaEditar1 = Me
            TEE_USU_ID = Usuarios1.USU_ID
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios1") AndAlso
                ChangeTracker.OriginalValues("Usuarios1") Is Usuarios1 Then
                ChangeTracker.OriginalValues.Remove("Usuarios1")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios1", previousValue)
            End If
            If Usuarios1 IsNot Nothing AndAlso Not Usuarios1.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios1.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
