'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Caracteristica))>
Partial Public Class Especificacion
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared ESP_ID As string = "ESP_ID"
				public shared CTT_ID As string = "CTT_ID"
				public shared ENO_ID As string = "ENO_ID"
				public shared ESP_VALOR As string = "ESP_VALOR"
				public shared USU_ID As string = "USU_ID"
				public shared ESP_FEC_GRAB As string = "ESP_FEC_GRAB"
				public shared ESP_ESTADO As string = "ESP_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property ESP_ID() As Integer
        Get
            Return _eSP_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_eSP_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'ESP_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _eSP_ID = value
                OnPropertyChanged("ESP_ID")
            End If
        End Set
    End Property

    Private _eSP_ID As Integer

    <DataMember()>
    Public Property CTT_ID() As Nullable(Of Integer)
        Get
            Return _cTT_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cTT_ID, value) Then
                ChangeTracker.RecordOriginalValue("CTT_ID", _cTT_ID)
                If Not IsDeserializing Then
                    If Caracteristica IsNot Nothing AndAlso Not Equals(Caracteristica.CTT_ID, value) Then
                        Caracteristica = Nothing
                    End If
                End If
                _cTT_ID = value
                OnPropertyChanged("CTT_ID")
            End If
        End Set
    End Property

    Private _cTT_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID() As Nullable(Of Integer)
        Get
            Return _eNO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID", _eNO_ID)
                _eNO_ID = value
                OnPropertyChanged("ENO_ID")
            End If
        End Set
    End Property

    Private _eNO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ESP_VALOR() As Nullable(Of Decimal)
        Get
            Return _eSP_VALOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_eSP_VALOR, value) Then
                _eSP_VALOR = value
                OnPropertyChanged("ESP_VALOR")
            End If
        End Set
    End Property

    Private _eSP_VALOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property ESP_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _eSP_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_eSP_FEC_GRAB, value) Then
                _eSP_FEC_GRAB = value
                OnPropertyChanged("ESP_FEC_GRAB")
            End If
        End Set
    End Property

    Private _eSP_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property ESP_ESTADO() As Nullable(Of Boolean)
        Get
            Return _eSP_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_eSP_ESTADO, value) Then
                _eSP_ESTADO = value
                OnPropertyChanged("ESP_ESTADO")
            End If
        End Set
    End Property

    Private _eSP_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Caracteristica() As Caracteristica
        Get
            Return _caracteristica
        End Get
        Set(ByVal value As Caracteristica)
            If _caracteristica IsNot value Then
                Dim previousValue As Caracteristica = _caracteristica
                _caracteristica = value
                FixupCaracteristica(previousValue)
                OnNavigationPropertyChanged("Caracteristica")
            End If
        End Set
    End Property

    Private _caracteristica As Caracteristica


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Caracteristica = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCaracteristica(ByVal previousValue As Caracteristica, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Caracteristica IsNot Nothing Then
            CTT_ID = Caracteristica.CTT_ID
        ElseIf Not skipKeys Then
            CTT_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Caracteristica") AndAlso
                ChangeTracker.OriginalValues("Caracteristica") Is Caracteristica Then
                ChangeTracker.OriginalValues.Remove("Caracteristica")
            Else
                ChangeTracker.RecordOriginalValue("Caracteristica", previousValue)
            End If
            If Caracteristica IsNot Nothing AndAlso Not Caracteristica.ChangeTracker.ChangeTrackingEnabled Then
                Caracteristica.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
