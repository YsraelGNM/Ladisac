'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Tesoreria))>
<KnownType(GetType(CuentaRendirDetalle))>
Partial Public Class CuentaRendir
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CRE_ID As string = "CRE_ID"
				public shared CRE_FECHA As string = "CRE_FECHA"
				public shared CRE_FECHA_REGULARIZACION As string = "CRE_FECHA_REGULARIZACION"
				public shared TDO_ID_TES As string = "TDO_ID_TES"
				public shared DTD_ID_TES As string = "DTD_ID_TES"
				public shared CCC_ID_TES As string = "CCC_ID_TES"
				public shared TES_SERIE As string = "TES_SERIE"
				public shared TES_NUMERO As string = "TES_NUMERO"
				public shared CRE_OBSERVACION As string = "CRE_OBSERVACION"
				public shared CRE_FEC_INI_VIAJE As string = "CRE_FEC_INI_VIAJE"
				public shared CRE_FEC_FIN_VIAJE As string = "CRE_FEC_FIN_VIAJE"
				public shared USU_ID As string = "USU_ID"
				public shared CRE_FEC_GRAB As string = "CRE_FEC_GRAB"
				public shared CRE_ESTADO As string = "CRE_ESTADO"
				public shared OTR_ID As string = "OTR_ID"
				public shared DTD_IDe_TES As string = "DTD_IDe_TES"
		    End Structure
	



    <DataMember()>
    Public Property CRE_ID() As Integer
        Get
            Return _cRE_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cRE_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CRE_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cRE_ID = value
                OnPropertyChanged("CRE_ID")
            End If
        End Set
    End Property

    Private _cRE_ID As Integer

    <DataMember()>
    Public Property CRE_FECHA() As Date
        Get
            Return _cRE_FECHA
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cRE_FECHA, value) Then
                _cRE_FECHA = value
                OnPropertyChanged("CRE_FECHA")
            End If
        End Set
    End Property

    Private _cRE_FECHA As Date

    <DataMember()>
    Public Property CRE_FECHA_REGULARIZACION() As Date
        Get
            Return _cRE_FECHA_REGULARIZACION
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cRE_FECHA_REGULARIZACION, value) Then
                _cRE_FECHA_REGULARIZACION = value
                OnPropertyChanged("CRE_FECHA_REGULARIZACION")
            End If
        End Set
    End Property

    Private _cRE_FECHA_REGULARIZACION As Date

    <DataMember()>
    Public Property TDO_ID_TES() As String
        Get
            Return _tDO_ID_TES
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID_TES, value) Then
                ChangeTracker.RecordOriginalValue("TDO_ID_TES", _tDO_ID_TES)
                If Not IsDeserializing Then
                    If Tesoreria IsNot Nothing AndAlso Not Equals(Tesoreria.TDO_ID, value) Then
                        Tesoreria = Nothing
                    End If
                End If
                _tDO_ID_TES = value
                OnPropertyChanged("TDO_ID_TES")
            End If
        End Set
    End Property

    Private _tDO_ID_TES As String

    <DataMember()>
    Public Property DTD_ID_TES() As String
        Get
            Return _dTD_ID_TES
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID_TES, value) Then
                ChangeTracker.RecordOriginalValue("DTD_ID_TES", _dTD_ID_TES)
                If Not IsDeserializing Then
                    If Tesoreria IsNot Nothing AndAlso Not Equals(Tesoreria.DTD_ID, value) Then
                        Tesoreria = Nothing
                    End If
                End If
                _dTD_ID_TES = value
                OnPropertyChanged("DTD_ID_TES")
            End If
        End Set
    End Property

    Private _dTD_ID_TES As String

    <DataMember()>
    Public Property CCC_ID_TES() As String
        Get
            Return _cCC_ID_TES
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCC_ID_TES, value) Then
                ChangeTracker.RecordOriginalValue("CCC_ID_TES", _cCC_ID_TES)
                If Not IsDeserializing Then
                    If Tesoreria IsNot Nothing AndAlso Not Equals(Tesoreria.CCC_ID, value) Then
                        Tesoreria = Nothing
                    End If
                End If
                _cCC_ID_TES = value
                OnPropertyChanged("CCC_ID_TES")
            End If
        End Set
    End Property

    Private _cCC_ID_TES As String

    <DataMember()>
    Public Property TES_SERIE() As String
        Get
            Return _tES_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_tES_SERIE, value) Then
                ChangeTracker.RecordOriginalValue("TES_SERIE", _tES_SERIE)
                If Not IsDeserializing Then
                    If Tesoreria IsNot Nothing AndAlso Not Equals(Tesoreria.TES_SERIE, value) Then
                        Tesoreria = Nothing
                    End If
                End If
                _tES_SERIE = value
                OnPropertyChanged("TES_SERIE")
            End If
        End Set
    End Property

    Private _tES_SERIE As String

    <DataMember()>
    Public Property TES_NUMERO() As String
        Get
            Return _tES_NUMERO
        End Get
        Set(ByVal value As String)
            If Not Equals(_tES_NUMERO, value) Then
                ChangeTracker.RecordOriginalValue("TES_NUMERO", _tES_NUMERO)
                If Not IsDeserializing Then
                    If Tesoreria IsNot Nothing AndAlso Not Equals(Tesoreria.TES_NUMERO, value) Then
                        Tesoreria = Nothing
                    End If
                End If
                _tES_NUMERO = value
                OnPropertyChanged("TES_NUMERO")
            End If
        End Set
    End Property

    Private _tES_NUMERO As String

    <DataMember()>
    Public Property CRE_OBSERVACION() As String
        Get
            Return _cRE_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cRE_OBSERVACION, value) Then
                _cRE_OBSERVACION = value
                OnPropertyChanged("CRE_OBSERVACION")
            End If
        End Set
    End Property

    Private _cRE_OBSERVACION As String

    <DataMember()>
    Public Property CRE_FEC_INI_VIAJE() As Nullable(Of Date)
        Get
            Return _cRE_FEC_INI_VIAJE
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRE_FEC_INI_VIAJE, value) Then
                _cRE_FEC_INI_VIAJE = value
                OnPropertyChanged("CRE_FEC_INI_VIAJE")
            End If
        End Set
    End Property

    Private _cRE_FEC_INI_VIAJE As Nullable(Of Date)

    <DataMember()>
    Public Property CRE_FEC_FIN_VIAJE() As Nullable(Of Date)
        Get
            Return _cRE_FEC_FIN_VIAJE
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRE_FEC_FIN_VIAJE, value) Then
                _cRE_FEC_FIN_VIAJE = value
                OnPropertyChanged("CRE_FEC_FIN_VIAJE")
            End If
        End Set
    End Property

    Private _cRE_FEC_FIN_VIAJE As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CRE_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _cRE_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRE_FEC_GRAB, value) Then
                _cRE_FEC_GRAB = value
                OnPropertyChanged("CRE_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cRE_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property CRE_ESTADO() As Nullable(Of Boolean)
        Get
            Return _cRE_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_cRE_ESTADO, value) Then
                _cRE_ESTADO = value
                OnPropertyChanged("CRE_ESTADO")
            End If
        End Set
    End Property

    Private _cRE_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property OTR_ID() As Nullable(Of Integer)
        Get
            Return _oTR_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oTR_ID, value) Then
                _oTR_ID = value
                OnPropertyChanged("OTR_ID")
            End If
        End Set
    End Property

    Private _oTR_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property DTD_IDe_TES() As String
        Get
            Return _dTD_IDe_TES
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_IDe_TES, value) Then
                _dTD_IDe_TES = value
                OnPropertyChanged("DTD_IDe_TES")
            End If
        End Set
    End Property

    Private _dTD_IDe_TES As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Tesoreria() As Tesoreria
        Get
            Return _tesoreria
        End Get
        Set(ByVal value As Tesoreria)
            If _tesoreria IsNot value Then
                Dim previousValue As Tesoreria = _tesoreria
                _tesoreria = value
                FixupTesoreria(previousValue)
                OnNavigationPropertyChanged("Tesoreria")
            End If
        End Set
    End Property

    Private _tesoreria As Tesoreria


    <DataMember()>
    Public Property CuentaRendirDetalle() As TrackableCollection(Of CuentaRendirDetalle)
        Get
            If _cuentaRendirDetalle Is Nothing Then
                _cuentaRendirDetalle = New TrackableCollection(Of CuentaRendirDetalle)
                AddHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
            End If
            Return _cuentaRendirDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of CuentaRendirDetalle))
            If Not Object.ReferenceEquals(_cuentaRendirDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentaRendirDetalle IsNot Nothing Then
                    RemoveHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
                End If
                _cuentaRendirDetalle = value
                If _cuentaRendirDetalle IsNot Nothing Then
                    AddHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
                End If
                OnNavigationPropertyChanged("CuentaRendirDetalle")
            End If
        End Set
    End Property

    Private _cuentaRendirDetalle As TrackableCollection(Of CuentaRendirDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Tesoreria = Nothing
        CuentaRendirDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupTesoreria(ByVal previousValue As Tesoreria)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendir.Contains(Me) Then
            previousValue.CuentaRendir.Remove(Me)
        End If

        If Tesoreria IsNot Nothing Then
            If Not Tesoreria.CuentaRendir.Contains(Me) Then
                Tesoreria.CuentaRendir.Add(Me)
            End If

            TDO_ID_TES = Tesoreria.TDO_ID
            DTD_ID_TES = Tesoreria.DTD_ID
            CCC_ID_TES = Tesoreria.CCC_ID
            TES_SERIE = Tesoreria.TES_SERIE
            TES_NUMERO = Tesoreria.TES_NUMERO
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Tesoreria") AndAlso
                ChangeTracker.OriginalValues("Tesoreria") Is Tesoreria Then
                ChangeTracker.OriginalValues.Remove("Tesoreria")
            Else
                ChangeTracker.RecordOriginalValue("Tesoreria", previousValue)
            End If
            If Tesoreria IsNot Nothing AndAlso Not Tesoreria.ChangeTracker.ChangeTrackingEnabled Then
                Tesoreria.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentaRendirDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentaRendirDetalle In e.NewItems
                item.CuentaRendir = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentaRendirDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentaRendirDetalle In e.OldItems
                If ReferenceEquals(item.CuentaRendir, Me) Then
                    item.CuentaRendir = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentaRendirDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
