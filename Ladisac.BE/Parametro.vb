'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
Partial Public Class Parametro
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PAR_ID As string = "PAR_ID"
				public shared PAR_VALOR1 As string = "PAR_VALOR1"
				public shared PAR_VALOR2 As string = "PAR_VALOR2"
				public shared PAR_VALOR3 As string = "PAR_VALOR3"
		    End Structure
	



    <DataMember()>
    Public Property PAR_ID() As String
        Get
            Return _pAR_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pAR_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PAR_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pAR_ID = value
                OnPropertyChanged("PAR_ID")
            End If
        End Set
    End Property

    Private _pAR_ID As String

    <DataMember()>
    Public Property PAR_VALOR1() As String
        Get
            Return _pAR_VALOR1
        End Get
        Set(ByVal value As String)
            If Not Equals(_pAR_VALOR1, value) Then
                _pAR_VALOR1 = value
                OnPropertyChanged("PAR_VALOR1")
            End If
        End Set
    End Property

    Private _pAR_VALOR1 As String

    <DataMember()>
    Public Property PAR_VALOR2() As String
        Get
            Return _pAR_VALOR2
        End Get
        Set(ByVal value As String)
            If Not Equals(_pAR_VALOR2, value) Then
                _pAR_VALOR2 = value
                OnPropertyChanged("PAR_VALOR2")
            End If
        End Set
    End Property

    Private _pAR_VALOR2 As String

    <DataMember()>
    Public Property PAR_VALOR3() As String
        Get
            Return _pAR_VALOR3
        End Get
        Set(ByVal value As String)
            If Not Equals(_pAR_VALOR3, value) Then
                _pAR_VALOR3 = value
                OnPropertyChanged("PAR_VALOR3")
            End If
        End Set
    End Property

    Private _pAR_VALOR3 As String

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
    End Sub

#End Region
End Class
