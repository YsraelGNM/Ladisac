'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CCProveedorDetalle))>
Partial Public Class CCArticuloProveedorDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CAP_ID As string = "CAP_ID"
				public shared CPD_ID As string = "CPD_ID"
				public shared ART_ID As string = "ART_ID"
				public shared ART_DESCRIPCION As string = "ART_DESCRIPCION"
				public shared CAP_UM As string = "CAP_UM"
				public shared CAP_CANTIDAD As string = "CAP_CANTIDAD"
				public shared CAP_PU As string = "CAP_PU"
				public shared CAP_APROBADO As string = "CAP_APROBADO"
				public shared PCD_ID As string = "PCD_ID"
		    End Structure
	



    <DataMember()>
    Public Property CAP_ID() As Integer
        Get
            Return _cAP_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cAP_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CAP_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cAP_ID = value
                OnPropertyChanged("CAP_ID")
            End If
        End Set
    End Property

    Private _cAP_ID As Integer

    <DataMember()>
    Public Property CPD_ID() As Nullable(Of Integer)
        Get
            Return _cPD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cPD_ID, value) Then
                ChangeTracker.RecordOriginalValue("CPD_ID", _cPD_ID)
                If Not IsDeserializing Then
                    If CCProveedorDetalle IsNot Nothing AndAlso Not Equals(CCProveedorDetalle.CPD_ID, value) Then
                        CCProveedorDetalle = Nothing
                    End If
                End If
                _cPD_ID = value
                OnPropertyChanged("CPD_ID")
            End If
        End Set
    End Property

    Private _cPD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property ART_DESCRIPCION() As String
        Get
            Return _aRT_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_DESCRIPCION, value) Then
                _aRT_DESCRIPCION = value
                OnPropertyChanged("ART_DESCRIPCION")
            End If
        End Set
    End Property

    Private _aRT_DESCRIPCION As String

    <DataMember()>
    Public Property CAP_UM() As String
        Get
            Return _cAP_UM
        End Get
        Set(ByVal value As String)
            If Not Equals(_cAP_UM, value) Then
                _cAP_UM = value
                OnPropertyChanged("CAP_UM")
            End If
        End Set
    End Property

    Private _cAP_UM As String

    <DataMember()>
    Public Property CAP_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _cAP_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cAP_CANTIDAD, value) Then
                _cAP_CANTIDAD = value
                OnPropertyChanged("CAP_CANTIDAD")
            End If
        End Set
    End Property

    Private _cAP_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property CAP_PU() As Nullable(Of Decimal)
        Get
            Return _cAP_PU
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cAP_PU, value) Then
                _cAP_PU = value
                OnPropertyChanged("CAP_PU")
            End If
        End Set
    End Property

    Private _cAP_PU As Nullable(Of Decimal)

    <DataMember()>
    Public Property CAP_APROBADO() As Nullable(Of Boolean)
        Get
            Return _cAP_APROBADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_cAP_APROBADO, value) Then
                _cAP_APROBADO = value
                OnPropertyChanged("CAP_APROBADO")
            End If
        End Set
    End Property

    Private _cAP_APROBADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_ID() As Nullable(Of Integer)
        Get
            Return _pCD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pCD_ID, value) Then
                _pCD_ID = value
                OnPropertyChanged("PCD_ID")
            End If
        End Set
    End Property

    Private _pCD_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property CCProveedorDetalle() As CCProveedorDetalle
        Get
            Return _cCProveedorDetalle
        End Get
        Set(ByVal value As CCProveedorDetalle)
            If _cCProveedorDetalle IsNot value Then
                Dim previousValue As CCProveedorDetalle = _cCProveedorDetalle
                _cCProveedorDetalle = value
                FixupCCProveedorDetalle(previousValue)
                OnNavigationPropertyChanged("CCProveedorDetalle")
            End If
        End Set
    End Property

    Private _cCProveedorDetalle As CCProveedorDetalle


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CCProveedorDetalle = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCCProveedorDetalle(ByVal previousValue As CCProveedorDetalle, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CCArticuloProveedorDetalle.Contains(Me) Then
            previousValue.CCArticuloProveedorDetalle.Remove(Me)
        End If

        If CCProveedorDetalle IsNot Nothing Then
            If Not CCProveedorDetalle.CCArticuloProveedorDetalle.Contains(Me) Then
                CCProveedorDetalle.CCArticuloProveedorDetalle.Add(Me)
            End If

            CPD_ID = CCProveedorDetalle.CPD_ID
        ElseIf Not skipKeys Then
            CPD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CCProveedorDetalle") AndAlso
                ChangeTracker.OriginalValues("CCProveedorDetalle") Is CCProveedorDetalle Then
                ChangeTracker.OriginalValues.Remove("CCProveedorDetalle")
            Else
                ChangeTracker.RecordOriginalValue("CCProveedorDetalle", previousValue)
            End If
            If CCProveedorDetalle IsNot Nothing AndAlso Not CCProveedorDetalle.ChangeTracker.ChangeTrackingEnabled Then
                CCProveedorDetalle.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
