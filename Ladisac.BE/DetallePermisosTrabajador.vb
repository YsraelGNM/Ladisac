'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
Partial Public Class DetallePermisosTrabajador
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared prm_Numero As string = "prm_Numero"
				public shared dper_Item As string = "dper_Item"
				public shared dper_FechaInicio As string = "dper_FechaInicio"
				public shared dper_FechaFin As string = "dper_FechaFin"
				public shared dper_Hora As string = "dper_Hora"
		    End Structure
	



    <DataMember()>
    Public Property prm_Numero() As String
        Get
            Return _prm_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_prm_Numero, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prm_Numero' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _prm_Numero = value
                OnPropertyChanged("prm_Numero")
            End If
        End Set
    End Property

    Private _prm_Numero As String

    <DataMember()>
    Public Property dper_Item() As String
        Get
            Return _dper_Item
        End Get
        Set(ByVal value As String)
            If Not Equals(_dper_Item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'dper_Item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dper_Item = value
                OnPropertyChanged("dper_Item")
            End If
        End Set
    End Property

    Private _dper_Item As String

    <DataMember()>
    Public Property dper_FechaInicio() As Date
        Get
            Return _dper_FechaInicio
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dper_FechaInicio, value) Then
                _dper_FechaInicio = value
                OnPropertyChanged("dper_FechaInicio")
            End If
        End Set
    End Property

    Private _dper_FechaInicio As Date

    <DataMember()>
    Public Property dper_FechaFin() As Date
        Get
            Return _dper_FechaFin
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dper_FechaFin, value) Then
                _dper_FechaFin = value
                OnPropertyChanged("dper_FechaFin")
            End If
        End Set
    End Property

    Private _dper_FechaFin As Date

    <DataMember()>
    Public Property dper_Hora() As Decimal
        Get
            Return _dper_Hora
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dper_Hora, value) Then
                _dper_Hora = value
                OnPropertyChanged("dper_Hora")
            End If
        End Set
    End Property

    Private _dper_Hora As Decimal

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
    End Sub

#End Region
End Class
