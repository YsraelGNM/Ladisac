'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(RendicionGastos))>
Partial Public Class RendicionGastosDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared RGD_ID As string = "RGD_ID"
				public shared RGA_ID As string = "RGA_ID"
				public shared RGD_MOTIVO As string = "RGD_MOTIVO"
				public shared RGD_ORIGEN As string = "RGD_ORIGEN"
				public shared RGD_DESTINO As string = "RGD_DESTINO"
				public shared RGD_MONTO As string = "RGD_MONTO"
				public shared RGD_FECHA As string = "RGD_FECHA"
				public shared USU_ID_AUT_2 As string = "USU_ID_AUT_2"
				public shared RGD_FEC_AUT_2 As string = "RGD_FEC_AUT_2"
				public shared USU_ID_AUT_3 As string = "USU_ID_AUT_3"
				public shared RGD_FEC_AUT_3 As string = "RGD_FEC_AUT_3"
				public shared USU_ID_AUT_4 As string = "USU_ID_AUT_4"
				public shared RGD_FEC_AUT_4 As string = "RGD_FEC_AUT_4"
		    End Structure
	



    <DataMember()>
    Public Property RGD_ID() As Integer
        Get
            Return _rGD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_rGD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'RGD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _rGD_ID = value
                OnPropertyChanged("RGD_ID")
            End If
        End Set
    End Property

    Private _rGD_ID As Integer

    <DataMember()>
    Public Property RGA_ID() As Nullable(Of Integer)
        Get
            Return _rGA_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rGA_ID, value) Then
                ChangeTracker.RecordOriginalValue("RGA_ID", _rGA_ID)
                If Not IsDeserializing Then
                    If RendicionGastos IsNot Nothing AndAlso Not Equals(RendicionGastos.RGA_ID, value) Then
                        RendicionGastos = Nothing
                    End If
                End If
                _rGA_ID = value
                OnPropertyChanged("RGA_ID")
            End If
        End Set
    End Property

    Private _rGA_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property RGD_MOTIVO() As String
        Get
            Return _rGD_MOTIVO
        End Get
        Set(ByVal value As String)
            If Not Equals(_rGD_MOTIVO, value) Then
                _rGD_MOTIVO = value
                OnPropertyChanged("RGD_MOTIVO")
            End If
        End Set
    End Property

    Private _rGD_MOTIVO As String

    <DataMember()>
    Public Property RGD_ORIGEN() As String
        Get
            Return _rGD_ORIGEN
        End Get
        Set(ByVal value As String)
            If Not Equals(_rGD_ORIGEN, value) Then
                _rGD_ORIGEN = value
                OnPropertyChanged("RGD_ORIGEN")
            End If
        End Set
    End Property

    Private _rGD_ORIGEN As String

    <DataMember()>
    Public Property RGD_DESTINO() As String
        Get
            Return _rGD_DESTINO
        End Get
        Set(ByVal value As String)
            If Not Equals(_rGD_DESTINO, value) Then
                _rGD_DESTINO = value
                OnPropertyChanged("RGD_DESTINO")
            End If
        End Set
    End Property

    Private _rGD_DESTINO As String

    <DataMember()>
    Public Property RGD_MONTO() As Nullable(Of Decimal)
        Get
            Return _rGD_MONTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_rGD_MONTO, value) Then
                _rGD_MONTO = value
                OnPropertyChanged("RGD_MONTO")
            End If
        End Set
    End Property

    Private _rGD_MONTO As Nullable(Of Decimal)

    <DataMember()>
    Public Property RGD_FECHA() As Nullable(Of Date)
        Get
            Return _rGD_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rGD_FECHA, value) Then
                _rGD_FECHA = value
                OnPropertyChanged("RGD_FECHA")
            End If
        End Set
    End Property

    Private _rGD_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_2() As String
        Get
            Return _uSU_ID_AUT_2
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_2, value) Then
                _uSU_ID_AUT_2 = value
                OnPropertyChanged("USU_ID_AUT_2")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_2 As String

    <DataMember()>
    Public Property RGD_FEC_AUT_2() As Nullable(Of Date)
        Get
            Return _rGD_FEC_AUT_2
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rGD_FEC_AUT_2, value) Then
                _rGD_FEC_AUT_2 = value
                OnPropertyChanged("RGD_FEC_AUT_2")
            End If
        End Set
    End Property

    Private _rGD_FEC_AUT_2 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_3() As String
        Get
            Return _uSU_ID_AUT_3
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_3, value) Then
                _uSU_ID_AUT_3 = value
                OnPropertyChanged("USU_ID_AUT_3")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_3 As String

    <DataMember()>
    Public Property RGD_FEC_AUT_3() As Nullable(Of Date)
        Get
            Return _rGD_FEC_AUT_3
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rGD_FEC_AUT_3, value) Then
                _rGD_FEC_AUT_3 = value
                OnPropertyChanged("RGD_FEC_AUT_3")
            End If
        End Set
    End Property

    Private _rGD_FEC_AUT_3 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_4() As String
        Get
            Return _uSU_ID_AUT_4
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_4, value) Then
                _uSU_ID_AUT_4 = value
                OnPropertyChanged("USU_ID_AUT_4")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_4 As String

    <DataMember()>
    Public Property RGD_FEC_AUT_4() As Nullable(Of Date)
        Get
            Return _rGD_FEC_AUT_4
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rGD_FEC_AUT_4, value) Then
                _rGD_FEC_AUT_4 = value
                OnPropertyChanged("RGD_FEC_AUT_4")
            End If
        End Set
    End Property

    Private _rGD_FEC_AUT_4 As Nullable(Of Date)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property RendicionGastos() As RendicionGastos
        Get
            Return _rendicionGastos
        End Get
        Set(ByVal value As RendicionGastos)
            If _rendicionGastos IsNot value Then
                Dim previousValue As RendicionGastos = _rendicionGastos
                _rendicionGastos = value
                FixupRendicionGastos(previousValue)
                OnNavigationPropertyChanged("RendicionGastos")
            End If
        End Set
    End Property

    Private _rendicionGastos As RendicionGastos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        RendicionGastos = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupRendicionGastos(ByVal previousValue As RendicionGastos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.RendicionGastosDetalle.Contains(Me) Then
            previousValue.RendicionGastosDetalle.Remove(Me)
        End If

        If RendicionGastos IsNot Nothing Then
            If Not RendicionGastos.RendicionGastosDetalle.Contains(Me) Then
                RendicionGastos.RendicionGastosDetalle.Add(Me)
            End If

            RGA_ID = RendicionGastos.RGA_ID
        ElseIf Not skipKeys Then
            RGA_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("RendicionGastos") AndAlso
                ChangeTracker.OriginalValues("RendicionGastos") Is RendicionGastos Then
                ChangeTracker.OriginalValues.Remove("RendicionGastos")
            Else
                ChangeTracker.RecordOriginalValue("RendicionGastos", previousValue)
            End If
            If RendicionGastos IsNot Nothing AndAlso Not RendicionGastos.ChangeTracker.ChangeTrackingEnabled Then
                RendicionGastos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
