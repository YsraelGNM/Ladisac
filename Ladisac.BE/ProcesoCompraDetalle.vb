'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Articulos))>
<KnownType(GetType(RendicionCuentaDetalle))>
<KnownType(GetType(OrdenCompraDetalle))>
<KnownType(GetType(PCDCotizacionDetalle))>
Partial Public Class ProcesoCompraDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PCD_ID As string = "PCD_ID"
				public shared PRC_ID As string = "PRC_ID"
				public shared ART_ID As string = "ART_ID"
				public shared PCD_CANT_SOLICITADA As string = "PCD_CANT_SOLICITADA"
				public shared PCD_STOCK As string = "PCD_STOCK"
				public shared PCD_CANT_COMPRADA As string = "PCD_CANT_COMPRADA"
				public shared PCD_CANT As string = "PCD_CANT"
				public shared USU_ID_CONSERGE As string = "USU_ID_CONSERGE"
				public shared PCD_ES_COTIZACION As string = "PCD_ES_COTIZACION"
				public shared USU_ID_COTIZACION As string = "USU_ID_COTIZACION"
				public shared PCD_FECHA As string = "PCD_FECHA"
				public shared PCD_OBS As string = "PCD_OBS"
				public shared PCD_COTIZANDO As string = "PCD_COTIZANDO"
				public shared PCD_FECHA_COTIZANDO As string = "PCD_FECHA_COTIZANDO"
				public shared PCD_OBS_COTIZANDO As string = "PCD_OBS_COTIZANDO"
				public shared PCD_RESPUESTA_COTIZANDO As string = "PCD_RESPUESTA_COTIZANDO"
				public shared PCD_FECHA_RESPUESTA_COTIZANDO As string = "PCD_FECHA_RESPUESTA_COTIZANDO"
				public shared PCD_OBS_RESPUESTA_COTIZANDO As string = "PCD_OBS_RESPUESTA_COTIZANDO"
				public shared PCD_REQUIERE_VB_SOLICITANTE As string = "PCD_REQUIERE_VB_SOLICITANTE"
				public shared PCD_FECHA_RVBS As string = "PCD_FECHA_RVBS"
				public shared PCD_OBS_RVBS As string = "PCD_OBS_RVBS"
				public shared PCD_VB_SOLICITANTE As string = "PCD_VB_SOLICITANTE"
				public shared PCD_FECHA_VBS As string = "PCD_FECHA_VBS"
				public shared PCD_OBS_VBS As string = "PCD_OBS_VBS"
				public shared PCD_REQUIERE_VB_GERENCIA As string = "PCD_REQUIERE_VB_GERENCIA"
				public shared PCD_FECHA_RVBG As string = "PCD_FECHA_RVBG"
				public shared PCD_OBS_RVBG As string = "PCD_OBS_RVBG"
				public shared PCD_VB_GERENCIA As string = "PCD_VB_GERENCIA"
				public shared PCD_FECHA_VBG As string = "PCD_FECHA_VBG"
				public shared PCD_OBS_VBG As string = "PCD_OBS_VBG"
				public shared OCD_ID As string = "OCD_ID"
		    End Structure
	



    <DataMember()>
    Public Property PCD_ID() As Integer
        Get
            Return _pCD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pCD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PCD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pCD_ID = value
                OnPropertyChanged("PCD_ID")
            End If
        End Set
    End Property

    Private _pCD_ID As Integer

    <DataMember()>
    Public Property PRC_ID() As Nullable(Of Integer)
        Get
            Return _pRC_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pRC_ID, value) Then
                ChangeTracker.RecordOriginalValue("PRC_ID", _pRC_ID)
                _pRC_ID = value
                OnPropertyChanged("PRC_ID")
            End If
        End Set
    End Property

    Private _pRC_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property PCD_CANT_SOLICITADA() As Nullable(Of Decimal)
        Get
            Return _pCD_CANT_SOLICITADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pCD_CANT_SOLICITADA, value) Then
                _pCD_CANT_SOLICITADA = value
                OnPropertyChanged("PCD_CANT_SOLICITADA")
            End If
        End Set
    End Property

    Private _pCD_CANT_SOLICITADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property PCD_STOCK() As Nullable(Of Decimal)
        Get
            Return _pCD_STOCK
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pCD_STOCK, value) Then
                _pCD_STOCK = value
                OnPropertyChanged("PCD_STOCK")
            End If
        End Set
    End Property

    Private _pCD_STOCK As Nullable(Of Decimal)

    <DataMember()>
    Public Property PCD_CANT_COMPRADA() As Nullable(Of Decimal)
        Get
            Return _pCD_CANT_COMPRADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pCD_CANT_COMPRADA, value) Then
                _pCD_CANT_COMPRADA = value
                OnPropertyChanged("PCD_CANT_COMPRADA")
            End If
        End Set
    End Property

    Private _pCD_CANT_COMPRADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property PCD_CANT() As Nullable(Of Decimal)
        Get
            Return _pCD_CANT
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pCD_CANT, value) Then
                _pCD_CANT = value
                OnPropertyChanged("PCD_CANT")
            End If
        End Set
    End Property

    Private _pCD_CANT As Nullable(Of Decimal)

    <DataMember()>
    Public Property USU_ID_CONSERGE() As String
        Get
            Return _uSU_ID_CONSERGE
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_CONSERGE, value) Then
                _uSU_ID_CONSERGE = value
                OnPropertyChanged("USU_ID_CONSERGE")
            End If
        End Set
    End Property

    Private _uSU_ID_CONSERGE As String

    <DataMember()>
    Public Property PCD_ES_COTIZACION() As Nullable(Of Boolean)
        Get
            Return _pCD_ES_COTIZACION
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_ES_COTIZACION, value) Then
                _pCD_ES_COTIZACION = value
                OnPropertyChanged("PCD_ES_COTIZACION")
            End If
        End Set
    End Property

    Private _pCD_ES_COTIZACION As Nullable(Of Boolean)

    <DataMember()>
    Public Property USU_ID_COTIZACION() As String
        Get
            Return _uSU_ID_COTIZACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_COTIZACION, value) Then
                _uSU_ID_COTIZACION = value
                OnPropertyChanged("USU_ID_COTIZACION")
            End If
        End Set
    End Property

    Private _uSU_ID_COTIZACION As String

    <DataMember()>
    Public Property PCD_FECHA() As Nullable(Of Date)
        Get
            Return _pCD_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA, value) Then
                _pCD_FECHA = value
                OnPropertyChanged("PCD_FECHA")
            End If
        End Set
    End Property

    Private _pCD_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS() As String
        Get
            Return _pCD_OBS
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS, value) Then
                _pCD_OBS = value
                OnPropertyChanged("PCD_OBS")
            End If
        End Set
    End Property

    Private _pCD_OBS As String

    <DataMember()>
    Public Property PCD_COTIZANDO() As Nullable(Of Boolean)
        Get
            Return _pCD_COTIZANDO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_COTIZANDO, value) Then
                _pCD_COTIZANDO = value
                OnPropertyChanged("PCD_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_COTIZANDO As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_COTIZANDO() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_COTIZANDO
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_COTIZANDO, value) Then
                _pCD_FECHA_COTIZANDO = value
                OnPropertyChanged("PCD_FECHA_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_FECHA_COTIZANDO As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_COTIZANDO() As String
        Get
            Return _pCD_OBS_COTIZANDO
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_COTIZANDO, value) Then
                _pCD_OBS_COTIZANDO = value
                OnPropertyChanged("PCD_OBS_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_OBS_COTIZANDO As String

    <DataMember()>
    Public Property PCD_RESPUESTA_COTIZANDO() As Nullable(Of Boolean)
        Get
            Return _pCD_RESPUESTA_COTIZANDO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_RESPUESTA_COTIZANDO, value) Then
                _pCD_RESPUESTA_COTIZANDO = value
                OnPropertyChanged("PCD_RESPUESTA_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_RESPUESTA_COTIZANDO As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_RESPUESTA_COTIZANDO() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_RESPUESTA_COTIZANDO
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_RESPUESTA_COTIZANDO, value) Then
                _pCD_FECHA_RESPUESTA_COTIZANDO = value
                OnPropertyChanged("PCD_FECHA_RESPUESTA_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_FECHA_RESPUESTA_COTIZANDO As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_RESPUESTA_COTIZANDO() As String
        Get
            Return _pCD_OBS_RESPUESTA_COTIZANDO
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_RESPUESTA_COTIZANDO, value) Then
                _pCD_OBS_RESPUESTA_COTIZANDO = value
                OnPropertyChanged("PCD_OBS_RESPUESTA_COTIZANDO")
            End If
        End Set
    End Property

    Private _pCD_OBS_RESPUESTA_COTIZANDO As String

    <DataMember()>
    Public Property PCD_REQUIERE_VB_SOLICITANTE() As Nullable(Of Boolean)
        Get
            Return _pCD_REQUIERE_VB_SOLICITANTE
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_REQUIERE_VB_SOLICITANTE, value) Then
                _pCD_REQUIERE_VB_SOLICITANTE = value
                OnPropertyChanged("PCD_REQUIERE_VB_SOLICITANTE")
            End If
        End Set
    End Property

    Private _pCD_REQUIERE_VB_SOLICITANTE As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_RVBS() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_RVBS
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_RVBS, value) Then
                _pCD_FECHA_RVBS = value
                OnPropertyChanged("PCD_FECHA_RVBS")
            End If
        End Set
    End Property

    Private _pCD_FECHA_RVBS As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_RVBS() As String
        Get
            Return _pCD_OBS_RVBS
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_RVBS, value) Then
                _pCD_OBS_RVBS = value
                OnPropertyChanged("PCD_OBS_RVBS")
            End If
        End Set
    End Property

    Private _pCD_OBS_RVBS As String

    <DataMember()>
    Public Property PCD_VB_SOLICITANTE() As Nullable(Of Boolean)
        Get
            Return _pCD_VB_SOLICITANTE
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_VB_SOLICITANTE, value) Then
                _pCD_VB_SOLICITANTE = value
                OnPropertyChanged("PCD_VB_SOLICITANTE")
            End If
        End Set
    End Property

    Private _pCD_VB_SOLICITANTE As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_VBS() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_VBS
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_VBS, value) Then
                _pCD_FECHA_VBS = value
                OnPropertyChanged("PCD_FECHA_VBS")
            End If
        End Set
    End Property

    Private _pCD_FECHA_VBS As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_VBS() As String
        Get
            Return _pCD_OBS_VBS
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_VBS, value) Then
                _pCD_OBS_VBS = value
                OnPropertyChanged("PCD_OBS_VBS")
            End If
        End Set
    End Property

    Private _pCD_OBS_VBS As String

    <DataMember()>
    Public Property PCD_REQUIERE_VB_GERENCIA() As Nullable(Of Boolean)
        Get
            Return _pCD_REQUIERE_VB_GERENCIA
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_REQUIERE_VB_GERENCIA, value) Then
                _pCD_REQUIERE_VB_GERENCIA = value
                OnPropertyChanged("PCD_REQUIERE_VB_GERENCIA")
            End If
        End Set
    End Property

    Private _pCD_REQUIERE_VB_GERENCIA As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_RVBG() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_RVBG
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_RVBG, value) Then
                _pCD_FECHA_RVBG = value
                OnPropertyChanged("PCD_FECHA_RVBG")
            End If
        End Set
    End Property

    Private _pCD_FECHA_RVBG As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_RVBG() As String
        Get
            Return _pCD_OBS_RVBG
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_RVBG, value) Then
                _pCD_OBS_RVBG = value
                OnPropertyChanged("PCD_OBS_RVBG")
            End If
        End Set
    End Property

    Private _pCD_OBS_RVBG As String

    <DataMember()>
    Public Property PCD_VB_GERENCIA() As Nullable(Of Boolean)
        Get
            Return _pCD_VB_GERENCIA
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_pCD_VB_GERENCIA, value) Then
                _pCD_VB_GERENCIA = value
                OnPropertyChanged("PCD_VB_GERENCIA")
            End If
        End Set
    End Property

    Private _pCD_VB_GERENCIA As Nullable(Of Boolean)

    <DataMember()>
    Public Property PCD_FECHA_VBG() As Nullable(Of Date)
        Get
            Return _pCD_FECHA_VBG
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pCD_FECHA_VBG, value) Then
                _pCD_FECHA_VBG = value
                OnPropertyChanged("PCD_FECHA_VBG")
            End If
        End Set
    End Property

    Private _pCD_FECHA_VBG As Nullable(Of Date)

    <DataMember()>
    Public Property PCD_OBS_VBG() As String
        Get
            Return _pCD_OBS_VBG
        End Get
        Set(ByVal value As String)
            If Not Equals(_pCD_OBS_VBG, value) Then
                _pCD_OBS_VBG = value
                OnPropertyChanged("PCD_OBS_VBG")
            End If
        End Set
    End Property

    Private _pCD_OBS_VBG As String

    <DataMember()>
    Public Property OCD_ID() As Nullable(Of Integer)
        Get
            Return _oCD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oCD_ID, value) Then
                ChangeTracker.RecordOriginalValue("OCD_ID", _oCD_ID)
                _oCD_ID = value
                OnPropertyChanged("OCD_ID")
            End If
        End Set
    End Property

    Private _oCD_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


    <DataMember()>
    Public Property RendicionCuentaDetalle() As TrackableCollection(Of RendicionCuentaDetalle)
        Get
            If _rendicionCuentaDetalle Is Nothing Then
                _rendicionCuentaDetalle = New TrackableCollection(Of RendicionCuentaDetalle)
                AddHandler _rendicionCuentaDetalle.CollectionChanged, AddressOf FixupRendicionCuentaDetalle
            End If
            Return _rendicionCuentaDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of RendicionCuentaDetalle))
            If Not Object.ReferenceEquals(_rendicionCuentaDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rendicionCuentaDetalle IsNot Nothing Then
                    RemoveHandler _rendicionCuentaDetalle.CollectionChanged, AddressOf FixupRendicionCuentaDetalle
                End If
                _rendicionCuentaDetalle = value
                If _rendicionCuentaDetalle IsNot Nothing Then
                    AddHandler _rendicionCuentaDetalle.CollectionChanged, AddressOf FixupRendicionCuentaDetalle
                End If
                OnNavigationPropertyChanged("RendicionCuentaDetalle")
            End If
        End Set
    End Property

    Private _rendicionCuentaDetalle As TrackableCollection(Of RendicionCuentaDetalle)

    <DataMember()>
    Public Property OrdenCompraDetalle1() As TrackableCollection(Of OrdenCompraDetalle)
        Get
            If _ordenCompraDetalle1 Is Nothing Then
                _ordenCompraDetalle1 = New TrackableCollection(Of OrdenCompraDetalle)
                AddHandler _ordenCompraDetalle1.CollectionChanged, AddressOf FixupOrdenCompraDetalle1
            End If
            Return _ordenCompraDetalle1
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenCompraDetalle))
            If Not Object.ReferenceEquals(_ordenCompraDetalle1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenCompraDetalle1 IsNot Nothing Then
                    RemoveHandler _ordenCompraDetalle1.CollectionChanged, AddressOf FixupOrdenCompraDetalle1
                End If
                _ordenCompraDetalle1 = value
                If _ordenCompraDetalle1 IsNot Nothing Then
                    AddHandler _ordenCompraDetalle1.CollectionChanged, AddressOf FixupOrdenCompraDetalle1
                End If
                OnNavigationPropertyChanged("OrdenCompraDetalle1")
            End If
        End Set
    End Property

    Private _ordenCompraDetalle1 As TrackableCollection(Of OrdenCompraDetalle)

    <DataMember()>
    Public Property PCDCotizacionDetalle() As TrackableCollection(Of PCDCotizacionDetalle)
        Get
            If _pCDCotizacionDetalle Is Nothing Then
                _pCDCotizacionDetalle = New TrackableCollection(Of PCDCotizacionDetalle)
                AddHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
            End If
            Return _pCDCotizacionDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of PCDCotizacionDetalle))
            If Not Object.ReferenceEquals(_pCDCotizacionDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _pCDCotizacionDetalle IsNot Nothing Then
                    RemoveHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
                End If
                _pCDCotizacionDetalle = value
                If _pCDCotizacionDetalle IsNot Nothing Then
                    AddHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
                End If
                OnNavigationPropertyChanged("PCDCotizacionDetalle")
            End If
        End Set
    End Property

    Private _pCDCotizacionDetalle As TrackableCollection(Of PCDCotizacionDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Articulos = Nothing
        RendicionCuentaDetalle.Clear()
        OrdenCompraDetalle1.Clear()
        PCDCotizacionDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupRendicionCuentaDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RendicionCuentaDetalle In e.NewItems
                item.PCD_ID = PCD_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RendicionCuentaDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RendicionCuentaDetalle In e.OldItems
                item.PCD_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RendicionCuentaDetalle", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupOrdenCompraDetalle1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenCompraDetalle In e.NewItems
                item.ProcesoCompraDetalle1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenCompraDetalle1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenCompraDetalle In e.OldItems
                If ReferenceEquals(item.ProcesoCompraDetalle1, Me) Then
                    item.ProcesoCompraDetalle1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenCompraDetalle1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPCDCotizacionDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PCDCotizacionDetalle In e.NewItems
                item.ProcesoCompraDetalle = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PCDCotizacionDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PCDCotizacionDetalle In e.OldItems
                If ReferenceEquals(item.ProcesoCompraDetalle, Me) Then
                    item.ProcesoCompraDetalle = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PCDCotizacionDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
