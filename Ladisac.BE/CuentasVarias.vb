'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CuentasContables))>
<KnownType(GetType(Usuarios))>
Partial Public Class CuentasVarias
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared cuv_Id As string = "cuv_Id"
				public shared cuc_IdIgvVentas As string = "cuc_IdIgvVentas"
				public shared cuc_IdIgvCompras As string = "cuc_IdIgvCompras"
				public shared cuc_IdIgvPerceVenta As string = "cuc_IdIgvPerceVenta"
				public shared cuc_IdIgvPerceCompra As string = "cuc_IdIgvPerceCompra"
				public shared cuc_IdIgvReteVenta As string = "cuc_IdIgvReteVenta"
				public shared cuc_IdIgvReteCompra As string = "cuc_IdIgvReteCompra"
				public shared cuc_IdRentaCuarta As string = "cuc_IdRentaCuarta"
				public shared cuc_IdComprasExisten As string = "cuc_IdComprasExisten"
				public shared cuc_IdPDC As string = "cuc_IdPDC"
				public shared cuc_IdGDC As string = "cuc_IdGDC"
				public shared cuc_IdGRD As string = "cuc_IdGRD"
				public shared cuc_IdPRD As string = "cuc_IdPRD"
				public shared Usu_Id As string = "Usu_Id"
				public shared cue_FecGrab As string = "cue_FecGrab"
				public shared cuc_idIGVXDev As string = "cuc_idIGVXDev"
				public shared cuc_idIntBanXDev As string = "cuc_idIntBanXDev"
				public shared cuc_idGastosBanXDev As string = "cuc_idGastosBanXDev"
				public shared cuc_IdDescObt As string = "cuc_IdDescObt"
				public shared cuc_IdImpuestoDividendos As string = "cuc_IdImpuestoDividendos"
		    End Structure
	



    <DataMember()>
    Public Property cuv_Id() As String
        Get
            Return _cuv_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuv_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'cuv_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cuv_Id = value
                OnPropertyChanged("cuv_Id")
            End If
        End Set
    End Property

    Private _cuv_Id As String

    <DataMember()>
    Public Property cuc_IdIgvVentas() As String
        Get
            Return _cuc_IdIgvVentas
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvVentas, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvVentas", _cuc_IdIgvVentas)
                If Not IsDeserializing Then
                    If CuentasContables2 IsNot Nothing AndAlso Not Equals(CuentasContables2.CUC_ID, value) Then
                        CuentasContables2 = Nothing
                    End If
                End If
                _cuc_IdIgvVentas = value
                OnPropertyChanged("cuc_IdIgvVentas")
            End If
        End Set
    End Property

    Private _cuc_IdIgvVentas As String

    <DataMember()>
    Public Property cuc_IdIgvCompras() As String
        Get
            Return _cuc_IdIgvCompras
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvCompras, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvCompras", _cuc_IdIgvCompras)
                If Not IsDeserializing Then
                    If CuentasContables3 IsNot Nothing AndAlso Not Equals(CuentasContables3.CUC_ID, value) Then
                        CuentasContables3 = Nothing
                    End If
                End If
                _cuc_IdIgvCompras = value
                OnPropertyChanged("cuc_IdIgvCompras")
            End If
        End Set
    End Property

    Private _cuc_IdIgvCompras As String

    <DataMember()>
    Public Property cuc_IdIgvPerceVenta() As String
        Get
            Return _cuc_IdIgvPerceVenta
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvPerceVenta, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvPerceVenta", _cuc_IdIgvPerceVenta)
                If Not IsDeserializing Then
                    If CuentasContables4 IsNot Nothing AndAlso Not Equals(CuentasContables4.CUC_ID, value) Then
                        CuentasContables4 = Nothing
                    End If
                End If
                _cuc_IdIgvPerceVenta = value
                OnPropertyChanged("cuc_IdIgvPerceVenta")
            End If
        End Set
    End Property

    Private _cuc_IdIgvPerceVenta As String

    <DataMember()>
    Public Property cuc_IdIgvPerceCompra() As String
        Get
            Return _cuc_IdIgvPerceCompra
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvPerceCompra, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvPerceCompra", _cuc_IdIgvPerceCompra)
                If Not IsDeserializing Then
                    If CuentasContables IsNot Nothing AndAlso Not Equals(CuentasContables.CUC_ID, value) Then
                        CuentasContables = Nothing
                    End If
                End If
                _cuc_IdIgvPerceCompra = value
                OnPropertyChanged("cuc_IdIgvPerceCompra")
            End If
        End Set
    End Property

    Private _cuc_IdIgvPerceCompra As String

    <DataMember()>
    Public Property cuc_IdIgvReteVenta() As String
        Get
            Return _cuc_IdIgvReteVenta
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvReteVenta, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvReteVenta", _cuc_IdIgvReteVenta)
                If Not IsDeserializing Then
                    If CuentasContables5 IsNot Nothing AndAlso Not Equals(CuentasContables5.CUC_ID, value) Then
                        CuentasContables5 = Nothing
                    End If
                End If
                _cuc_IdIgvReteVenta = value
                OnPropertyChanged("cuc_IdIgvReteVenta")
            End If
        End Set
    End Property

    Private _cuc_IdIgvReteVenta As String

    <DataMember()>
    Public Property cuc_IdIgvReteCompra() As String
        Get
            Return _cuc_IdIgvReteCompra
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdIgvReteCompra, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdIgvReteCompra", _cuc_IdIgvReteCompra)
                If Not IsDeserializing Then
                    If CuentasContables1 IsNot Nothing AndAlso Not Equals(CuentasContables1.CUC_ID, value) Then
                        CuentasContables1 = Nothing
                    End If
                End If
                _cuc_IdIgvReteCompra = value
                OnPropertyChanged("cuc_IdIgvReteCompra")
            End If
        End Set
    End Property

    Private _cuc_IdIgvReteCompra As String

    <DataMember()>
    Public Property cuc_IdRentaCuarta() As String
        Get
            Return _cuc_IdRentaCuarta
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdRentaCuarta, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdRentaCuarta", _cuc_IdRentaCuarta)
                If Not IsDeserializing Then
                    If CuentasContables6 IsNot Nothing AndAlso Not Equals(CuentasContables6.CUC_ID, value) Then
                        CuentasContables6 = Nothing
                    End If
                End If
                _cuc_IdRentaCuarta = value
                OnPropertyChanged("cuc_IdRentaCuarta")
            End If
        End Set
    End Property

    Private _cuc_IdRentaCuarta As String

    <DataMember()>
    Public Property cuc_IdComprasExisten() As String
        Get
            Return _cuc_IdComprasExisten
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdComprasExisten, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdComprasExisten", _cuc_IdComprasExisten)
                If Not IsDeserializing Then
                    If CuentasContables7 IsNot Nothing AndAlso Not Equals(CuentasContables7.CUC_ID, value) Then
                        CuentasContables7 = Nothing
                    End If
                End If
                _cuc_IdComprasExisten = value
                OnPropertyChanged("cuc_IdComprasExisten")
            End If
        End Set
    End Property

    Private _cuc_IdComprasExisten As String

    <DataMember()>
    Public Property cuc_IdPDC() As String
        Get
            Return _cuc_IdPDC
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdPDC, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdPDC", _cuc_IdPDC)
                If Not IsDeserializing Then
                    If CuentasContables8 IsNot Nothing AndAlso Not Equals(CuentasContables8.CUC_ID, value) Then
                        CuentasContables8 = Nothing
                    End If
                End If
                _cuc_IdPDC = value
                OnPropertyChanged("cuc_IdPDC")
            End If
        End Set
    End Property

    Private _cuc_IdPDC As String

    <DataMember()>
    Public Property cuc_IdGDC() As String
        Get
            Return _cuc_IdGDC
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdGDC, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdGDC", _cuc_IdGDC)
                If Not IsDeserializing Then
                    If CuentasContables9 IsNot Nothing AndAlso Not Equals(CuentasContables9.CUC_ID, value) Then
                        CuentasContables9 = Nothing
                    End If
                End If
                _cuc_IdGDC = value
                OnPropertyChanged("cuc_IdGDC")
            End If
        End Set
    End Property

    Private _cuc_IdGDC As String

    <DataMember()>
    Public Property cuc_IdGRD() As String
        Get
            Return _cuc_IdGRD
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdGRD, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdGRD", _cuc_IdGRD)
                If Not IsDeserializing Then
                    If CuentasContables10 IsNot Nothing AndAlso Not Equals(CuentasContables10.CUC_ID, value) Then
                        CuentasContables10 = Nothing
                    End If
                End If
                _cuc_IdGRD = value
                OnPropertyChanged("cuc_IdGRD")
            End If
        End Set
    End Property

    Private _cuc_IdGRD As String

    <DataMember()>
    Public Property cuc_IdPRD() As String
        Get
            Return _cuc_IdPRD
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdPRD, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdPRD", _cuc_IdPRD)
                If Not IsDeserializing Then
                    If CuentasContables11 IsNot Nothing AndAlso Not Equals(CuentasContables11.CUC_ID, value) Then
                        CuentasContables11 = Nothing
                    End If
                End If
                _cuc_IdPRD = value
                OnPropertyChanged("cuc_IdPRD")
            End If
        End Set
    End Property

    Private _cuc_IdPRD As String

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                ChangeTracker.RecordOriginalValue("Usu_Id", _usu_Id)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property cue_FecGrab() As Nullable(Of Date)
        Get
            Return _cue_FecGrab
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cue_FecGrab, value) Then
                _cue_FecGrab = value
                OnPropertyChanged("cue_FecGrab")
            End If
        End Set
    End Property

    Private _cue_FecGrab As Nullable(Of Date)

    <DataMember()>
    Public Property cuc_idIGVXDev() As String
        Get
            Return _cuc_idIGVXDev
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_idIGVXDev, value) Then
                ChangeTracker.RecordOriginalValue("cuc_idIGVXDev", _cuc_idIGVXDev)
                If Not IsDeserializing Then
                    If CuentasContables_1 IsNot Nothing AndAlso Not Equals(CuentasContables_1.CUC_ID, value) Then
                        CuentasContables_1 = Nothing
                    End If
                End If
                _cuc_idIGVXDev = value
                OnPropertyChanged("cuc_idIGVXDev")
            End If
        End Set
    End Property

    Private _cuc_idIGVXDev As String

    <DataMember()>
    Public Property cuc_idIntBanXDev() As String
        Get
            Return _cuc_idIntBanXDev
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_idIntBanXDev, value) Then
                ChangeTracker.RecordOriginalValue("cuc_idIntBanXDev", _cuc_idIntBanXDev)
                If Not IsDeserializing Then
                    If CuentasContables_2 IsNot Nothing AndAlso Not Equals(CuentasContables_2.CUC_ID, value) Then
                        CuentasContables_2 = Nothing
                    End If
                End If
                _cuc_idIntBanXDev = value
                OnPropertyChanged("cuc_idIntBanXDev")
            End If
        End Set
    End Property

    Private _cuc_idIntBanXDev As String

    <DataMember()>
    Public Property cuc_idGastosBanXDev() As String
        Get
            Return _cuc_idGastosBanXDev
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_idGastosBanXDev, value) Then
                ChangeTracker.RecordOriginalValue("cuc_idGastosBanXDev", _cuc_idGastosBanXDev)
                If Not IsDeserializing Then
                    If CuentasContables1_1 IsNot Nothing AndAlso Not Equals(CuentasContables1_1.CUC_ID, value) Then
                        CuentasContables1_1 = Nothing
                    End If
                End If
                _cuc_idGastosBanXDev = value
                OnPropertyChanged("cuc_idGastosBanXDev")
            End If
        End Set
    End Property

    Private _cuc_idGastosBanXDev As String

    <DataMember()>
    Public Property cuc_IdDescObt() As String
        Get
            Return _cuc_IdDescObt
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdDescObt, value) Then
                ChangeTracker.RecordOriginalValue("cuc_IdDescObt", _cuc_IdDescObt)
                If Not IsDeserializing Then
                    If CuentasContables3_1 IsNot Nothing AndAlso Not Equals(CuentasContables3_1.CUC_ID, value) Then
                        CuentasContables3_1 = Nothing
                    End If
                End If
                _cuc_IdDescObt = value
                OnPropertyChanged("cuc_IdDescObt")
            End If
        End Set
    End Property

    Private _cuc_IdDescObt As String

    <DataMember()>
    Public Property cuc_IdImpuestoDividendos() As String
        Get
            Return _cuc_IdImpuestoDividendos
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_IdImpuestoDividendos, value) Then
                _cuc_IdImpuestoDividendos = value
                OnPropertyChanged("cuc_IdImpuestoDividendos")
            End If
        End Set
    End Property

    Private _cuc_IdImpuestoDividendos As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property CuentasContables() As CuentasContables
        Get
            Return _cuentasContables
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables
                _cuentasContables = value
                FixupCuentasContables(previousValue)
                OnNavigationPropertyChanged("CuentasContables")
            End If
        End Set
    End Property

    Private _cuentasContables As CuentasContables


    <DataMember()>
    Public Property CuentasContables1() As CuentasContables
        Get
            Return _cuentasContables1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables1
                _cuentasContables1 = value
                FixupCuentasContables1(previousValue)
                OnNavigationPropertyChanged("CuentasContables1")
            End If
        End Set
    End Property

    Private _cuentasContables1 As CuentasContables


    <DataMember()>
    Public Property CuentasContables2() As CuentasContables
        Get
            Return _cuentasContables2
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables2 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables2
                _cuentasContables2 = value
                FixupCuentasContables2(previousValue)
                OnNavigationPropertyChanged("CuentasContables2")
            End If
        End Set
    End Property

    Private _cuentasContables2 As CuentasContables


    <DataMember()>
    Public Property CuentasContables3() As CuentasContables
        Get
            Return _cuentasContables3
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables3 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables3
                _cuentasContables3 = value
                FixupCuentasContables3(previousValue)
                OnNavigationPropertyChanged("CuentasContables3")
            End If
        End Set
    End Property

    Private _cuentasContables3 As CuentasContables


    <DataMember()>
    Public Property CuentasContables4() As CuentasContables
        Get
            Return _cuentasContables4
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables4 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables4
                _cuentasContables4 = value
                FixupCuentasContables4(previousValue)
                OnNavigationPropertyChanged("CuentasContables4")
            End If
        End Set
    End Property

    Private _cuentasContables4 As CuentasContables


    <DataMember()>
    Public Property CuentasContables5() As CuentasContables
        Get
            Return _cuentasContables5
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables5 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables5
                _cuentasContables5 = value
                FixupCuentasContables5(previousValue)
                OnNavigationPropertyChanged("CuentasContables5")
            End If
        End Set
    End Property

    Private _cuentasContables5 As CuentasContables


    <DataMember()>
    Public Property CuentasContables6() As CuentasContables
        Get
            Return _cuentasContables6
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables6 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables6
                _cuentasContables6 = value
                FixupCuentasContables6(previousValue)
                OnNavigationPropertyChanged("CuentasContables6")
            End If
        End Set
    End Property

    Private _cuentasContables6 As CuentasContables


    <DataMember()>
    Public Property CuentasContables7() As CuentasContables
        Get
            Return _cuentasContables7
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables7 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables7
                _cuentasContables7 = value
                FixupCuentasContables7(previousValue)
                OnNavigationPropertyChanged("CuentasContables7")
            End If
        End Set
    End Property

    Private _cuentasContables7 As CuentasContables


    <DataMember()>
    Public Property CuentasContables8() As CuentasContables
        Get
            Return _cuentasContables8
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables8 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables8
                _cuentasContables8 = value
                FixupCuentasContables8(previousValue)
                OnNavigationPropertyChanged("CuentasContables8")
            End If
        End Set
    End Property

    Private _cuentasContables8 As CuentasContables


    <DataMember()>
    Public Property CuentasContables9() As CuentasContables
        Get
            Return _cuentasContables9
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables9 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables9
                _cuentasContables9 = value
                FixupCuentasContables9(previousValue)
                OnNavigationPropertyChanged("CuentasContables9")
            End If
        End Set
    End Property

    Private _cuentasContables9 As CuentasContables


    <DataMember()>
    Public Property CuentasContables10() As CuentasContables
        Get
            Return _cuentasContables10
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables10 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables10
                _cuentasContables10 = value
                FixupCuentasContables10(previousValue)
                OnNavigationPropertyChanged("CuentasContables10")
            End If
        End Set
    End Property

    Private _cuentasContables10 As CuentasContables


    <DataMember()>
    Public Property CuentasContables11() As CuentasContables
        Get
            Return _cuentasContables11
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables11 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables11
                _cuentasContables11 = value
                FixupCuentasContables11(previousValue)
                OnNavigationPropertyChanged("CuentasContables11")
            End If
        End Set
    End Property

    Private _cuentasContables11 As CuentasContables


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property CuentasContables_1() As CuentasContables
        Get
            Return _cuentasContables_1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables_1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables_1
                _cuentasContables_1 = value
                FixupCuentasContables_1(previousValue)
                OnNavigationPropertyChanged("CuentasContables_1")
            End If
        End Set
    End Property

    Private _cuentasContables_1 As CuentasContables


    <DataMember()>
    Public Property CuentasContables_2() As CuentasContables
        Get
            Return _cuentasContables_2
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables_2 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables_2
                _cuentasContables_2 = value
                FixupCuentasContables_2(previousValue)
                OnNavigationPropertyChanged("CuentasContables_2")
            End If
        End Set
    End Property

    Private _cuentasContables_2 As CuentasContables


    <DataMember()>
    Public Property CuentasContables1_1() As CuentasContables
        Get
            Return _cuentasContables1_1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables1_1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables1_1
                _cuentasContables1_1 = value
                FixupCuentasContables1_1(previousValue)
                OnNavigationPropertyChanged("CuentasContables1_1")
            End If
        End Set
    End Property

    Private _cuentasContables1_1 As CuentasContables


    <DataMember()>
    Public Property CuentasContables3_1() As CuentasContables
        Get
            Return _cuentasContables3_1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables3_1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables3_1
                _cuentasContables3_1 = value
                FixupCuentasContables3_1(previousValue)
                OnNavigationPropertyChanged("CuentasContables3_1")
            End If
        End Set
    End Property

    Private _cuentasContables3_1 As CuentasContables


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CuentasContables = Nothing
        CuentasContables1 = Nothing
        CuentasContables2 = Nothing
        CuentasContables3 = Nothing
        CuentasContables4 = Nothing
        CuentasContables5 = Nothing
        CuentasContables6 = Nothing
        CuentasContables7 = Nothing
        CuentasContables8 = Nothing
        CuentasContables9 = Nothing
        CuentasContables10 = Nothing
        CuentasContables11 = Nothing
        Usuarios = Nothing
        CuentasContables_1 = Nothing
        CuentasContables_2 = Nothing
        CuentasContables1_1 = Nothing
        CuentasContables3_1 = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupCuentasContables(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias.Contains(Me) Then
            previousValue.CuentasVarias.Remove(Me)
        End If

        If CuentasContables IsNot Nothing Then
            If Not CuentasContables.CuentasVarias.Contains(Me) Then
                CuentasContables.CuentasVarias.Add(Me)
            End If

            cuc_IdIgvPerceCompra = CuentasContables.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvPerceCompra = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables") AndAlso
                ChangeTracker.OriginalValues("CuentasContables") Is CuentasContables Then
                ChangeTracker.OriginalValues.Remove("CuentasContables")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables", previousValue)
            End If
            If CuentasContables IsNot Nothing AndAlso Not CuentasContables.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables1(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias1.Contains(Me) Then
            previousValue.CuentasVarias1.Remove(Me)
        End If

        If CuentasContables1 IsNot Nothing Then
            If Not CuentasContables1.CuentasVarias1.Contains(Me) Then
                CuentasContables1.CuentasVarias1.Add(Me)
            End If

            cuc_IdIgvReteCompra = CuentasContables1.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvReteCompra = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables1") Is CuentasContables1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables1", previousValue)
            End If
            If CuentasContables1 IsNot Nothing AndAlso Not CuentasContables1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables2(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias2.Contains(Me) Then
            previousValue.CuentasVarias2.Remove(Me)
        End If

        If CuentasContables2 IsNot Nothing Then
            If Not CuentasContables2.CuentasVarias2.Contains(Me) Then
                CuentasContables2.CuentasVarias2.Add(Me)
            End If

            cuc_IdIgvVentas = CuentasContables2.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvVentas = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables2") AndAlso
                ChangeTracker.OriginalValues("CuentasContables2") Is CuentasContables2 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables2")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables2", previousValue)
            End If
            If CuentasContables2 IsNot Nothing AndAlso Not CuentasContables2.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables3(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias3.Contains(Me) Then
            previousValue.CuentasVarias3.Remove(Me)
        End If

        If CuentasContables3 IsNot Nothing Then
            If Not CuentasContables3.CuentasVarias3.Contains(Me) Then
                CuentasContables3.CuentasVarias3.Add(Me)
            End If

            cuc_IdIgvCompras = CuentasContables3.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvCompras = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables3") AndAlso
                ChangeTracker.OriginalValues("CuentasContables3") Is CuentasContables3 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables3")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables3", previousValue)
            End If
            If CuentasContables3 IsNot Nothing AndAlso Not CuentasContables3.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables4(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias4.Contains(Me) Then
            previousValue.CuentasVarias4.Remove(Me)
        End If

        If CuentasContables4 IsNot Nothing Then
            If Not CuentasContables4.CuentasVarias4.Contains(Me) Then
                CuentasContables4.CuentasVarias4.Add(Me)
            End If

            cuc_IdIgvPerceVenta = CuentasContables4.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvPerceVenta = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables4") AndAlso
                ChangeTracker.OriginalValues("CuentasContables4") Is CuentasContables4 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables4")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables4", previousValue)
            End If
            If CuentasContables4 IsNot Nothing AndAlso Not CuentasContables4.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables4.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables5(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias5.Contains(Me) Then
            previousValue.CuentasVarias5.Remove(Me)
        End If

        If CuentasContables5 IsNot Nothing Then
            If Not CuentasContables5.CuentasVarias5.Contains(Me) Then
                CuentasContables5.CuentasVarias5.Add(Me)
            End If

            cuc_IdIgvReteVenta = CuentasContables5.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdIgvReteVenta = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables5") AndAlso
                ChangeTracker.OriginalValues("CuentasContables5") Is CuentasContables5 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables5")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables5", previousValue)
            End If
            If CuentasContables5 IsNot Nothing AndAlso Not CuentasContables5.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables5.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables6(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias6.Contains(Me) Then
            previousValue.CuentasVarias6.Remove(Me)
        End If

        If CuentasContables6 IsNot Nothing Then
            If Not CuentasContables6.CuentasVarias6.Contains(Me) Then
                CuentasContables6.CuentasVarias6.Add(Me)
            End If

            cuc_IdRentaCuarta = CuentasContables6.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdRentaCuarta = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables6") AndAlso
                ChangeTracker.OriginalValues("CuentasContables6") Is CuentasContables6 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables6")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables6", previousValue)
            End If
            If CuentasContables6 IsNot Nothing AndAlso Not CuentasContables6.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables6.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables7(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias7.Contains(Me) Then
            previousValue.CuentasVarias7.Remove(Me)
        End If

        If CuentasContables7 IsNot Nothing Then
            If Not CuentasContables7.CuentasVarias7.Contains(Me) Then
                CuentasContables7.CuentasVarias7.Add(Me)
            End If

            cuc_IdComprasExisten = CuentasContables7.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdComprasExisten = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables7") AndAlso
                ChangeTracker.OriginalValues("CuentasContables7") Is CuentasContables7 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables7")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables7", previousValue)
            End If
            If CuentasContables7 IsNot Nothing AndAlso Not CuentasContables7.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables7.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables8(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias8.Contains(Me) Then
            previousValue.CuentasVarias8.Remove(Me)
        End If

        If CuentasContables8 IsNot Nothing Then
            If Not CuentasContables8.CuentasVarias8.Contains(Me) Then
                CuentasContables8.CuentasVarias8.Add(Me)
            End If

            cuc_IdPDC = CuentasContables8.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdPDC = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables8") AndAlso
                ChangeTracker.OriginalValues("CuentasContables8") Is CuentasContables8 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables8")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables8", previousValue)
            End If
            If CuentasContables8 IsNot Nothing AndAlso Not CuentasContables8.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables8.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables9(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias9.Contains(Me) Then
            previousValue.CuentasVarias9.Remove(Me)
        End If

        If CuentasContables9 IsNot Nothing Then
            If Not CuentasContables9.CuentasVarias9.Contains(Me) Then
                CuentasContables9.CuentasVarias9.Add(Me)
            End If

            cuc_IdGDC = CuentasContables9.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdGDC = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables9") AndAlso
                ChangeTracker.OriginalValues("CuentasContables9") Is CuentasContables9 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables9")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables9", previousValue)
            End If
            If CuentasContables9 IsNot Nothing AndAlso Not CuentasContables9.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables9.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables10(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias10.Contains(Me) Then
            previousValue.CuentasVarias10.Remove(Me)
        End If

        If CuentasContables10 IsNot Nothing Then
            If Not CuentasContables10.CuentasVarias10.Contains(Me) Then
                CuentasContables10.CuentasVarias10.Add(Me)
            End If

            cuc_IdGRD = CuentasContables10.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdGRD = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables10") AndAlso
                ChangeTracker.OriginalValues("CuentasContables10") Is CuentasContables10 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables10")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables10", previousValue)
            End If
            If CuentasContables10 IsNot Nothing AndAlso Not CuentasContables10.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables10.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables11(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias11.Contains(Me) Then
            previousValue.CuentasVarias11.Remove(Me)
        End If

        If CuentasContables11 IsNot Nothing Then
            If Not CuentasContables11.CuentasVarias11.Contains(Me) Then
                CuentasContables11.CuentasVarias11.Add(Me)
            End If

            cuc_IdPRD = CuentasContables11.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdPRD = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables11") AndAlso
                ChangeTracker.OriginalValues("CuentasContables11") Is CuentasContables11 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables11")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables11", previousValue)
            End If
            If CuentasContables11 IsNot Nothing AndAlso Not CuentasContables11.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables11.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            Usu_Id = Usuarios.USU_ID
        ElseIf Not skipKeys Then
            Usu_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables_1(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias_1.Contains(Me) Then
            previousValue.CuentasVarias_1.Remove(Me)
        End If

        If CuentasContables_1 IsNot Nothing Then
            If Not CuentasContables_1.CuentasVarias_1.Contains(Me) Then
                CuentasContables_1.CuentasVarias_1.Add(Me)
            End If

            cuc_idIGVXDev = CuentasContables_1.CUC_ID
        ElseIf Not skipKeys Then
            cuc_idIGVXDev = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables_1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables_1") Is CuentasContables_1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables_1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables_1", previousValue)
            End If
            If CuentasContables_1 IsNot Nothing AndAlso Not CuentasContables_1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables_1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables_2(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias_2.Contains(Me) Then
            previousValue.CuentasVarias_2.Remove(Me)
        End If

        If CuentasContables_2 IsNot Nothing Then
            If Not CuentasContables_2.CuentasVarias_2.Contains(Me) Then
                CuentasContables_2.CuentasVarias_2.Add(Me)
            End If

            cuc_idIntBanXDev = CuentasContables_2.CUC_ID
        ElseIf Not skipKeys Then
            cuc_idIntBanXDev = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables_2") AndAlso
                ChangeTracker.OriginalValues("CuentasContables_2") Is CuentasContables_2 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables_2")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables_2", previousValue)
            End If
            If CuentasContables_2 IsNot Nothing AndAlso Not CuentasContables_2.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables_2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables1_1(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias1_1.Contains(Me) Then
            previousValue.CuentasVarias1_1.Remove(Me)
        End If

        If CuentasContables1_1 IsNot Nothing Then
            If Not CuentasContables1_1.CuentasVarias1_1.Contains(Me) Then
                CuentasContables1_1.CuentasVarias1_1.Add(Me)
            End If

            cuc_idGastosBanXDev = CuentasContables1_1.CUC_ID
        ElseIf Not skipKeys Then
            cuc_idGastosBanXDev = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables1_1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables1_1") Is CuentasContables1_1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables1_1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables1_1", previousValue)
            End If
            If CuentasContables1_1 IsNot Nothing AndAlso Not CuentasContables1_1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables1_1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables3_1(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasVarias3_1.Contains(Me) Then
            previousValue.CuentasVarias3_1.Remove(Me)
        End If

        If CuentasContables3_1 IsNot Nothing Then
            If Not CuentasContables3_1.CuentasVarias3_1.Contains(Me) Then
                CuentasContables3_1.CuentasVarias3_1.Add(Me)
            End If

            cuc_IdDescObt = CuentasContables3_1.CUC_ID
        ElseIf Not skipKeys Then
            cuc_IdDescObt = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables3_1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables3_1") Is CuentasContables3_1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables3_1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables3_1", previousValue)
            End If
            If CuentasContables3_1 IsNot Nothing AndAlso Not CuentasContables3_1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables3_1.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
