'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(OrdenServicio))>
Partial Public Class OrdenServicioCuotas
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared OSC_ID As string = "OSC_ID"
				public shared OSE_ID As string = "OSE_ID"
				public shared OSC_NUMERO As string = "OSC_NUMERO"
				public shared OSC_DESCRIPCION As string = "OSC_DESCRIPCION"
				public shared OSC_FECHA_VENCIMIENTO As string = "OSC_FECHA_VENCIMIENTO"
				public shared OSC_MONTO As string = "OSC_MONTO"
		    End Structure
	



    <DataMember()>
    Public Property OSC_ID() As Integer
        Get
            Return _oSC_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_oSC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'OSC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _oSC_ID = value
                OnPropertyChanged("OSC_ID")
            End If
        End Set
    End Property

    Private _oSC_ID As Integer

    <DataMember()>
    Public Property OSE_ID() As Nullable(Of Integer)
        Get
            Return _oSE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oSE_ID, value) Then
                ChangeTracker.RecordOriginalValue("OSE_ID", _oSE_ID)
                If Not IsDeserializing Then
                    If OrdenServicio IsNot Nothing AndAlso Not Equals(OrdenServicio.OSE_ID, value) Then
                        OrdenServicio = Nothing
                    End If
                End If
                _oSE_ID = value
                OnPropertyChanged("OSE_ID")
            End If
        End Set
    End Property

    Private _oSE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property OSC_NUMERO() As Nullable(Of Integer)
        Get
            Return _oSC_NUMERO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oSC_NUMERO, value) Then
                _oSC_NUMERO = value
                OnPropertyChanged("OSC_NUMERO")
            End If
        End Set
    End Property

    Private _oSC_NUMERO As Nullable(Of Integer)

    <DataMember()>
    Public Property OSC_DESCRIPCION() As String
        Get
            Return _oSC_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_oSC_DESCRIPCION, value) Then
                _oSC_DESCRIPCION = value
                OnPropertyChanged("OSC_DESCRIPCION")
            End If
        End Set
    End Property

    Private _oSC_DESCRIPCION As String

    <DataMember()>
    Public Property OSC_FECHA_VENCIMIENTO() As Nullable(Of Date)
        Get
            Return _oSC_FECHA_VENCIMIENTO
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oSC_FECHA_VENCIMIENTO, value) Then
                _oSC_FECHA_VENCIMIENTO = value
                OnPropertyChanged("OSC_FECHA_VENCIMIENTO")
            End If
        End Set
    End Property

    Private _oSC_FECHA_VENCIMIENTO As Nullable(Of Date)

    <DataMember()>
    Public Property OSC_MONTO() As Nullable(Of Decimal)
        Get
            Return _oSC_MONTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oSC_MONTO, value) Then
                _oSC_MONTO = value
                OnPropertyChanged("OSC_MONTO")
            End If
        End Set
    End Property

    Private _oSC_MONTO As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property OrdenServicio() As OrdenServicio
        Get
            Return _ordenServicio
        End Get
        Set(ByVal value As OrdenServicio)
            If _ordenServicio IsNot value Then
                Dim previousValue As OrdenServicio = _ordenServicio
                _ordenServicio = value
                FixupOrdenServicio(previousValue)
                OnNavigationPropertyChanged("OrdenServicio")
            End If
        End Set
    End Property

    Private _ordenServicio As OrdenServicio


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        OrdenServicio = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupOrdenServicio(ByVal previousValue As OrdenServicio, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenServicioCuotas.Contains(Me) Then
            previousValue.OrdenServicioCuotas.Remove(Me)
        End If

        If OrdenServicio IsNot Nothing Then
            If Not OrdenServicio.OrdenServicioCuotas.Contains(Me) Then
                OrdenServicio.OrdenServicioCuotas.Add(Me)
            End If

            OSE_ID = OrdenServicio.OSE_ID
        ElseIf Not skipKeys Then
            OSE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("OrdenServicio") AndAlso
                ChangeTracker.OriginalValues("OrdenServicio") Is OrdenServicio Then
                ChangeTracker.OriginalValues.Remove("OrdenServicio")
            Else
                ChangeTracker.RecordOriginalValue("OrdenServicio", previousValue)
            End If
            If OrdenServicio IsNot Nothing AndAlso Not OrdenServicio.ChangeTracker.ChangeTrackingEnabled Then
                OrdenServicio.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
