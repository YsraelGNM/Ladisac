'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(RolOpeCtaCte))>
Partial Public Class DetalleLeasing
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared cct_Id As string = "cct_Id"
				public shared tdo_Id As string = "tdo_Id"
				public shared dtd_Id As string = "dtd_Id"
				public shared lea_Serie As string = "lea_Serie"
				public shared lea_Numero As string = "lea_Numero"
				public shared dele_item As string = "dele_item"
				public shared dele_vencimiento As string = "dele_vencimiento"
				public shared dele_capital As string = "dele_capital"
				public shared dele_interes As string = "dele_interes"
				public shared dele_otrosGastos As string = "dele_otrosGastos"
				public shared dele_igv As string = "dele_igv"
		    End Structure
	



    <DataMember()>
    Public Property cct_Id() As String
        Get
            Return _cct_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cct_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'cct_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCte IsNot Nothing AndAlso Not Equals(RolOpeCtaCte.CCT_ID, value) Then
                        RolOpeCtaCte = Nothing
                    End If
                End If
                _cct_Id = value
                OnPropertyChanged("cct_Id")
            End If
        End Set
    End Property

    Private _cct_Id As String

    <DataMember()>
    Public Property tdo_Id() As String
        Get
            Return _tdo_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'tdo_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCte IsNot Nothing AndAlso Not Equals(RolOpeCtaCte.TDO_ID, value) Then
                        RolOpeCtaCte = Nothing
                    End If
                End If
                _tdo_Id = value
                OnPropertyChanged("tdo_Id")
            End If
        End Set
    End Property

    Private _tdo_Id As String

    <DataMember()>
    Public Property dtd_Id() As String
        Get
            Return _dtd_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_dtd_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'dtd_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If RolOpeCtaCte IsNot Nothing AndAlso Not Equals(RolOpeCtaCte.DTD_ID, value) Then
                        RolOpeCtaCte = Nothing
                    End If
                End If
                _dtd_Id = value
                OnPropertyChanged("dtd_Id")
            End If
        End Set
    End Property

    Private _dtd_Id As String

    <DataMember()>
    Public Property lea_Serie() As String
        Get
            Return _lea_Serie
        End Get
        Set(ByVal value As String)
            If Not Equals(_lea_Serie, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'lea_Serie' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _lea_Serie = value
                OnPropertyChanged("lea_Serie")
            End If
        End Set
    End Property

    Private _lea_Serie As String

    <DataMember()>
    Public Property lea_Numero() As String
        Get
            Return _lea_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_lea_Numero, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'lea_Numero' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _lea_Numero = value
                OnPropertyChanged("lea_Numero")
            End If
        End Set
    End Property

    Private _lea_Numero As String

    <DataMember()>
    Public Property dele_item() As String
        Get
            Return _dele_item
        End Get
        Set(ByVal value As String)
            If Not Equals(_dele_item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'dele_item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dele_item = value
                OnPropertyChanged("dele_item")
            End If
        End Set
    End Property

    Private _dele_item As String

    <DataMember()>
    Public Property dele_vencimiento() As Date
        Get
            Return _dele_vencimiento
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dele_vencimiento, value) Then
                _dele_vencimiento = value
                OnPropertyChanged("dele_vencimiento")
            End If
        End Set
    End Property

    Private _dele_vencimiento As Date

    <DataMember()>
    Public Property dele_capital() As Decimal
        Get
            Return _dele_capital
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dele_capital, value) Then
                _dele_capital = value
                OnPropertyChanged("dele_capital")
            End If
        End Set
    End Property

    Private _dele_capital As Decimal

    <DataMember()>
    Public Property dele_interes() As Decimal
        Get
            Return _dele_interes
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dele_interes, value) Then
                _dele_interes = value
                OnPropertyChanged("dele_interes")
            End If
        End Set
    End Property

    Private _dele_interes As Decimal

    <DataMember()>
    Public Property dele_otrosGastos() As Decimal
        Get
            Return _dele_otrosGastos
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dele_otrosGastos, value) Then
                _dele_otrosGastos = value
                OnPropertyChanged("dele_otrosGastos")
            End If
        End Set
    End Property

    Private _dele_otrosGastos As Decimal

    <DataMember()>
    Public Property dele_igv() As Decimal
        Get
            Return _dele_igv
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dele_igv, value) Then
                _dele_igv = value
                OnPropertyChanged("dele_igv")
            End If
        End Set
    End Property

    Private _dele_igv As Decimal

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property RolOpeCtaCte() As RolOpeCtaCte
        Get
            Return _rolOpeCtaCte
        End Get
        Set(ByVal value As RolOpeCtaCte)
            If _rolOpeCtaCte IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(cct_Id, value.CCT_ID) OrElse Not Equals(tdo_Id, value.TDO_ID) OrElse Not Equals(dtd_Id, value.DTD_ID) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As RolOpeCtaCte = _rolOpeCtaCte
                _rolOpeCtaCte = value
                FixupRolOpeCtaCte(previousValue)
                OnNavigationPropertyChanged("RolOpeCtaCte")
            End If
        End Set
    End Property

    Private _rolOpeCtaCte As RolOpeCtaCte


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        RolOpeCtaCte = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupRolOpeCtaCte(ByVal previousValue As RolOpeCtaCte)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetalleLeasing.Contains(Me) Then
            previousValue.DetalleLeasing.Remove(Me)
        End If

        If RolOpeCtaCte IsNot Nothing Then
            If Not RolOpeCtaCte.DetalleLeasing.Contains(Me) Then
                RolOpeCtaCte.DetalleLeasing.Add(Me)
            End If

            cct_Id = RolOpeCtaCte.CCT_ID
            tdo_Id = RolOpeCtaCte.TDO_ID
            dtd_Id = RolOpeCtaCte.DTD_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("RolOpeCtaCte") AndAlso
                ChangeTracker.OriginalValues("RolOpeCtaCte") Is RolOpeCtaCte Then
                ChangeTracker.OriginalValues.Remove("RolOpeCtaCte")
            Else
                ChangeTracker.RecordOriginalValue("RolOpeCtaCte", previousValue)
            End If
            If RolOpeCtaCte IsNot Nothing AndAlso Not RolOpeCtaCte.ChangeTracker.ChangeTrackingEnabled Then
                RolOpeCtaCte.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
