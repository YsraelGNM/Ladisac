'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(DocumentoGuias))>
<KnownType(GetType(OrdenServicioDetalle))>
Partial Public Class DocumentoGuiasDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DGD_ID As string = "DGD_ID"
				public shared DGU_ID As string = "DGU_ID"
				public shared TDO_ID As string = "TDO_ID"
				public shared DTD_ID As string = "DTD_ID"
				public shared DES_SERIE As string = "DES_SERIE"
				public shared DES_NUMERO As string = "DES_NUMERO"
				public shared GUI_ID As string = "GUI_ID"
				public shared GUI_SERIE As string = "GUI_SERIE"
				public shared GUI_NRO As string = "GUI_NRO"
		    End Structure
	



    <DataMember()>
    Public Property DGD_ID() As Integer
        Get
            Return _dGD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dGD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DGD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dGD_ID = value
                OnPropertyChanged("DGD_ID")
            End If
        End Set
    End Property

    Private _dGD_ID As Integer

    <DataMember()>
    Public Property DGU_ID() As Nullable(Of Integer)
        Get
            Return _dGU_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dGU_ID, value) Then
                ChangeTracker.RecordOriginalValue("DGU_ID", _dGU_ID)
                If Not IsDeserializing Then
                    If DocumentoGuias IsNot Nothing AndAlso Not Equals(DocumentoGuias.DGU_ID, value) Then
                        DocumentoGuias = Nothing
                    End If
                End If
                _dGU_ID = value
                OnPropertyChanged("DGU_ID")
            End If
        End Set
    End Property

    Private _dGU_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property TDO_ID() As String
        Get
            Return _tDO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID, value) Then
                _tDO_ID = value
                OnPropertyChanged("TDO_ID")
            End If
        End Set
    End Property

    Private _tDO_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

    <DataMember()>
    Public Property DES_SERIE() As String
        Get
            Return _dES_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_dES_SERIE, value) Then
                _dES_SERIE = value
                OnPropertyChanged("DES_SERIE")
            End If
        End Set
    End Property

    Private _dES_SERIE As String

    <DataMember()>
    Public Property DES_NUMERO() As String
        Get
            Return _dES_NUMERO
        End Get
        Set(ByVal value As String)
            If Not Equals(_dES_NUMERO, value) Then
                _dES_NUMERO = value
                OnPropertyChanged("DES_NUMERO")
            End If
        End Set
    End Property

    Private _dES_NUMERO As String

    <DataMember()>
    Public Property GUI_ID() As Nullable(Of Integer)
        Get
            Return _gUI_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_gUI_ID, value) Then
                _gUI_ID = value
                OnPropertyChanged("GUI_ID")
            End If
        End Set
    End Property

    Private _gUI_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property GUI_SERIE() As String
        Get
            Return _gUI_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_SERIE, value) Then
                _gUI_SERIE = value
                OnPropertyChanged("GUI_SERIE")
            End If
        End Set
    End Property

    Private _gUI_SERIE As String

    <DataMember()>
    Public Property GUI_NRO() As String
        Get
            Return _gUI_NRO
        End Get
        Set(ByVal value As String)
            If Not Equals(_gUI_NRO, value) Then
                _gUI_NRO = value
                OnPropertyChanged("GUI_NRO")
            End If
        End Set
    End Property

    Private _gUI_NRO As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property DocumentoGuias() As DocumentoGuias
        Get
            Return _documentoGuias
        End Get
        Set(ByVal value As DocumentoGuias)
            If _documentoGuias IsNot value Then
                Dim previousValue As DocumentoGuias = _documentoGuias
                _documentoGuias = value
                FixupDocumentoGuias(previousValue)
                OnNavigationPropertyChanged("DocumentoGuias")
            End If
        End Set
    End Property

    Private _documentoGuias As DocumentoGuias


    <DataMember()>
    Public Property OrdenServicioDetalle() As TrackableCollection(Of OrdenServicioDetalle)
        Get
            If _ordenServicioDetalle Is Nothing Then
                _ordenServicioDetalle = New TrackableCollection(Of OrdenServicioDetalle)
                AddHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
            End If
            Return _ordenServicioDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenServicioDetalle))
            If Not Object.ReferenceEquals(_ordenServicioDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenServicioDetalle IsNot Nothing Then
                    RemoveHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
                End If
                _ordenServicioDetalle = value
                If _ordenServicioDetalle IsNot Nothing Then
                    AddHandler _ordenServicioDetalle.CollectionChanged, AddressOf FixupOrdenServicioDetalle
                End If
                OnNavigationPropertyChanged("OrdenServicioDetalle")
            End If
        End Set
    End Property

    Private _ordenServicioDetalle As TrackableCollection(Of OrdenServicioDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        DocumentoGuias = Nothing
        OrdenServicioDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupDocumentoGuias(ByVal previousValue As DocumentoGuias, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocumentoGuiasDetalle.Contains(Me) Then
            previousValue.DocumentoGuiasDetalle.Remove(Me)
        End If

        If DocumentoGuias IsNot Nothing Then
            If Not DocumentoGuias.DocumentoGuiasDetalle.Contains(Me) Then
                DocumentoGuias.DocumentoGuiasDetalle.Add(Me)
            End If

            DGU_ID = DocumentoGuias.DGU_ID
        ElseIf Not skipKeys Then
            DGU_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DocumentoGuias") AndAlso
                ChangeTracker.OriginalValues("DocumentoGuias") Is DocumentoGuias Then
                ChangeTracker.OriginalValues.Remove("DocumentoGuias")
            Else
                ChangeTracker.RecordOriginalValue("DocumentoGuias", previousValue)
            End If
            If DocumentoGuias IsNot Nothing AndAlso Not DocumentoGuias.ChangeTracker.ChangeTrackingEnabled Then
                DocumentoGuias.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupOrdenServicioDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenServicioDetalle In e.NewItems
                item.DocumentoGuiasDetalle = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenServicioDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenServicioDetalle In e.OldItems
                If ReferenceEquals(item.DocumentoGuiasDetalle, Me) Then
                    item.DocumentoGuiasDetalle = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenServicioDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
