'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Despachos))>
<KnownType(GetType(DespachoSalidaDetalle))>
Partial Public Class DespachoSalida
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DSA_ID As string = "DSA_ID"
				public shared DSA_FECHA As string = "DSA_FECHA"
				public shared TDO_ID As string = "TDO_ID"
				public shared DTD_ID As string = "DTD_ID"
				public shared DSA_SERIE As string = "DSA_SERIE"
				public shared DSA_NUMERO As string = "DSA_NUMERO"
				public shared USU_ID As string = "USU_ID"
				public shared DSA_FEC_GRAB As string = "DSA_FEC_GRAB"
				public shared DSA_ESTADO As string = "DSA_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property DSA_ID() As Integer
        Get
            Return _dSA_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dSA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DSA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dSA_ID = value
                OnPropertyChanged("DSA_ID")
            End If
        End Set
    End Property

    Private _dSA_ID As Integer

    <DataMember()>
    Public Property DSA_FECHA() As Nullable(Of Date)
        Get
            Return _dSA_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dSA_FECHA, value) Then
                _dSA_FECHA = value
                OnPropertyChanged("DSA_FECHA")
            End If
        End Set
    End Property

    Private _dSA_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property TDO_ID() As String
        Get
            Return _tDO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID, value) Then
                ChangeTracker.RecordOriginalValue("TDO_ID", _tDO_ID)
                If Not IsDeserializing Then
                    If Despachos IsNot Nothing AndAlso Not Equals(Despachos.TDO_ID, value) Then
                        Dim previousValue As Despachos = _despachos
                        _despachos = Nothing
                        FixupDespachos(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Despachos")
                    End If
                End If
                _tDO_ID = value
                OnPropertyChanged("TDO_ID")
            End If
        End Set
    End Property

    Private _tDO_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                ChangeTracker.RecordOriginalValue("DTD_ID", _dTD_ID)
                If Not IsDeserializing Then
                    If Despachos IsNot Nothing AndAlso Not Equals(Despachos.DTD_ID, value) Then
                        Dim previousValue As Despachos = _despachos
                        _despachos = Nothing
                        FixupDespachos(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Despachos")
                    End If
                End If
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

    <DataMember()>
    Public Property DSA_SERIE() As String
        Get
            Return _dSA_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_dSA_SERIE, value) Then
                ChangeTracker.RecordOriginalValue("DSA_SERIE", _dSA_SERIE)
                If Not IsDeserializing Then
                    If Despachos IsNot Nothing AndAlso Not Equals(Despachos.DES_SERIE, value) Then
                        Dim previousValue As Despachos = _despachos
                        _despachos = Nothing
                        FixupDespachos(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Despachos")
                    End If
                End If
                _dSA_SERIE = value
                OnPropertyChanged("DSA_SERIE")
            End If
        End Set
    End Property

    Private _dSA_SERIE As String

    <DataMember()>
    Public Property DSA_NUMERO() As String
        Get
            Return _dSA_NUMERO
        End Get
        Set(ByVal value As String)
            If Not Equals(_dSA_NUMERO, value) Then
                ChangeTracker.RecordOriginalValue("DSA_NUMERO", _dSA_NUMERO)
                If Not IsDeserializing Then
                    If Despachos IsNot Nothing AndAlso Not Equals(Despachos.DES_NUMERO, value) Then
                        Dim previousValue As Despachos = _despachos
                        _despachos = Nothing
                        FixupDespachos(previousValue, skipKeys:=True)
                        OnNavigationPropertyChanged("Despachos")
                    End If
                End If
                _dSA_NUMERO = value
                OnPropertyChanged("DSA_NUMERO")
            End If
        End Set
    End Property

    Private _dSA_NUMERO As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property DSA_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _dSA_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dSA_FEC_GRAB, value) Then
                _dSA_FEC_GRAB = value
                OnPropertyChanged("DSA_FEC_GRAB")
            End If
        End Set
    End Property

    Private _dSA_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property DSA_ESTADO() As Nullable(Of Boolean)
        Get
            Return _dSA_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dSA_ESTADO, value) Then
                _dSA_ESTADO = value
                OnPropertyChanged("DSA_ESTADO")
            End If
        End Set
    End Property

    Private _dSA_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Despachos() As Despachos
        Get
            Return _despachos
        End Get
        Set(ByVal value As Despachos)
            If _despachos IsNot value Then
                Dim previousValue As Despachos = _despachos
                _despachos = value
                FixupDespachos(previousValue)
                OnNavigationPropertyChanged("Despachos")
            End If
        End Set
    End Property

    Private _despachos As Despachos


    <DataMember()>
    Public Property DespachoSalidaDetalle() As TrackableCollection(Of DespachoSalidaDetalle)
        Get
            If _despachoSalidaDetalle Is Nothing Then
                _despachoSalidaDetalle = New TrackableCollection(Of DespachoSalidaDetalle)
                AddHandler _despachoSalidaDetalle.CollectionChanged, AddressOf FixupDespachoSalidaDetalle
            End If
            Return _despachoSalidaDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of DespachoSalidaDetalle))
            If Not Object.ReferenceEquals(_despachoSalidaDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _despachoSalidaDetalle IsNot Nothing Then
                    RemoveHandler _despachoSalidaDetalle.CollectionChanged, AddressOf FixupDespachoSalidaDetalle
                End If
                _despachoSalidaDetalle = value
                If _despachoSalidaDetalle IsNot Nothing Then
                    AddHandler _despachoSalidaDetalle.CollectionChanged, AddressOf FixupDespachoSalidaDetalle
                End If
                OnNavigationPropertyChanged("DespachoSalidaDetalle")
            End If
        End Set
    End Property

    Private _despachoSalidaDetalle As TrackableCollection(Of DespachoSalidaDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Despachos = Nothing
        DespachoSalidaDetalle.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupDespachos(ByVal previousValue As Despachos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DespachoSalida.Contains(Me) Then
            previousValue.DespachoSalida.Remove(Me)
        End If

        If Despachos IsNot Nothing Then
            If Not Despachos.DespachoSalida.Contains(Me) Then
                Despachos.DespachoSalida.Add(Me)
            End If

            TDO_ID = Despachos.TDO_ID
            DTD_ID = Despachos.DTD_ID
            DSA_SERIE = Despachos.DES_SERIE
            DSA_NUMERO = Despachos.DES_NUMERO
        ElseIf Not skipKeys Then
            TDO_ID = Nothing
            DTD_ID = Nothing
            DSA_SERIE = Nothing
            DSA_NUMERO = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Despachos") AndAlso
                ChangeTracker.OriginalValues("Despachos") Is Despachos Then
                ChangeTracker.OriginalValues.Remove("Despachos")
            Else
                ChangeTracker.RecordOriginalValue("Despachos", previousValue)
            End If
            If Despachos IsNot Nothing AndAlso Not Despachos.ChangeTracker.ChangeTrackingEnabled Then
                Despachos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDespachoSalidaDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DespachoSalidaDetalle In e.NewItems
                item.DSA_ID = DSA_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DespachoSalidaDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DespachoSalidaDetalle In e.OldItems
                item.DSA_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DespachoSalidaDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
