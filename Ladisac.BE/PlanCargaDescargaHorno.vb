'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(UnidadesTransporte))>
<KnownType(GetType(Entidad))>
<KnownType(GetType(CargaDescargaTransporte))>
<KnownType(GetType(PuertaHorno))>
<KnownType(GetType(Produccion))>
Partial Public Class PlanCargaDescargaHorno
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CDH_ID As string = "CDH_ID"
				public shared HOR_ID As string = "HOR_ID"
				public shared PUE_ID As string = "PUE_ID"
				public shared CDH_FECHA_HORA As string = "CDH_FECHA_HORA"
				public shared USU_ID As string = "USU_ID"
				public shared CDH_FEC_GRAB As string = "CDH_FEC_GRAB"
				public shared CDH_ESTADO As string = "CDH_ESTADO"
				public shared UNT_ID_1 As string = "UNT_ID_1"
				public shared UNT_ID_2 As string = "UNT_ID_2"
				public shared UNT_ID_3 As string = "UNT_ID_3"
				public shared UNT_ID_4 As string = "UNT_ID_4"
				public shared UNT_ID_5 As string = "UNT_ID_5"
				public shared UNT_ID_6 As string = "UNT_ID_6"
				public shared UNT_ID_7 As string = "UNT_ID_7"
				public shared UNT_ID_8 As string = "UNT_ID_8"
				public shared ENO_ID_1 As string = "ENO_ID_1"
				public shared ENO_ID_2 As string = "ENO_ID_2"
				public shared ENO_ID_3 As string = "ENO_ID_3"
				public shared ENO_ID_4 As string = "ENO_ID_4"
				public shared ENO_ID_5 As string = "ENO_ID_5"
				public shared ENO_ID_6 As string = "ENO_ID_6"
				public shared CDH_TIPO As string = "CDH_TIPO"
				public shared UNT_ID_9 As string = "UNT_ID_9"
				public shared UNT_ID_10 As string = "UNT_ID_10"
				public shared UNT_ID_11 As string = "UNT_ID_11"
				public shared UNT_ID_12 As string = "UNT_ID_12"
				public shared PRO_ID As string = "PRO_ID"
		    End Structure
	



    <DataMember()>
    Public Property CDH_ID() As Integer
        Get
            Return _cDH_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cDH_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CDH_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cDH_ID = value
                OnPropertyChanged("CDH_ID")
            End If
        End Set
    End Property

    Private _cDH_ID As Integer

    <DataMember()>
    Public Property HOR_ID() As Nullable(Of Integer)
        Get
            Return _hOR_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_hOR_ID, value) Then
                _hOR_ID = value
                OnPropertyChanged("HOR_ID")
            End If
        End Set
    End Property

    Private _hOR_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PUE_ID() As Nullable(Of Integer)
        Get
            Return _pUE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pUE_ID, value) Then
                ChangeTracker.RecordOriginalValue("PUE_ID", _pUE_ID)
                If Not IsDeserializing Then
                    If PuertaHorno IsNot Nothing AndAlso Not Equals(PuertaHorno.PUE_ID, value) Then
                        PuertaHorno = Nothing
                    End If
                End If
                _pUE_ID = value
                OnPropertyChanged("PUE_ID")
            End If
        End Set
    End Property

    Private _pUE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property CDH_FECHA_HORA() As Date
        Get
            Return _cDH_FECHA_HORA
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cDH_FECHA_HORA, value) Then
                _cDH_FECHA_HORA = value
                OnPropertyChanged("CDH_FECHA_HORA")
            End If
        End Set
    End Property

    Private _cDH_FECHA_HORA As Date

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CDH_FEC_GRAB() As Date
        Get
            Return _cDH_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cDH_FEC_GRAB, value) Then
                _cDH_FEC_GRAB = value
                OnPropertyChanged("CDH_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cDH_FEC_GRAB As Date

    <DataMember()>
    Public Property CDH_ESTADO() As Boolean
        Get
            Return _cDH_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cDH_ESTADO, value) Then
                _cDH_ESTADO = value
                OnPropertyChanged("CDH_ESTADO")
            End If
        End Set
    End Property

    Private _cDH_ESTADO As Boolean

    <DataMember()>
    Public Property UNT_ID_1() As String
        Get
            Return _uNT_ID_1
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_1, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_1", _uNT_ID_1)
                If Not IsDeserializing Then
                    If UnidadesTransporte IsNot Nothing AndAlso Not Equals(UnidadesTransporte.UNT_ID, value) Then
                        UnidadesTransporte = Nothing
                    End If
                End If
                _uNT_ID_1 = value
                OnPropertyChanged("UNT_ID_1")
            End If
        End Set
    End Property

    Private _uNT_ID_1 As String

    <DataMember()>
    Public Property UNT_ID_2() As String
        Get
            Return _uNT_ID_2
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_2, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_2", _uNT_ID_2)
                If Not IsDeserializing Then
                    If UnidadesTransporte1 IsNot Nothing AndAlso Not Equals(UnidadesTransporte1.UNT_ID, value) Then
                        UnidadesTransporte1 = Nothing
                    End If
                End If
                _uNT_ID_2 = value
                OnPropertyChanged("UNT_ID_2")
            End If
        End Set
    End Property

    Private _uNT_ID_2 As String

    <DataMember()>
    Public Property UNT_ID_3() As String
        Get
            Return _uNT_ID_3
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_3, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_3", _uNT_ID_3)
                If Not IsDeserializing Then
                    If UnidadesTransporte2 IsNot Nothing AndAlso Not Equals(UnidadesTransporte2.UNT_ID, value) Then
                        UnidadesTransporte2 = Nothing
                    End If
                End If
                _uNT_ID_3 = value
                OnPropertyChanged("UNT_ID_3")
            End If
        End Set
    End Property

    Private _uNT_ID_3 As String

    <DataMember()>
    Public Property UNT_ID_4() As String
        Get
            Return _uNT_ID_4
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_4, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_4", _uNT_ID_4)
                If Not IsDeserializing Then
                    If UnidadesTransporte3 IsNot Nothing AndAlso Not Equals(UnidadesTransporte3.UNT_ID, value) Then
                        UnidadesTransporte3 = Nothing
                    End If
                End If
                _uNT_ID_4 = value
                OnPropertyChanged("UNT_ID_4")
            End If
        End Set
    End Property

    Private _uNT_ID_4 As String

    <DataMember()>
    Public Property UNT_ID_5() As String
        Get
            Return _uNT_ID_5
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_5, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_5", _uNT_ID_5)
                If Not IsDeserializing Then
                    If UnidadesTransporte4 IsNot Nothing AndAlso Not Equals(UnidadesTransporte4.UNT_ID, value) Then
                        UnidadesTransporte4 = Nothing
                    End If
                End If
                _uNT_ID_5 = value
                OnPropertyChanged("UNT_ID_5")
            End If
        End Set
    End Property

    Private _uNT_ID_5 As String

    <DataMember()>
    Public Property UNT_ID_6() As String
        Get
            Return _uNT_ID_6
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_6, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_6", _uNT_ID_6)
                If Not IsDeserializing Then
                    If UnidadesTransporte5 IsNot Nothing AndAlso Not Equals(UnidadesTransporte5.UNT_ID, value) Then
                        UnidadesTransporte5 = Nothing
                    End If
                End If
                _uNT_ID_6 = value
                OnPropertyChanged("UNT_ID_6")
            End If
        End Set
    End Property

    Private _uNT_ID_6 As String

    <DataMember()>
    Public Property UNT_ID_7() As String
        Get
            Return _uNT_ID_7
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_7, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_7", _uNT_ID_7)
                If Not IsDeserializing Then
                    If UnidadesTransporte6 IsNot Nothing AndAlso Not Equals(UnidadesTransporte6.UNT_ID, value) Then
                        UnidadesTransporte6 = Nothing
                    End If
                End If
                _uNT_ID_7 = value
                OnPropertyChanged("UNT_ID_7")
            End If
        End Set
    End Property

    Private _uNT_ID_7 As String

    <DataMember()>
    Public Property UNT_ID_8() As String
        Get
            Return _uNT_ID_8
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_8, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_8", _uNT_ID_8)
                If Not IsDeserializing Then
                    If UnidadesTransporte7 IsNot Nothing AndAlso Not Equals(UnidadesTransporte7.UNT_ID, value) Then
                        UnidadesTransporte7 = Nothing
                    End If
                End If
                _uNT_ID_8 = value
                OnPropertyChanged("UNT_ID_8")
            End If
        End Set
    End Property

    Private _uNT_ID_8 As String

    <DataMember()>
    Public Property ENO_ID_1() As Nullable(Of Integer)
        Get
            Return _eNO_ID_1
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_1, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_1", _eNO_ID_1)
                If Not IsDeserializing Then
                    If Entidad IsNot Nothing AndAlso Not Equals(Entidad.ENO_ID, value) Then
                        Entidad = Nothing
                    End If
                End If
                _eNO_ID_1 = value
                OnPropertyChanged("ENO_ID_1")
            End If
        End Set
    End Property

    Private _eNO_ID_1 As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID_2() As Nullable(Of Integer)
        Get
            Return _eNO_ID_2
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_2, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_2", _eNO_ID_2)
                If Not IsDeserializing Then
                    If Entidad1 IsNot Nothing AndAlso Not Equals(Entidad1.ENO_ID, value) Then
                        Entidad1 = Nothing
                    End If
                End If
                _eNO_ID_2 = value
                OnPropertyChanged("ENO_ID_2")
            End If
        End Set
    End Property

    Private _eNO_ID_2 As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID_3() As Nullable(Of Integer)
        Get
            Return _eNO_ID_3
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_3, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_3", _eNO_ID_3)
                If Not IsDeserializing Then
                    If Entidad2 IsNot Nothing AndAlso Not Equals(Entidad2.ENO_ID, value) Then
                        Entidad2 = Nothing
                    End If
                End If
                _eNO_ID_3 = value
                OnPropertyChanged("ENO_ID_3")
            End If
        End Set
    End Property

    Private _eNO_ID_3 As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID_4() As Nullable(Of Integer)
        Get
            Return _eNO_ID_4
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_4, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_4", _eNO_ID_4)
                If Not IsDeserializing Then
                    If Entidad3 IsNot Nothing AndAlso Not Equals(Entidad3.ENO_ID, value) Then
                        Entidad3 = Nothing
                    End If
                End If
                _eNO_ID_4 = value
                OnPropertyChanged("ENO_ID_4")
            End If
        End Set
    End Property

    Private _eNO_ID_4 As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID_5() As Nullable(Of Integer)
        Get
            Return _eNO_ID_5
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_5, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_5", _eNO_ID_5)
                If Not IsDeserializing Then
                    If Entidad4 IsNot Nothing AndAlso Not Equals(Entidad4.ENO_ID, value) Then
                        Entidad4 = Nothing
                    End If
                End If
                _eNO_ID_5 = value
                OnPropertyChanged("ENO_ID_5")
            End If
        End Set
    End Property

    Private _eNO_ID_5 As Nullable(Of Integer)

    <DataMember()>
    Public Property ENO_ID_6() As Nullable(Of Integer)
        Get
            Return _eNO_ID_6
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_6, value) Then
                ChangeTracker.RecordOriginalValue("ENO_ID_6", _eNO_ID_6)
                If Not IsDeserializing Then
                    If Entidad5 IsNot Nothing AndAlso Not Equals(Entidad5.ENO_ID, value) Then
                        Entidad5 = Nothing
                    End If
                End If
                _eNO_ID_6 = value
                OnPropertyChanged("ENO_ID_6")
            End If
        End Set
    End Property

    Private _eNO_ID_6 As Nullable(Of Integer)

    <DataMember()>
    Public Property CDH_TIPO() As String
        Get
            Return _cDH_TIPO
        End Get
        Set(ByVal value As String)
            If Not Equals(_cDH_TIPO, value) Then
                _cDH_TIPO = value
                OnPropertyChanged("CDH_TIPO")
            End If
        End Set
    End Property

    Private _cDH_TIPO As String

    <DataMember()>
    Public Property UNT_ID_9() As String
        Get
            Return _uNT_ID_9
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_9, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_9", _uNT_ID_9)
                If Not IsDeserializing Then
                    If UnidadesTransporte10 IsNot Nothing AndAlso Not Equals(UnidadesTransporte10.UNT_ID, value) Then
                        UnidadesTransporte10 = Nothing
                    End If
                End If
                _uNT_ID_9 = value
                OnPropertyChanged("UNT_ID_9")
            End If
        End Set
    End Property

    Private _uNT_ID_9 As String

    <DataMember()>
    Public Property UNT_ID_10() As String
        Get
            Return _uNT_ID_10
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_10, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_10", _uNT_ID_10)
                If Not IsDeserializing Then
                    If UnidadesTransporte11 IsNot Nothing AndAlso Not Equals(UnidadesTransporte11.UNT_ID, value) Then
                        UnidadesTransporte11 = Nothing
                    End If
                End If
                _uNT_ID_10 = value
                OnPropertyChanged("UNT_ID_10")
            End If
        End Set
    End Property

    Private _uNT_ID_10 As String

    <DataMember()>
    Public Property UNT_ID_11() As String
        Get
            Return _uNT_ID_11
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_11, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_11", _uNT_ID_11)
                If Not IsDeserializing Then
                    If UnidadesTransporte2_1 IsNot Nothing AndAlso Not Equals(UnidadesTransporte2_1.UNT_ID, value) Then
                        UnidadesTransporte2_1 = Nothing
                    End If
                End If
                _uNT_ID_11 = value
                OnPropertyChanged("UNT_ID_11")
            End If
        End Set
    End Property

    Private _uNT_ID_11 As String

    <DataMember()>
    Public Property UNT_ID_12() As String
        Get
            Return _uNT_ID_12
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID_12, value) Then
                ChangeTracker.RecordOriginalValue("UNT_ID_12", _uNT_ID_12)
                If Not IsDeserializing Then
                    If UnidadesTransporte3_1 IsNot Nothing AndAlso Not Equals(UnidadesTransporte3_1.UNT_ID, value) Then
                        UnidadesTransporte3_1 = Nothing
                    End If
                End If
                _uNT_ID_12 = value
                OnPropertyChanged("UNT_ID_12")
            End If
        End Set
    End Property

    Private _uNT_ID_12 As String

    <DataMember()>
    Public Property PRO_ID() As Nullable(Of Integer)
        Get
            Return _pRO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pRO_ID, value) Then
                ChangeTracker.RecordOriginalValue("PRO_ID", _pRO_ID)
                If Not IsDeserializing Then
                    If Produccion IsNot Nothing AndAlso Not Equals(Produccion.PRO_ID, value) Then
                        Produccion = Nothing
                    End If
                End If
                _pRO_ID = value
                OnPropertyChanged("PRO_ID")
            End If
        End Set
    End Property

    Private _pRO_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property UnidadesTransporte() As UnidadesTransporte
        Get
            Return _unidadesTransporte
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte
                _unidadesTransporte = value
                FixupUnidadesTransporte(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte")
            End If
        End Set
    End Property

    Private _unidadesTransporte As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte1() As UnidadesTransporte
        Get
            Return _unidadesTransporte1
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte1 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte1
                _unidadesTransporte1 = value
                FixupUnidadesTransporte1(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte1")
            End If
        End Set
    End Property

    Private _unidadesTransporte1 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte2() As UnidadesTransporte
        Get
            Return _unidadesTransporte2
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte2 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte2
                _unidadesTransporte2 = value
                FixupUnidadesTransporte2(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte2")
            End If
        End Set
    End Property

    Private _unidadesTransporte2 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte3() As UnidadesTransporte
        Get
            Return _unidadesTransporte3
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte3 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte3
                _unidadesTransporte3 = value
                FixupUnidadesTransporte3(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte3")
            End If
        End Set
    End Property

    Private _unidadesTransporte3 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte4() As UnidadesTransporte
        Get
            Return _unidadesTransporte4
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte4 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte4
                _unidadesTransporte4 = value
                FixupUnidadesTransporte4(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte4")
            End If
        End Set
    End Property

    Private _unidadesTransporte4 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte5() As UnidadesTransporte
        Get
            Return _unidadesTransporte5
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte5 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte5
                _unidadesTransporte5 = value
                FixupUnidadesTransporte5(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte5")
            End If
        End Set
    End Property

    Private _unidadesTransporte5 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte6() As UnidadesTransporte
        Get
            Return _unidadesTransporte6
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte6 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte6
                _unidadesTransporte6 = value
                FixupUnidadesTransporte6(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte6")
            End If
        End Set
    End Property

    Private _unidadesTransporte6 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte7() As UnidadesTransporte
        Get
            Return _unidadesTransporte7
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte7 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte7
                _unidadesTransporte7 = value
                FixupUnidadesTransporte7(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte7")
            End If
        End Set
    End Property

    Private _unidadesTransporte7 As UnidadesTransporte


    <DataMember()>
    Public Property Entidad() As Entidad
        Get
            Return _entidad
        End Get
        Set(ByVal value As Entidad)
            If _entidad IsNot value Then
                Dim previousValue As Entidad = _entidad
                _entidad = value
                FixupEntidad(previousValue)
                OnNavigationPropertyChanged("Entidad")
            End If
        End Set
    End Property

    Private _entidad As Entidad


    <DataMember()>
    Public Property Entidad1() As Entidad
        Get
            Return _entidad1
        End Get
        Set(ByVal value As Entidad)
            If _entidad1 IsNot value Then
                Dim previousValue As Entidad = _entidad1
                _entidad1 = value
                FixupEntidad1(previousValue)
                OnNavigationPropertyChanged("Entidad1")
            End If
        End Set
    End Property

    Private _entidad1 As Entidad


    <DataMember()>
    Public Property Entidad2() As Entidad
        Get
            Return _entidad2
        End Get
        Set(ByVal value As Entidad)
            If _entidad2 IsNot value Then
                Dim previousValue As Entidad = _entidad2
                _entidad2 = value
                FixupEntidad2(previousValue)
                OnNavigationPropertyChanged("Entidad2")
            End If
        End Set
    End Property

    Private _entidad2 As Entidad


    <DataMember()>
    Public Property Entidad3() As Entidad
        Get
            Return _entidad3
        End Get
        Set(ByVal value As Entidad)
            If _entidad3 IsNot value Then
                Dim previousValue As Entidad = _entidad3
                _entidad3 = value
                FixupEntidad3(previousValue)
                OnNavigationPropertyChanged("Entidad3")
            End If
        End Set
    End Property

    Private _entidad3 As Entidad


    <DataMember()>
    Public Property Entidad4() As Entidad
        Get
            Return _entidad4
        End Get
        Set(ByVal value As Entidad)
            If _entidad4 IsNot value Then
                Dim previousValue As Entidad = _entidad4
                _entidad4 = value
                FixupEntidad4(previousValue)
                OnNavigationPropertyChanged("Entidad4")
            End If
        End Set
    End Property

    Private _entidad4 As Entidad


    <DataMember()>
    Public Property Entidad5() As Entidad
        Get
            Return _entidad5
        End Get
        Set(ByVal value As Entidad)
            If _entidad5 IsNot value Then
                Dim previousValue As Entidad = _entidad5
                _entidad5 = value
                FixupEntidad5(previousValue)
                OnNavigationPropertyChanged("Entidad5")
            End If
        End Set
    End Property

    Private _entidad5 As Entidad


    <DataMember()>
    Public Property CargaDescargaTransporte() As TrackableCollection(Of CargaDescargaTransporte)
        Get
            If _cargaDescargaTransporte Is Nothing Then
                _cargaDescargaTransporte = New TrackableCollection(Of CargaDescargaTransporte)
                AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
            End If
            Return _cargaDescargaTransporte
        End Get
        Set(ByVal value As TrackableCollection(Of CargaDescargaTransporte))
            If Not Object.ReferenceEquals(_cargaDescargaTransporte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cargaDescargaTransporte IsNot Nothing Then
                    RemoveHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                _cargaDescargaTransporte = value
                If _cargaDescargaTransporte IsNot Nothing Then
                    AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                OnNavigationPropertyChanged("CargaDescargaTransporte")
            End If
        End Set
    End Property

    Private _cargaDescargaTransporte As TrackableCollection(Of CargaDescargaTransporte)

    <DataMember()>
    Public Property PuertaHorno() As PuertaHorno
        Get
            Return _puertaHorno
        End Get
        Set(ByVal value As PuertaHorno)
            If _puertaHorno IsNot value Then
                Dim previousValue As PuertaHorno = _puertaHorno
                _puertaHorno = value
                FixupPuertaHorno(previousValue)
                OnNavigationPropertyChanged("PuertaHorno")
            End If
        End Set
    End Property

    Private _puertaHorno As PuertaHorno


    <DataMember()>
    Public Property UnidadesTransporte2_1() As UnidadesTransporte
        Get
            Return _unidadesTransporte2_1
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte2_1 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte2_1
                _unidadesTransporte2_1 = value
                FixupUnidadesTransporte2_1(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte2_1")
            End If
        End Set
    End Property

    Private _unidadesTransporte2_1 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte3_1() As UnidadesTransporte
        Get
            Return _unidadesTransporte3_1
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte3_1 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte3_1
                _unidadesTransporte3_1 = value
                FixupUnidadesTransporte3_1(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte3_1")
            End If
        End Set
    End Property

    Private _unidadesTransporte3_1 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte10() As UnidadesTransporte
        Get
            Return _unidadesTransporte10
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte10 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte10
                _unidadesTransporte10 = value
                FixupUnidadesTransporte10(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte10")
            End If
        End Set
    End Property

    Private _unidadesTransporte10 As UnidadesTransporte


    <DataMember()>
    Public Property UnidadesTransporte11() As UnidadesTransporte
        Get
            Return _unidadesTransporte11
        End Get
        Set(ByVal value As UnidadesTransporte)
            If _unidadesTransporte11 IsNot value Then
                Dim previousValue As UnidadesTransporte = _unidadesTransporte11
                _unidadesTransporte11 = value
                FixupUnidadesTransporte11(previousValue)
                OnNavigationPropertyChanged("UnidadesTransporte11")
            End If
        End Set
    End Property

    Private _unidadesTransporte11 As UnidadesTransporte


    <DataMember()>
    Public Property Produccion() As Produccion
        Get
            Return _produccion
        End Get
        Set(ByVal value As Produccion)
            If _produccion IsNot value Then
                Dim previousValue As Produccion = _produccion
                _produccion = value
                FixupProduccion(previousValue)
                OnNavigationPropertyChanged("Produccion")
            End If
        End Set
    End Property

    Private _produccion As Produccion


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        UnidadesTransporte = Nothing
        UnidadesTransporte1 = Nothing
        UnidadesTransporte2 = Nothing
        UnidadesTransporte3 = Nothing
        UnidadesTransporte4 = Nothing
        UnidadesTransporte5 = Nothing
        UnidadesTransporte6 = Nothing
        UnidadesTransporte7 = Nothing
        Entidad = Nothing
        Entidad1 = Nothing
        Entidad2 = Nothing
        Entidad3 = Nothing
        Entidad4 = Nothing
        Entidad5 = Nothing
        CargaDescargaTransporte.Clear()
        PuertaHorno = Nothing
        UnidadesTransporte2_1 = Nothing
        UnidadesTransporte3_1 = Nothing
        UnidadesTransporte10 = Nothing
        UnidadesTransporte11 = Nothing
        Produccion = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupUnidadesTransporte(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno.Remove(Me)
        End If

        If UnidadesTransporte IsNot Nothing Then
            If Not UnidadesTransporte.PlanCargaDescargaHorno.Contains(Me) Then
                UnidadesTransporte.PlanCargaDescargaHorno.Add(Me)
            End If

            UNT_ID_1 = UnidadesTransporte.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_1 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte") Is UnidadesTransporte Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte", previousValue)
            End If
            If UnidadesTransporte IsNot Nothing AndAlso Not UnidadesTransporte.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte1(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno1.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno1.Remove(Me)
        End If

        If UnidadesTransporte1 IsNot Nothing Then
            If Not UnidadesTransporte1.PlanCargaDescargaHorno1.Contains(Me) Then
                UnidadesTransporte1.PlanCargaDescargaHorno1.Add(Me)
            End If

            UNT_ID_2 = UnidadesTransporte1.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_2 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte1") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte1") Is UnidadesTransporte1 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte1")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte1", previousValue)
            End If
            If UnidadesTransporte1 IsNot Nothing AndAlso Not UnidadesTransporte1.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte2(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno2.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno2.Remove(Me)
        End If

        If UnidadesTransporte2 IsNot Nothing Then
            If Not UnidadesTransporte2.PlanCargaDescargaHorno2.Contains(Me) Then
                UnidadesTransporte2.PlanCargaDescargaHorno2.Add(Me)
            End If

            UNT_ID_3 = UnidadesTransporte2.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_3 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte2") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte2") Is UnidadesTransporte2 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte2")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte2", previousValue)
            End If
            If UnidadesTransporte2 IsNot Nothing AndAlso Not UnidadesTransporte2.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte3(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno3.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno3.Remove(Me)
        End If

        If UnidadesTransporte3 IsNot Nothing Then
            If Not UnidadesTransporte3.PlanCargaDescargaHorno3.Contains(Me) Then
                UnidadesTransporte3.PlanCargaDescargaHorno3.Add(Me)
            End If

            UNT_ID_4 = UnidadesTransporte3.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_4 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte3") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte3") Is UnidadesTransporte3 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte3")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte3", previousValue)
            End If
            If UnidadesTransporte3 IsNot Nothing AndAlso Not UnidadesTransporte3.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte4(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno4.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno4.Remove(Me)
        End If

        If UnidadesTransporte4 IsNot Nothing Then
            If Not UnidadesTransporte4.PlanCargaDescargaHorno4.Contains(Me) Then
                UnidadesTransporte4.PlanCargaDescargaHorno4.Add(Me)
            End If

            UNT_ID_5 = UnidadesTransporte4.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_5 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte4") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte4") Is UnidadesTransporte4 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte4")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte4", previousValue)
            End If
            If UnidadesTransporte4 IsNot Nothing AndAlso Not UnidadesTransporte4.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte4.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte5(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno5.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno5.Remove(Me)
        End If

        If UnidadesTransporte5 IsNot Nothing Then
            If Not UnidadesTransporte5.PlanCargaDescargaHorno5.Contains(Me) Then
                UnidadesTransporte5.PlanCargaDescargaHorno5.Add(Me)
            End If

            UNT_ID_6 = UnidadesTransporte5.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_6 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte5") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte5") Is UnidadesTransporte5 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte5")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte5", previousValue)
            End If
            If UnidadesTransporte5 IsNot Nothing AndAlso Not UnidadesTransporte5.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte5.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte6(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno6.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno6.Remove(Me)
        End If

        If UnidadesTransporte6 IsNot Nothing Then
            If Not UnidadesTransporte6.PlanCargaDescargaHorno6.Contains(Me) Then
                UnidadesTransporte6.PlanCargaDescargaHorno6.Add(Me)
            End If

            UNT_ID_7 = UnidadesTransporte6.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_7 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte6") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte6") Is UnidadesTransporte6 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte6")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte6", previousValue)
            End If
            If UnidadesTransporte6 IsNot Nothing AndAlso Not UnidadesTransporte6.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte6.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte7(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno7.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno7.Remove(Me)
        End If

        If UnidadesTransporte7 IsNot Nothing Then
            If Not UnidadesTransporte7.PlanCargaDescargaHorno7.Contains(Me) Then
                UnidadesTransporte7.PlanCargaDescargaHorno7.Add(Me)
            End If

            UNT_ID_8 = UnidadesTransporte7.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_8 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte7") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte7") Is UnidadesTransporte7 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte7")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte7", previousValue)
            End If
            If UnidadesTransporte7 IsNot Nothing AndAlso Not UnidadesTransporte7.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte7.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno.Remove(Me)
        End If

        If Entidad IsNot Nothing Then
            If Not Entidad.PlanCargaDescargaHorno.Contains(Me) Then
                Entidad.PlanCargaDescargaHorno.Add(Me)
            End If

            ENO_ID_1 = Entidad.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_1 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad") AndAlso
                ChangeTracker.OriginalValues("Entidad") Is Entidad Then
                ChangeTracker.OriginalValues.Remove("Entidad")
            Else
                ChangeTracker.RecordOriginalValue("Entidad", previousValue)
            End If
            If Entidad IsNot Nothing AndAlso Not Entidad.ChangeTracker.ChangeTrackingEnabled Then
                Entidad.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad1(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno1.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno1.Remove(Me)
        End If

        If Entidad1 IsNot Nothing Then
            If Not Entidad1.PlanCargaDescargaHorno1.Contains(Me) Then
                Entidad1.PlanCargaDescargaHorno1.Add(Me)
            End If

            ENO_ID_2 = Entidad1.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_2 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad1") AndAlso
                ChangeTracker.OriginalValues("Entidad1") Is Entidad1 Then
                ChangeTracker.OriginalValues.Remove("Entidad1")
            Else
                ChangeTracker.RecordOriginalValue("Entidad1", previousValue)
            End If
            If Entidad1 IsNot Nothing AndAlso Not Entidad1.ChangeTracker.ChangeTrackingEnabled Then
                Entidad1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad2(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno2.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno2.Remove(Me)
        End If

        If Entidad2 IsNot Nothing Then
            If Not Entidad2.PlanCargaDescargaHorno2.Contains(Me) Then
                Entidad2.PlanCargaDescargaHorno2.Add(Me)
            End If

            ENO_ID_3 = Entidad2.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_3 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad2") AndAlso
                ChangeTracker.OriginalValues("Entidad2") Is Entidad2 Then
                ChangeTracker.OriginalValues.Remove("Entidad2")
            Else
                ChangeTracker.RecordOriginalValue("Entidad2", previousValue)
            End If
            If Entidad2 IsNot Nothing AndAlso Not Entidad2.ChangeTracker.ChangeTrackingEnabled Then
                Entidad2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad3(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno3.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno3.Remove(Me)
        End If

        If Entidad3 IsNot Nothing Then
            If Not Entidad3.PlanCargaDescargaHorno3.Contains(Me) Then
                Entidad3.PlanCargaDescargaHorno3.Add(Me)
            End If

            ENO_ID_4 = Entidad3.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_4 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad3") AndAlso
                ChangeTracker.OriginalValues("Entidad3") Is Entidad3 Then
                ChangeTracker.OriginalValues.Remove("Entidad3")
            Else
                ChangeTracker.RecordOriginalValue("Entidad3", previousValue)
            End If
            If Entidad3 IsNot Nothing AndAlso Not Entidad3.ChangeTracker.ChangeTrackingEnabled Then
                Entidad3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad4(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno4.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno4.Remove(Me)
        End If

        If Entidad4 IsNot Nothing Then
            If Not Entidad4.PlanCargaDescargaHorno4.Contains(Me) Then
                Entidad4.PlanCargaDescargaHorno4.Add(Me)
            End If

            ENO_ID_5 = Entidad4.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_5 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad4") AndAlso
                ChangeTracker.OriginalValues("Entidad4") Is Entidad4 Then
                ChangeTracker.OriginalValues.Remove("Entidad4")
            Else
                ChangeTracker.RecordOriginalValue("Entidad4", previousValue)
            End If
            If Entidad4 IsNot Nothing AndAlso Not Entidad4.ChangeTracker.ChangeTrackingEnabled Then
                Entidad4.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupEntidad5(ByVal previousValue As Entidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno5.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno5.Remove(Me)
        End If

        If Entidad5 IsNot Nothing Then
            If Not Entidad5.PlanCargaDescargaHorno5.Contains(Me) Then
                Entidad5.PlanCargaDescargaHorno5.Add(Me)
            End If

            ENO_ID_6 = Entidad5.ENO_ID
        ElseIf Not skipKeys Then
            ENO_ID_6 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Entidad5") AndAlso
                ChangeTracker.OriginalValues("Entidad5") Is Entidad5 Then
                ChangeTracker.OriginalValues.Remove("Entidad5")
            Else
                ChangeTracker.RecordOriginalValue("Entidad5", previousValue)
            End If
            If Entidad5 IsNot Nothing AndAlso Not Entidad5.ChangeTracker.ChangeTrackingEnabled Then
                Entidad5.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPuertaHorno(ByVal previousValue As PuertaHorno, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno.Remove(Me)
        End If

        If PuertaHorno IsNot Nothing Then
            If Not PuertaHorno.PlanCargaDescargaHorno.Contains(Me) Then
                PuertaHorno.PlanCargaDescargaHorno.Add(Me)
            End If

            PUE_ID = PuertaHorno.PUE_ID
        ElseIf Not skipKeys Then
            PUE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("PuertaHorno") AndAlso
                ChangeTracker.OriginalValues("PuertaHorno") Is PuertaHorno Then
                ChangeTracker.OriginalValues.Remove("PuertaHorno")
            Else
                ChangeTracker.RecordOriginalValue("PuertaHorno", previousValue)
            End If
            If PuertaHorno IsNot Nothing AndAlso Not PuertaHorno.ChangeTracker.ChangeTrackingEnabled Then
                PuertaHorno.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte2_1(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno2_1.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno2_1.Remove(Me)
        End If

        If UnidadesTransporte2_1 IsNot Nothing Then
            If Not UnidadesTransporte2_1.PlanCargaDescargaHorno2_1.Contains(Me) Then
                UnidadesTransporte2_1.PlanCargaDescargaHorno2_1.Add(Me)
            End If

            UNT_ID_11 = UnidadesTransporte2_1.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_11 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte2_1") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte2_1") Is UnidadesTransporte2_1 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte2_1")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte2_1", previousValue)
            End If
            If UnidadesTransporte2_1 IsNot Nothing AndAlso Not UnidadesTransporte2_1.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte2_1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte3_1(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno3_1.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno3_1.Remove(Me)
        End If

        If UnidadesTransporte3_1 IsNot Nothing Then
            If Not UnidadesTransporte3_1.PlanCargaDescargaHorno3_1.Contains(Me) Then
                UnidadesTransporte3_1.PlanCargaDescargaHorno3_1.Add(Me)
            End If

            UNT_ID_12 = UnidadesTransporte3_1.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_12 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte3_1") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte3_1") Is UnidadesTransporte3_1 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte3_1")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte3_1", previousValue)
            End If
            If UnidadesTransporte3_1 IsNot Nothing AndAlso Not UnidadesTransporte3_1.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte3_1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte10(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno10.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno10.Remove(Me)
        End If

        If UnidadesTransporte10 IsNot Nothing Then
            If Not UnidadesTransporte10.PlanCargaDescargaHorno10.Contains(Me) Then
                UnidadesTransporte10.PlanCargaDescargaHorno10.Add(Me)
            End If

            UNT_ID_9 = UnidadesTransporte10.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_9 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte10") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte10") Is UnidadesTransporte10 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte10")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte10", previousValue)
            End If
            If UnidadesTransporte10 IsNot Nothing AndAlso Not UnidadesTransporte10.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte10.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUnidadesTransporte11(ByVal previousValue As UnidadesTransporte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno11.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno11.Remove(Me)
        End If

        If UnidadesTransporte11 IsNot Nothing Then
            If Not UnidadesTransporte11.PlanCargaDescargaHorno11.Contains(Me) Then
                UnidadesTransporte11.PlanCargaDescargaHorno11.Add(Me)
            End If

            UNT_ID_10 = UnidadesTransporte11.UNT_ID
        ElseIf Not skipKeys Then
            UNT_ID_10 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("UnidadesTransporte11") AndAlso
                ChangeTracker.OriginalValues("UnidadesTransporte11") Is UnidadesTransporte11 Then
                ChangeTracker.OriginalValues.Remove("UnidadesTransporte11")
            Else
                ChangeTracker.RecordOriginalValue("UnidadesTransporte11", previousValue)
            End If
            If UnidadesTransporte11 IsNot Nothing AndAlso Not UnidadesTransporte11.ChangeTracker.ChangeTrackingEnabled Then
                UnidadesTransporte11.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupProduccion(ByVal previousValue As Produccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.PlanCargaDescargaHorno.Contains(Me) Then
            previousValue.PlanCargaDescargaHorno.Remove(Me)
        End If

        If Produccion IsNot Nothing Then
            If Not Produccion.PlanCargaDescargaHorno.Contains(Me) Then
                Produccion.PlanCargaDescargaHorno.Add(Me)
            End If

            PRO_ID = Produccion.PRO_ID
        ElseIf Not skipKeys Then
            PRO_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Produccion") AndAlso
                ChangeTracker.OriginalValues("Produccion") Is Produccion Then
                ChangeTracker.OriginalValues.Remove("Produccion")
            Else
                ChangeTracker.RecordOriginalValue("Produccion", previousValue)
            End If
            If Produccion IsNot Nothing AndAlso Not Produccion.ChangeTracker.ChangeTrackingEnabled Then
                Produccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCargaDescargaTransporte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.NewItems
                item.PlanCargaDescargaHorno = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.OldItems
                If ReferenceEquals(item.PlanCargaDescargaHorno, Me) Then
                    item.PlanCargaDescargaHorno = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
