'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(DatosLaborales))>
Partial Public Class DatosLaboralesHorario
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared per_Id As string = "per_Id"
				public shared dah_item As string = "dah_item"
				public shared dah_Ingreso As string = "dah_Ingreso"
				public shared dah_Salida As string = "dah_Salida"
				public shared dah_Observaciones As string = "dah_Observaciones"
				public shared dah_estado As string = "dah_estado"
		    End Structure
	



    <DataMember()>
    Public Property per_Id() As String
        Get
            Return _per_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'per_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If DatosLaborales IsNot Nothing AndAlso Not Equals(DatosLaborales.per_Id, value) Then
                        DatosLaborales = Nothing
                    End If
                End If
                _per_Id = value
                OnPropertyChanged("per_Id")
            End If
        End Set
    End Property

    Private _per_Id As String

    <DataMember()>
    Public Property dah_item() As String
        Get
            Return _dah_item
        End Get
        Set(ByVal value As String)
            If Not Equals(_dah_item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'dah_item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dah_item = value
                OnPropertyChanged("dah_item")
            End If
        End Set
    End Property

    Private _dah_item As String

    <DataMember()>
    Public Property dah_Ingreso() As Nullable(Of System.TimeSpan)
        Get
            Return _dah_Ingreso
        End Get
        Set(ByVal value As Nullable(Of System.TimeSpan))
            If Not Equals(_dah_Ingreso, value) Then
                _dah_Ingreso = value
                OnPropertyChanged("dah_Ingreso")
            End If
        End Set
    End Property

    Private _dah_Ingreso As Nullable(Of System.TimeSpan)

    <DataMember()>
    Public Property dah_Salida() As Nullable(Of System.TimeSpan)
        Get
            Return _dah_Salida
        End Get
        Set(ByVal value As Nullable(Of System.TimeSpan))
            If Not Equals(_dah_Salida, value) Then
                _dah_Salida = value
                OnPropertyChanged("dah_Salida")
            End If
        End Set
    End Property

    Private _dah_Salida As Nullable(Of System.TimeSpan)

    <DataMember()>
    Public Property dah_Observaciones() As String
        Get
            Return _dah_Observaciones
        End Get
        Set(ByVal value As String)
            If Not Equals(_dah_Observaciones, value) Then
                _dah_Observaciones = value
                OnPropertyChanged("dah_Observaciones")
            End If
        End Set
    End Property

    Private _dah_Observaciones As String

    <DataMember()>
    Public Property dah_estado() As Nullable(Of Boolean)
        Get
            Return _dah_estado
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dah_estado, value) Then
                _dah_estado = value
                OnPropertyChanged("dah_estado")
            End If
        End Set
    End Property

    Private _dah_estado As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property DatosLaborales() As DatosLaborales
        Get
            Return _datosLaborales
        End Get
        Set(ByVal value As DatosLaborales)
            If _datosLaborales IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relación de identificación por lo que el extremo principal no se puede cambiar si ya está establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(per_Id, value.per_Id) Then
                        Throw New InvalidOperationException("El extremo principal de una relación de identificación solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As DatosLaborales = _datosLaborales
                _datosLaborales = value
                FixupDatosLaborales(previousValue)
                OnNavigationPropertyChanged("DatosLaborales")
            End If
        End Set
    End Property

    Private _datosLaborales As DatosLaborales


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        DatosLaborales = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupDatosLaborales(ByVal previousValue As DatosLaborales)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DatosLaboralesHorario.Contains(Me) Then
            previousValue.DatosLaboralesHorario.Remove(Me)
        End If

        If DatosLaborales IsNot Nothing Then
            If Not DatosLaborales.DatosLaboralesHorario.Contains(Me) Then
                DatosLaborales.DatosLaboralesHorario.Add(Me)
            End If

            per_Id = DatosLaborales.per_Id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DatosLaborales") AndAlso
                ChangeTracker.OriginalValues("DatosLaborales") Is DatosLaborales Then
                ChangeTracker.OriginalValues.Remove("DatosLaborales")
            Else
                ChangeTracker.RecordOriginalValue("DatosLaborales", previousValue)
            End If
            If DatosLaborales IsNot Nothing AndAlso Not DatosLaborales.ChangeTracker.ChangeTrackingEnabled Then
                DatosLaborales.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
