'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ControlParadaArticuloDetalle))>
<KnownType(GetType(ControlParadaDetalle))>
<KnownType(GetType(ControlParadaMoldeDetalle))>
<KnownType(GetType(Produccion))>
<KnownType(GetType(Personas))>
Partial Public Class ControlParada
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CPA_ID As string = "CPA_ID"
				public shared PRO_ID As string = "PRO_ID"
				public shared PER_ID_OPERADOR As string = "PER_ID_OPERADOR"
				public shared CPA_FECHA As string = "CPA_FECHA"
				public shared CPA_HORA_INICIO As string = "CPA_HORA_INICIO"
				public shared CPA_HORA_FINAL As string = "CPA_HORA_FINAL"
				public shared PERS_ID_ING1 As string = "PERS_ID_ING1"
				public shared PERS_ID_ING2 As string = "PERS_ID_ING2"
				public shared CPA_OBSERVACION As string = "CPA_OBSERVACION"
				public shared USU_ID As string = "USU_ID"
				public shared CPA_FEC_GRAB As string = "CPA_FEC_GRAB"
				public shared CPA_ESTADO As string = "CPA_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property CPA_ID() As Integer
        Get
            Return _cPA_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cPA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CPA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cPA_ID = value
                OnPropertyChanged("CPA_ID")
            End If
        End Set
    End Property

    Private _cPA_ID As Integer

    <DataMember()>
    Public Property PRO_ID() As Nullable(Of Integer)
        Get
            Return _pRO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pRO_ID, value) Then
                ChangeTracker.RecordOriginalValue("PRO_ID", _pRO_ID)
                If Not IsDeserializing Then
                    If Produccion IsNot Nothing AndAlso Not Equals(Produccion.PRO_ID, value) Then
                        Produccion = Nothing
                    End If
                End If
                _pRO_ID = value
                OnPropertyChanged("PRO_ID")
            End If
        End Set
    End Property

    Private _pRO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PER_ID_OPERADOR() As String
        Get
            Return _pER_ID_OPERADOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_OPERADOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_OPERADOR", _pER_ID_OPERADOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_OPERADOR = value
                OnPropertyChanged("PER_ID_OPERADOR")
            End If
        End Set
    End Property

    Private _pER_ID_OPERADOR As String

    <DataMember()>
    Public Property CPA_FECHA() As Nullable(Of Date)
        Get
            Return _cPA_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cPA_FECHA, value) Then
                _cPA_FECHA = value
                OnPropertyChanged("CPA_FECHA")
            End If
        End Set
    End Property

    Private _cPA_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property CPA_HORA_INICIO() As Nullable(Of Decimal)
        Get
            Return _cPA_HORA_INICIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cPA_HORA_INICIO, value) Then
                _cPA_HORA_INICIO = value
                OnPropertyChanged("CPA_HORA_INICIO")
            End If
        End Set
    End Property

    Private _cPA_HORA_INICIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property CPA_HORA_FINAL() As Nullable(Of Decimal)
        Get
            Return _cPA_HORA_FINAL
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cPA_HORA_FINAL, value) Then
                _cPA_HORA_FINAL = value
                OnPropertyChanged("CPA_HORA_FINAL")
            End If
        End Set
    End Property

    Private _cPA_HORA_FINAL As Nullable(Of Decimal)

    <DataMember()>
    Public Property PERS_ID_ING1() As String
        Get
            Return _pERS_ID_ING1
        End Get
        Set(ByVal value As String)
            If Not Equals(_pERS_ID_ING1, value) Then
                ChangeTracker.RecordOriginalValue("PERS_ID_ING1", _pERS_ID_ING1)
                If Not IsDeserializing Then
                    If Personas1 IsNot Nothing AndAlso Not Equals(Personas1.PER_ID, value) Then
                        Personas1 = Nothing
                    End If
                End If
                _pERS_ID_ING1 = value
                OnPropertyChanged("PERS_ID_ING1")
            End If
        End Set
    End Property

    Private _pERS_ID_ING1 As String

    <DataMember()>
    Public Property PERS_ID_ING2() As String
        Get
            Return _pERS_ID_ING2
        End Get
        Set(ByVal value As String)
            If Not Equals(_pERS_ID_ING2, value) Then
                ChangeTracker.RecordOriginalValue("PERS_ID_ING2", _pERS_ID_ING2)
                If Not IsDeserializing Then
                    If Personas2 IsNot Nothing AndAlso Not Equals(Personas2.PER_ID, value) Then
                        Personas2 = Nothing
                    End If
                End If
                _pERS_ID_ING2 = value
                OnPropertyChanged("PERS_ID_ING2")
            End If
        End Set
    End Property

    Private _pERS_ID_ING2 As String

    <DataMember()>
    Public Property CPA_OBSERVACION() As String
        Get
            Return _cPA_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cPA_OBSERVACION, value) Then
                _cPA_OBSERVACION = value
                OnPropertyChanged("CPA_OBSERVACION")
            End If
        End Set
    End Property

    Private _cPA_OBSERVACION As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CPA_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _cPA_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cPA_FEC_GRAB, value) Then
                _cPA_FEC_GRAB = value
                OnPropertyChanged("CPA_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cPA_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property CPA_ESTADO() As Nullable(Of Boolean)
        Get
            Return _cPA_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_cPA_ESTADO, value) Then
                _cPA_ESTADO = value
                OnPropertyChanged("CPA_ESTADO")
            End If
        End Set
    End Property

    Private _cPA_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property ControlParadaArticuloDetalle() As TrackableCollection(Of ControlParadaArticuloDetalle)
        Get
            If _controlParadaArticuloDetalle Is Nothing Then
                _controlParadaArticuloDetalle = New TrackableCollection(Of ControlParadaArticuloDetalle)
                AddHandler _controlParadaArticuloDetalle.CollectionChanged, AddressOf FixupControlParadaArticuloDetalle
            End If
            Return _controlParadaArticuloDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of ControlParadaArticuloDetalle))
            If Not Object.ReferenceEquals(_controlParadaArticuloDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _controlParadaArticuloDetalle IsNot Nothing Then
                    RemoveHandler _controlParadaArticuloDetalle.CollectionChanged, AddressOf FixupControlParadaArticuloDetalle
                End If
                _controlParadaArticuloDetalle = value
                If _controlParadaArticuloDetalle IsNot Nothing Then
                    AddHandler _controlParadaArticuloDetalle.CollectionChanged, AddressOf FixupControlParadaArticuloDetalle
                End If
                OnNavigationPropertyChanged("ControlParadaArticuloDetalle")
            End If
        End Set
    End Property

    Private _controlParadaArticuloDetalle As TrackableCollection(Of ControlParadaArticuloDetalle)

    <DataMember()>
    Public Property ControlParadaDetalle() As TrackableCollection(Of ControlParadaDetalle)
        Get
            If _controlParadaDetalle Is Nothing Then
                _controlParadaDetalle = New TrackableCollection(Of ControlParadaDetalle)
                AddHandler _controlParadaDetalle.CollectionChanged, AddressOf FixupControlParadaDetalle
            End If
            Return _controlParadaDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of ControlParadaDetalle))
            If Not Object.ReferenceEquals(_controlParadaDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _controlParadaDetalle IsNot Nothing Then
                    RemoveHandler _controlParadaDetalle.CollectionChanged, AddressOf FixupControlParadaDetalle
                End If
                _controlParadaDetalle = value
                If _controlParadaDetalle IsNot Nothing Then
                    AddHandler _controlParadaDetalle.CollectionChanged, AddressOf FixupControlParadaDetalle
                End If
                OnNavigationPropertyChanged("ControlParadaDetalle")
            End If
        End Set
    End Property

    Private _controlParadaDetalle As TrackableCollection(Of ControlParadaDetalle)

    <DataMember()>
    Public Property ControlParadaMoldeDetalle() As TrackableCollection(Of ControlParadaMoldeDetalle)
        Get
            If _controlParadaMoldeDetalle Is Nothing Then
                _controlParadaMoldeDetalle = New TrackableCollection(Of ControlParadaMoldeDetalle)
                AddHandler _controlParadaMoldeDetalle.CollectionChanged, AddressOf FixupControlParadaMoldeDetalle
            End If
            Return _controlParadaMoldeDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of ControlParadaMoldeDetalle))
            If Not Object.ReferenceEquals(_controlParadaMoldeDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _controlParadaMoldeDetalle IsNot Nothing Then
                    RemoveHandler _controlParadaMoldeDetalle.CollectionChanged, AddressOf FixupControlParadaMoldeDetalle
                End If
                _controlParadaMoldeDetalle = value
                If _controlParadaMoldeDetalle IsNot Nothing Then
                    AddHandler _controlParadaMoldeDetalle.CollectionChanged, AddressOf FixupControlParadaMoldeDetalle
                End If
                OnNavigationPropertyChanged("ControlParadaMoldeDetalle")
            End If
        End Set
    End Property

    Private _controlParadaMoldeDetalle As TrackableCollection(Of ControlParadaMoldeDetalle)

    <DataMember()>
    Public Property Produccion() As Produccion
        Get
            Return _produccion
        End Get
        Set(ByVal value As Produccion)
            If _produccion IsNot value Then
                Dim previousValue As Produccion = _produccion
                _produccion = value
                FixupProduccion(previousValue)
                OnNavigationPropertyChanged("Produccion")
            End If
        End Set
    End Property

    Private _produccion As Produccion


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Personas1() As Personas
        Get
            Return _personas1
        End Get
        Set(ByVal value As Personas)
            If _personas1 IsNot value Then
                Dim previousValue As Personas = _personas1
                _personas1 = value
                FixupPersonas1(previousValue)
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As Personas


    <DataMember()>
    Public Property Personas2() As Personas
        Get
            Return _personas2
        End Get
        Set(ByVal value As Personas)
            If _personas2 IsNot value Then
                Dim previousValue As Personas = _personas2
                _personas2 = value
                FixupPersonas2(previousValue)
                OnNavigationPropertyChanged("Personas2")
            End If
        End Set
    End Property

    Private _personas2 As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ControlParadaArticuloDetalle.Clear()
        ControlParadaDetalle.Clear()
        ControlParadaMoldeDetalle.Clear()
        Produccion = Nothing
        Personas = Nothing
        Personas1 = Nothing
        Personas2 = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupProduccion(ByVal previousValue As Produccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Produccion IsNot Nothing Then
            PRO_ID = Produccion.PRO_ID
        ElseIf Not skipKeys Then
            PRO_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Produccion") AndAlso
                ChangeTracker.OriginalValues("Produccion") Is Produccion Then
                ChangeTracker.OriginalValues.Remove("Produccion")
            Else
                ChangeTracker.RecordOriginalValue("Produccion", previousValue)
            End If
            If Produccion IsNot Nothing AndAlso Not Produccion.ChangeTracker.ChangeTrackingEnabled Then
                Produccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_OPERADOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_OPERADOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas1 IsNot Nothing Then
            PERS_ID_ING1 = Personas1.PER_ID
        ElseIf Not skipKeys Then
            PERS_ID_ING1 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas1") AndAlso
                ChangeTracker.OriginalValues("Personas1") Is Personas1 Then
                ChangeTracker.OriginalValues.Remove("Personas1")
            Else
                ChangeTracker.RecordOriginalValue("Personas1", previousValue)
            End If
            If Personas1 IsNot Nothing AndAlso Not Personas1.ChangeTracker.ChangeTrackingEnabled Then
                Personas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas2(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas2 IsNot Nothing Then
            PERS_ID_ING2 = Personas2.PER_ID
        ElseIf Not skipKeys Then
            PERS_ID_ING2 = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas2") AndAlso
                ChangeTracker.OriginalValues("Personas2") Is Personas2 Then
                ChangeTracker.OriginalValues.Remove("Personas2")
            Else
                ChangeTracker.RecordOriginalValue("Personas2", previousValue)
            End If
            If Personas2 IsNot Nothing AndAlso Not Personas2.ChangeTracker.ChangeTrackingEnabled Then
                Personas2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupControlParadaArticuloDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ControlParadaArticuloDetalle In e.NewItems
                item.CPA_ID = CPA_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ControlParadaArticuloDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ControlParadaArticuloDetalle In e.OldItems
                item.CPA_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ControlParadaArticuloDetalle", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupControlParadaDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ControlParadaDetalle In e.NewItems
                item.CPA_ID = CPA_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ControlParadaDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ControlParadaDetalle In e.OldItems
                item.CPA_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ControlParadaDetalle", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupControlParadaMoldeDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ControlParadaMoldeDetalle In e.NewItems
                item.CPA_ID = CPA_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ControlParadaMoldeDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ControlParadaMoldeDetalle In e.OldItems
                item.CPA_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ControlParadaMoldeDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
