'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Cats))>
<KnownType(GetType(Personas))>
Partial Public Class ControlMezclaMezclaDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DMM_ID As string = "DMM_ID"
				public shared CME_ID As string = "CME_ID"
				public shared CAT_ID As string = "CAT_ID"
				public shared PER_ID_OPERADOR As string = "PER_ID_OPERADOR"
				public shared DMM_CANTIDAD As string = "DMM_CANTIDAD"
				public shared DMM_HORA_INICIO As string = "DMM_HORA_INICIO"
				public shared DMM_HORA_FINAL As string = "DMM_HORA_FINAL"
				public shared CAT_VOL_PALA As string = "CAT_VOL_PALA"
				public shared DMM_TOTAL_LADRILLO As string = "DMM_TOTAL_LADRILLO"
				public shared DMM_CANTIDAD_BRUTA As string = "DMM_CANTIDAD_BRUTA"
		    End Structure
	



    <DataMember()>
    Public Property DMM_ID() As Integer
        Get
            Return _dMM_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dMM_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DMM_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dMM_ID = value
                OnPropertyChanged("DMM_ID")
            End If
        End Set
    End Property

    Private _dMM_ID As Integer

    <DataMember()>
    Public Property CME_ID() As Nullable(Of Integer)
        Get
            Return _cME_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cME_ID, value) Then
                ChangeTracker.RecordOriginalValue("CME_ID", _cME_ID)
                _cME_ID = value
                OnPropertyChanged("CME_ID")
            End If
        End Set
    End Property

    Private _cME_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property CAT_ID() As Nullable(Of Integer)
        Get
            Return _cAT_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_cAT_ID, value) Then
                ChangeTracker.RecordOriginalValue("CAT_ID", _cAT_ID)
                If Not IsDeserializing Then
                    If Cats IsNot Nothing AndAlso Not Equals(Cats.CAT_ID, value) Then
                        Cats = Nothing
                    End If
                End If
                _cAT_ID = value
                OnPropertyChanged("CAT_ID")
            End If
        End Set
    End Property

    Private _cAT_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PER_ID_OPERADOR() As String
        Get
            Return _pER_ID_OPERADOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_OPERADOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_OPERADOR", _pER_ID_OPERADOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_OPERADOR = value
                OnPropertyChanged("PER_ID_OPERADOR")
            End If
        End Set
    End Property

    Private _pER_ID_OPERADOR As String

    <DataMember()>
    Public Property DMM_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _dMM_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMM_CANTIDAD, value) Then
                _dMM_CANTIDAD = value
                OnPropertyChanged("DMM_CANTIDAD")
            End If
        End Set
    End Property

    Private _dMM_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property DMM_HORA_INICIO() As Nullable(Of Decimal)
        Get
            Return _dMM_HORA_INICIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMM_HORA_INICIO, value) Then
                _dMM_HORA_INICIO = value
                OnPropertyChanged("DMM_HORA_INICIO")
            End If
        End Set
    End Property

    Private _dMM_HORA_INICIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property DMM_HORA_FINAL() As Nullable(Of Decimal)
        Get
            Return _dMM_HORA_FINAL
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMM_HORA_FINAL, value) Then
                _dMM_HORA_FINAL = value
                OnPropertyChanged("DMM_HORA_FINAL")
            End If
        End Set
    End Property

    Private _dMM_HORA_FINAL As Nullable(Of Decimal)

    <DataMember()>
    Public Property CAT_VOL_PALA() As Nullable(Of Decimal)
        Get
            Return _cAT_VOL_PALA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cAT_VOL_PALA, value) Then
                _cAT_VOL_PALA = value
                OnPropertyChanged("CAT_VOL_PALA")
            End If
        End Set
    End Property

    Private _cAT_VOL_PALA As Nullable(Of Decimal)

    <DataMember()>
    Public Property DMM_TOTAL_LADRILLO() As Nullable(Of Integer)
        Get
            Return _dMM_TOTAL_LADRILLO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dMM_TOTAL_LADRILLO, value) Then
                _dMM_TOTAL_LADRILLO = value
                OnPropertyChanged("DMM_TOTAL_LADRILLO")
            End If
        End Set
    End Property

    Private _dMM_TOTAL_LADRILLO As Nullable(Of Integer)

    <DataMember()>
    Public Property DMM_CANTIDAD_BRUTA() As Nullable(Of Decimal)
        Get
            Return _dMM_CANTIDAD_BRUTA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dMM_CANTIDAD_BRUTA, value) Then
                _dMM_CANTIDAD_BRUTA = value
                OnPropertyChanged("DMM_CANTIDAD_BRUTA")
            End If
        End Set
    End Property

    Private _dMM_CANTIDAD_BRUTA As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Cats() As Cats
        Get
            Return _cats
        End Get
        Set(ByVal value As Cats)
            If _cats IsNot value Then
                Dim previousValue As Cats = _cats
                _cats = value
                FixupCats(previousValue)
                OnNavigationPropertyChanged("Cats")
            End If
        End Set
    End Property

    Private _cats As Cats


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Cats = Nothing
        Personas = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCats(ByVal previousValue As Cats, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Cats IsNot Nothing Then
            CAT_ID = Cats.CAT_ID
        ElseIf Not skipKeys Then
            CAT_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Cats") AndAlso
                ChangeTracker.OriginalValues("Cats") Is Cats Then
                ChangeTracker.OriginalValues.Remove("Cats")
            Else
                ChangeTracker.RecordOriginalValue("Cats", previousValue)
            End If
            If Cats IsNot Nothing AndAlso Not Cats.ChangeTracker.ChangeTrackingEnabled Then
                Cats.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_OPERADOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_OPERADOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
