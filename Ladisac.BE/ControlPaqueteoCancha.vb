'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Cancha))>
<KnownType(GetType(ControlPaqueteo))>
Partial Public Class ControlPaqueteoCancha
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PQC_ID As string = "PQC_ID"
				public shared PQT_ID As string = "PQT_ID"
				public shared CAN_ID As string = "CAN_ID"
		    End Structure
	



    <DataMember()>
    Public Property PQC_ID() As Integer
        Get
            Return _pQC_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pQC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PQC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pQC_ID = value
                OnPropertyChanged("PQC_ID")
            End If
        End Set
    End Property

    Private _pQC_ID As Integer

    <DataMember()>
    Public Property PQT_ID() As Integer
        Get
            Return _pQT_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_pQT_ID, value) Then
                ChangeTracker.RecordOriginalValue("PQT_ID", _pQT_ID)
                If Not IsDeserializing Then
                    If ControlPaqueteo IsNot Nothing AndAlso Not Equals(ControlPaqueteo.PQT_ID, value) Then
                        ControlPaqueteo = Nothing
                    End If
                End If
                _pQT_ID = value
                OnPropertyChanged("PQT_ID")
            End If
        End Set
    End Property

    Private _pQT_ID As Integer

    <DataMember()>
    Public Property CAN_ID() As Integer
        Get
            Return _cAN_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cAN_ID, value) Then
                ChangeTracker.RecordOriginalValue("CAN_ID", _cAN_ID)
                If Not IsDeserializing Then
                    If Cancha IsNot Nothing AndAlso Not Equals(Cancha.CAN_ID, value) Then
                        Cancha = Nothing
                    End If
                End If
                _cAN_ID = value
                OnPropertyChanged("CAN_ID")
            End If
        End Set
    End Property

    Private _cAN_ID As Integer

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Cancha() As Cancha
        Get
            Return _cancha
        End Get
        Set(ByVal value As Cancha)
            If _cancha IsNot value Then
                Dim previousValue As Cancha = _cancha
                _cancha = value
                FixupCancha(previousValue)
                OnNavigationPropertyChanged("Cancha")
            End If
        End Set
    End Property

    Private _cancha As Cancha


    <DataMember()>
    Public Property ControlPaqueteo() As ControlPaqueteo
        Get
            Return _controlPaqueteo
        End Get
        Set(ByVal value As ControlPaqueteo)
            If _controlPaqueteo IsNot value Then
                Dim previousValue As ControlPaqueteo = _controlPaqueteo
                _controlPaqueteo = value
                FixupControlPaqueteo(previousValue)
                OnNavigationPropertyChanged("ControlPaqueteo")
            End If
        End Set
    End Property

    Private _controlPaqueteo As ControlPaqueteo


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Cancha = Nothing
        ControlPaqueteo = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCancha(ByVal previousValue As Cancha)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ControlPaqueteoCancha.Contains(Me) Then
            previousValue.ControlPaqueteoCancha.Remove(Me)
        End If

        If Cancha IsNot Nothing Then
            If Not Cancha.ControlPaqueteoCancha.Contains(Me) Then
                Cancha.ControlPaqueteoCancha.Add(Me)
            End If

            CAN_ID = Cancha.CAN_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Cancha") AndAlso
                ChangeTracker.OriginalValues("Cancha") Is Cancha Then
                ChangeTracker.OriginalValues.Remove("Cancha")
            Else
                ChangeTracker.RecordOriginalValue("Cancha", previousValue)
            End If
            If Cancha IsNot Nothing AndAlso Not Cancha.ChangeTracker.ChangeTrackingEnabled Then
                Cancha.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupControlPaqueteo(ByVal previousValue As ControlPaqueteo)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ControlPaqueteoCancha.Contains(Me) Then
            previousValue.ControlPaqueteoCancha.Remove(Me)
        End If

        If ControlPaqueteo IsNot Nothing Then
            If Not ControlPaqueteo.ControlPaqueteoCancha.Contains(Me) Then
                ControlPaqueteo.ControlPaqueteoCancha.Add(Me)
            End If

            PQT_ID = ControlPaqueteo.PQT_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ControlPaqueteo") AndAlso
                ChangeTracker.OriginalValues("ControlPaqueteo") Is ControlPaqueteo Then
                ChangeTracker.OriginalValues.Remove("ControlPaqueteo")
            Else
                ChangeTracker.RecordOriginalValue("ControlPaqueteo", previousValue)
            End If
            If ControlPaqueteo IsNot Nothing AndAlso Not ControlPaqueteo.ChangeTracker.ChangeTrackingEnabled Then
                ControlPaqueteo.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
