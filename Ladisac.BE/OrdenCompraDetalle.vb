'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Articulos))>
<KnownType(GetType(DocuMovimientoDetalle))>
<KnownType(GetType(ProcesoCompraDetalle))>
<KnownType(GetType(CuentasContables))>
<KnownType(GetType(OrdenCompra))>
Partial Public Class OrdenCompraDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared OCD_ID As string = "OCD_ID"
				public shared OCO_ID As string = "OCO_ID"
				public shared ORD_ID As string = "ORD_ID"
				public shared ART_ID As string = "ART_ID"
				public shared OCD_CANTIDAD As string = "OCD_CANTIDAD"
				public shared OCD_CANTIDAD_INGRESADA As string = "OCD_CANTIDAD_INGRESADA"
				public shared OCD_DESCUENTO As string = "OCD_DESCUENTO"
				public shared OCD_PRECIO_UNITARIO As string = "OCD_PRECIO_UNITARIO"
				public shared OCD_IGV As string = "OCD_IGV"
				public shared OCD_CONTRAVALOR As string = "OCD_CONTRAVALOR"
				public shared OCD_OBSERVACIONES As string = "OCD_OBSERVACIONES"
				public shared OCD_INCLUYE_MATERIAL As string = "OCD_INCLUYE_MATERIAL"
				public shared OCD_PARTE_MATERIAL As string = "OCD_PARTE_MATERIAL"
				public shared OCD_OTROS1 As string = "OCD_OTROS1"
				public shared OCD_OTROS2 As string = "OCD_OTROS2"
				public shared OCD_OTROS3 As string = "OCD_OTROS3"
				public shared PCD_ID As string = "PCD_ID"
				public shared OCD_DESCRIPCION As string = "OCD_DESCRIPCION"
				public shared USU_ID_AUT_2 As string = "USU_ID_AUT_2"
				public shared OCD_FEC_AUT_2 As string = "OCD_FEC_AUT_2"
				public shared USU_ID_AUT_3 As string = "USU_ID_AUT_3"
				public shared OCD_FEC_AUT_3 As string = "OCD_FEC_AUT_3"
				public shared USU_ID_AUT_4 As string = "USU_ID_AUT_4"
				public shared OCD_FEC_AUT_4 As string = "OCD_FEC_AUT_4"
				public shared CUC_ID As string = "CUC_ID"
		    End Structure
	



    <DataMember()>
    Public Property OCD_ID() As Integer
        Get
            Return _oCD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_oCD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'OCD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _oCD_ID = value
                OnPropertyChanged("OCD_ID")
            End If
        End Set
    End Property

    Private _oCD_ID As Integer

    <DataMember()>
    Public Property OCO_ID() As Nullable(Of Integer)
        Get
            Return _oCO_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oCO_ID, value) Then
                ChangeTracker.RecordOriginalValue("OCO_ID", _oCO_ID)
                If Not IsDeserializing Then
                    If OrdenCompra IsNot Nothing AndAlso Not Equals(OrdenCompra.OCO_ID, value) Then
                        OrdenCompra = Nothing
                    End If
                End If
                _oCO_ID = value
                OnPropertyChanged("OCO_ID")
            End If
        End Set
    End Property

    Private _oCO_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ORD_ID() As Nullable(Of Integer)
        Get
            Return _oRD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oRD_ID, value) Then
                ChangeTracker.RecordOriginalValue("ORD_ID", _oRD_ID)
                _oRD_ID = value
                OnPropertyChanged("ORD_ID")
            End If
        End Set
    End Property

    Private _oRD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property OCD_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _oCD_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_CANTIDAD, value) Then
                _oCD_CANTIDAD = value
                OnPropertyChanged("OCD_CANTIDAD")
            End If
        End Set
    End Property

    Private _oCD_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_CANTIDAD_INGRESADA() As Nullable(Of Decimal)
        Get
            Return _oCD_CANTIDAD_INGRESADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_CANTIDAD_INGRESADA, value) Then
                _oCD_CANTIDAD_INGRESADA = value
                OnPropertyChanged("OCD_CANTIDAD_INGRESADA")
            End If
        End Set
    End Property

    Private _oCD_CANTIDAD_INGRESADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_DESCUENTO() As Nullable(Of Decimal)
        Get
            Return _oCD_DESCUENTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_DESCUENTO, value) Then
                _oCD_DESCUENTO = value
                OnPropertyChanged("OCD_DESCUENTO")
            End If
        End Set
    End Property

    Private _oCD_DESCUENTO As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_PRECIO_UNITARIO() As Nullable(Of Decimal)
        Get
            Return _oCD_PRECIO_UNITARIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_PRECIO_UNITARIO, value) Then
                _oCD_PRECIO_UNITARIO = value
                OnPropertyChanged("OCD_PRECIO_UNITARIO")
            End If
        End Set
    End Property

    Private _oCD_PRECIO_UNITARIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_IGV() As Nullable(Of Decimal)
        Get
            Return _oCD_IGV
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_IGV, value) Then
                _oCD_IGV = value
                OnPropertyChanged("OCD_IGV")
            End If
        End Set
    End Property

    Private _oCD_IGV As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_CONTRAVALOR() As Nullable(Of Decimal)
        Get
            Return _oCD_CONTRAVALOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_CONTRAVALOR, value) Then
                _oCD_CONTRAVALOR = value
                OnPropertyChanged("OCD_CONTRAVALOR")
            End If
        End Set
    End Property

    Private _oCD_CONTRAVALOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_OBSERVACIONES() As String
        Get
            Return _oCD_OBSERVACIONES
        End Get
        Set(ByVal value As String)
            If Not Equals(_oCD_OBSERVACIONES, value) Then
                _oCD_OBSERVACIONES = value
                OnPropertyChanged("OCD_OBSERVACIONES")
            End If
        End Set
    End Property

    Private _oCD_OBSERVACIONES As String

    <DataMember()>
    Public Property OCD_INCLUYE_MATERIAL() As Nullable(Of Boolean)
        Get
            Return _oCD_INCLUYE_MATERIAL
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_oCD_INCLUYE_MATERIAL, value) Then
                _oCD_INCLUYE_MATERIAL = value
                OnPropertyChanged("OCD_INCLUYE_MATERIAL")
            End If
        End Set
    End Property

    Private _oCD_INCLUYE_MATERIAL As Nullable(Of Boolean)

    <DataMember()>
    Public Property OCD_PARTE_MATERIAL() As Nullable(Of Boolean)
        Get
            Return _oCD_PARTE_MATERIAL
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_oCD_PARTE_MATERIAL, value) Then
                _oCD_PARTE_MATERIAL = value
                OnPropertyChanged("OCD_PARTE_MATERIAL")
            End If
        End Set
    End Property

    Private _oCD_PARTE_MATERIAL As Nullable(Of Boolean)

    <DataMember()>
    Public Property OCD_OTROS1() As Nullable(Of Decimal)
        Get
            Return _oCD_OTROS1
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_OTROS1, value) Then
                _oCD_OTROS1 = value
                OnPropertyChanged("OCD_OTROS1")
            End If
        End Set
    End Property

    Private _oCD_OTROS1 As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_OTROS2() As Nullable(Of Decimal)
        Get
            Return _oCD_OTROS2
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_OTROS2, value) Then
                _oCD_OTROS2 = value
                OnPropertyChanged("OCD_OTROS2")
            End If
        End Set
    End Property

    Private _oCD_OTROS2 As Nullable(Of Decimal)

    <DataMember()>
    Public Property OCD_OTROS3() As Nullable(Of Decimal)
        Get
            Return _oCD_OTROS3
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_oCD_OTROS3, value) Then
                _oCD_OTROS3 = value
                OnPropertyChanged("OCD_OTROS3")
            End If
        End Set
    End Property

    Private _oCD_OTROS3 As Nullable(Of Decimal)

    <DataMember()>
    Public Property PCD_ID() As Nullable(Of Integer)
        Get
            Return _pCD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pCD_ID, value) Then
                ChangeTracker.RecordOriginalValue("PCD_ID", _pCD_ID)
                If Not IsDeserializing Then
                    If ProcesoCompraDetalle1 IsNot Nothing AndAlso Not Equals(ProcesoCompraDetalle1.PCD_ID, value) Then
                        ProcesoCompraDetalle1 = Nothing
                    End If
                End If
                _pCD_ID = value
                OnPropertyChanged("PCD_ID")
            End If
        End Set
    End Property

    Private _pCD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property OCD_DESCRIPCION() As String
        Get
            Return _oCD_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_oCD_DESCRIPCION, value) Then
                _oCD_DESCRIPCION = value
                OnPropertyChanged("OCD_DESCRIPCION")
            End If
        End Set
    End Property

    Private _oCD_DESCRIPCION As String

    <DataMember()>
    Public Property USU_ID_AUT_2() As String
        Get
            Return _uSU_ID_AUT_2
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_2, value) Then
                _uSU_ID_AUT_2 = value
                OnPropertyChanged("USU_ID_AUT_2")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_2 As String

    <DataMember()>
    Public Property OCD_FEC_AUT_2() As Nullable(Of Date)
        Get
            Return _oCD_FEC_AUT_2
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oCD_FEC_AUT_2, value) Then
                _oCD_FEC_AUT_2 = value
                OnPropertyChanged("OCD_FEC_AUT_2")
            End If
        End Set
    End Property

    Private _oCD_FEC_AUT_2 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_3() As String
        Get
            Return _uSU_ID_AUT_3
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_3, value) Then
                _uSU_ID_AUT_3 = value
                OnPropertyChanged("USU_ID_AUT_3")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_3 As String

    <DataMember()>
    Public Property OCD_FEC_AUT_3() As Nullable(Of Date)
        Get
            Return _oCD_FEC_AUT_3
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oCD_FEC_AUT_3, value) Then
                _oCD_FEC_AUT_3 = value
                OnPropertyChanged("OCD_FEC_AUT_3")
            End If
        End Set
    End Property

    Private _oCD_FEC_AUT_3 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_4() As String
        Get
            Return _uSU_ID_AUT_4
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_4, value) Then
                _uSU_ID_AUT_4 = value
                OnPropertyChanged("USU_ID_AUT_4")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_4 As String

    <DataMember()>
    Public Property OCD_FEC_AUT_4() As Nullable(Of Date)
        Get
            Return _oCD_FEC_AUT_4
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_oCD_FEC_AUT_4, value) Then
                _oCD_FEC_AUT_4 = value
                OnPropertyChanged("OCD_FEC_AUT_4")
            End If
        End Set
    End Property

    Private _oCD_FEC_AUT_4 As Nullable(Of Date)

    <DataMember()>
    Public Property CUC_ID() As String
        Get
            Return _cUC_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID", _cUC_ID)
                If Not IsDeserializing Then
                    If CuentasContables IsNot Nothing AndAlso Not Equals(CuentasContables.CUC_ID, value) Then
                        CuentasContables = Nothing
                    End If
                End If
                _cUC_ID = value
                OnPropertyChanged("CUC_ID")
            End If
        End Set
    End Property

    Private _cUC_ID As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


    <DataMember()>
    Public Property DocuMovimientoDetalle() As TrackableCollection(Of DocuMovimientoDetalle)
        Get
            If _docuMovimientoDetalle Is Nothing Then
                _docuMovimientoDetalle = New TrackableCollection(Of DocuMovimientoDetalle)
                AddHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
            End If
            Return _docuMovimientoDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of DocuMovimientoDetalle))
            If Not Object.ReferenceEquals(_docuMovimientoDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuMovimientoDetalle IsNot Nothing Then
                    RemoveHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
                End If
                _docuMovimientoDetalle = value
                If _docuMovimientoDetalle IsNot Nothing Then
                    AddHandler _docuMovimientoDetalle.CollectionChanged, AddressOf FixupDocuMovimientoDetalle
                End If
                OnNavigationPropertyChanged("DocuMovimientoDetalle")
            End If
        End Set
    End Property

    Private _docuMovimientoDetalle As TrackableCollection(Of DocuMovimientoDetalle)

    <DataMember()>
    Public Property ProcesoCompraDetalle1() As ProcesoCompraDetalle
        Get
            Return _procesoCompraDetalle1
        End Get
        Set(ByVal value As ProcesoCompraDetalle)
            If _procesoCompraDetalle1 IsNot value Then
                Dim previousValue As ProcesoCompraDetalle = _procesoCompraDetalle1
                _procesoCompraDetalle1 = value
                FixupProcesoCompraDetalle1(previousValue)
                OnNavigationPropertyChanged("ProcesoCompraDetalle1")
            End If
        End Set
    End Property

    Private _procesoCompraDetalle1 As ProcesoCompraDetalle


    <DataMember()>
    Public Property CuentasContables() As CuentasContables
        Get
            Return _cuentasContables
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables
                _cuentasContables = value
                FixupCuentasContables(previousValue)
                OnNavigationPropertyChanged("CuentasContables")
            End If
        End Set
    End Property

    Private _cuentasContables As CuentasContables


    <DataMember()>
    Public Property OrdenCompra() As OrdenCompra
        Get
            Return _ordenCompra
        End Get
        Set(ByVal value As OrdenCompra)
            If _ordenCompra IsNot value Then
                Dim previousValue As OrdenCompra = _ordenCompra
                _ordenCompra = value
                FixupOrdenCompra(previousValue)
                OnNavigationPropertyChanged("OrdenCompra")
            End If
        End Set
    End Property

    Private _ordenCompra As OrdenCompra


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Articulos = Nothing
        DocuMovimientoDetalle.Clear()
        ProcesoCompraDetalle1 = Nothing
        CuentasContables = Nothing
        OrdenCompra = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupProcesoCompraDetalle1(ByVal previousValue As ProcesoCompraDetalle, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenCompraDetalle1.Contains(Me) Then
            previousValue.OrdenCompraDetalle1.Remove(Me)
        End If

        If ProcesoCompraDetalle1 IsNot Nothing Then
            If Not ProcesoCompraDetalle1.OrdenCompraDetalle1.Contains(Me) Then
                ProcesoCompraDetalle1.OrdenCompraDetalle1.Add(Me)
            End If

            PCD_ID = ProcesoCompraDetalle1.PCD_ID
        ElseIf Not skipKeys Then
            PCD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ProcesoCompraDetalle1") AndAlso
                ChangeTracker.OriginalValues("ProcesoCompraDetalle1") Is ProcesoCompraDetalle1 Then
                ChangeTracker.OriginalValues.Remove("ProcesoCompraDetalle1")
            Else
                ChangeTracker.RecordOriginalValue("ProcesoCompraDetalle1", previousValue)
            End If
            If ProcesoCompraDetalle1 IsNot Nothing AndAlso Not ProcesoCompraDetalle1.ChangeTracker.ChangeTrackingEnabled Then
                ProcesoCompraDetalle1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenCompraDetalle.Contains(Me) Then
            previousValue.OrdenCompraDetalle.Remove(Me)
        End If

        If CuentasContables IsNot Nothing Then
            If Not CuentasContables.OrdenCompraDetalle.Contains(Me) Then
                CuentasContables.OrdenCompraDetalle.Add(Me)
            End If

            CUC_ID = CuentasContables.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables") AndAlso
                ChangeTracker.OriginalValues("CuentasContables") Is CuentasContables Then
                ChangeTracker.OriginalValues.Remove("CuentasContables")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables", previousValue)
            End If
            If CuentasContables IsNot Nothing AndAlso Not CuentasContables.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupOrdenCompra(ByVal previousValue As OrdenCompra, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.OrdenCompraDetalle.Contains(Me) Then
            previousValue.OrdenCompraDetalle.Remove(Me)
        End If

        If OrdenCompra IsNot Nothing Then
            If Not OrdenCompra.OrdenCompraDetalle.Contains(Me) Then
                OrdenCompra.OrdenCompraDetalle.Add(Me)
            End If

            OCO_ID = OrdenCompra.OCO_ID
        ElseIf Not skipKeys Then
            OCO_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("OrdenCompra") AndAlso
                ChangeTracker.OriginalValues("OrdenCompra") Is OrdenCompra Then
                ChangeTracker.OriginalValues.Remove("OrdenCompra")
            Else
                ChangeTracker.RecordOriginalValue("OrdenCompra", previousValue)
            End If
            If OrdenCompra IsNot Nothing AndAlso Not OrdenCompra.ChangeTracker.ChangeTrackingEnabled Then
                OrdenCompra.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDocuMovimientoDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuMovimientoDetalle In e.NewItems
                item.OCD_ID = OCD_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuMovimientoDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuMovimientoDetalle In e.OldItems
                item.OCD_ID = Nothing
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuMovimientoDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
