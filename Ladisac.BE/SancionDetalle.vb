'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(FaltaSancion))>
<KnownType(GetType(Sancion))>
Partial Public Class SancionDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared SAD_ID As string = "SAD_ID"
				public shared SAN_ID As string = "SAN_ID"
				public shared FSA_ID As string = "FSA_ID"
				public shared SAD_OBSERVACION As string = "SAD_OBSERVACION"
		    End Structure
	



    <DataMember()>
    Public Property SAD_ID() As Integer
        Get
            Return _sAD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_sAD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'SAD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _sAD_ID = value
                OnPropertyChanged("SAD_ID")
            End If
        End Set
    End Property

    Private _sAD_ID As Integer

    <DataMember()>
    Public Property SAN_ID() As Nullable(Of Integer)
        Get
            Return _sAN_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_sAN_ID, value) Then
                ChangeTracker.RecordOriginalValue("SAN_ID", _sAN_ID)
                If Not IsDeserializing Then
                    If Sancion IsNot Nothing AndAlso Not Equals(Sancion.SAN_ID, value) Then
                        Sancion = Nothing
                    End If
                End If
                _sAN_ID = value
                OnPropertyChanged("SAN_ID")
            End If
        End Set
    End Property

    Private _sAN_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property FSA_ID() As Nullable(Of Integer)
        Get
            Return _fSA_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_fSA_ID, value) Then
                ChangeTracker.RecordOriginalValue("FSA_ID", _fSA_ID)
                If Not IsDeserializing Then
                    If FaltaSancion IsNot Nothing AndAlso Not Equals(FaltaSancion.FSA_ID, value) Then
                        FaltaSancion = Nothing
                    End If
                End If
                _fSA_ID = value
                OnPropertyChanged("FSA_ID")
            End If
        End Set
    End Property

    Private _fSA_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property SAD_OBSERVACION() As String
        Get
            Return _sAD_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_sAD_OBSERVACION, value) Then
                _sAD_OBSERVACION = value
                OnPropertyChanged("SAD_OBSERVACION")
            End If
        End Set
    End Property

    Private _sAD_OBSERVACION As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property FaltaSancion() As FaltaSancion
        Get
            Return _faltaSancion
        End Get
        Set(ByVal value As FaltaSancion)
            If _faltaSancion IsNot value Then
                Dim previousValue As FaltaSancion = _faltaSancion
                _faltaSancion = value
                FixupFaltaSancion(previousValue)
                OnNavigationPropertyChanged("FaltaSancion")
            End If
        End Set
    End Property

    Private _faltaSancion As FaltaSancion


    <DataMember()>
    Public Property Sancion() As Sancion
        Get
            Return _sancion
        End Get
        Set(ByVal value As Sancion)
            If _sancion IsNot value Then
                Dim previousValue As Sancion = _sancion
                _sancion = value
                FixupSancion(previousValue)
                OnNavigationPropertyChanged("Sancion")
            End If
        End Set
    End Property

    Private _sancion As Sancion


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        FaltaSancion = Nothing
        Sancion = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupFaltaSancion(ByVal previousValue As FaltaSancion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.SancionDetalle.Contains(Me) Then
            previousValue.SancionDetalle.Remove(Me)
        End If

        If FaltaSancion IsNot Nothing Then
            If Not FaltaSancion.SancionDetalle.Contains(Me) Then
                FaltaSancion.SancionDetalle.Add(Me)
            End If

            FSA_ID = FaltaSancion.FSA_ID
        ElseIf Not skipKeys Then
            FSA_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("FaltaSancion") AndAlso
                ChangeTracker.OriginalValues("FaltaSancion") Is FaltaSancion Then
                ChangeTracker.OriginalValues.Remove("FaltaSancion")
            Else
                ChangeTracker.RecordOriginalValue("FaltaSancion", previousValue)
            End If
            If FaltaSancion IsNot Nothing AndAlso Not FaltaSancion.ChangeTracker.ChangeTrackingEnabled Then
                FaltaSancion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupSancion(ByVal previousValue As Sancion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.SancionDetalle.Contains(Me) Then
            previousValue.SancionDetalle.Remove(Me)
        End If

        If Sancion IsNot Nothing Then
            If Not Sancion.SancionDetalle.Contains(Me) Then
                Sancion.SancionDetalle.Add(Me)
            End If

            SAN_ID = Sancion.SAN_ID
        ElseIf Not skipKeys Then
            SAN_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Sancion") AndAlso
                ChangeTracker.OriginalValues("Sancion") Is Sancion Then
                ChangeTracker.OriginalValues.Remove("Sancion")
            Else
                ChangeTracker.RecordOriginalValue("Sancion", previousValue)
            End If
            If Sancion IsNot Nothing AndAlso Not Sancion.ChangeTracker.ChangeTrackingEnabled Then
                Sancion.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
