'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ActivosFijos))>
<KnownType(GetType(CuentasContables))>
<KnownType(GetType(Usuarios))>
Partial Public Class CuentasActivos
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CUA_ID As string = "CUA_ID"
				public shared CUC_ID_ACT As string = "CUC_ID_ACT"
				public shared CUC_ID_DEP As string = "CUC_ID_DEP"
				public shared CUC_ID_PRO As string = "CUC_ID_PRO"
				public shared CUC_ID_ACT_ACU As string = "CUC_ID_ACT_ACU"
				public shared CUC_ID_DEP_ACU As string = "CUC_ID_DEP_ACU"
				public shared CUC_ID_RES As string = "CUC_ID_RES"
				public shared CUA_TASA_ANUAL As string = "CUA_TASA_ANUAL"
				public shared CUA_MESES As string = "CUA_MESES"
				public shared USU_ID As string = "USU_ID"
				public shared CUA_FEC_GRAB As string = "CUA_FEC_GRAB"
				public shared CUA_ESTADO As string = "CUA_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property CUA_ID() As String
        Get
            Return _cUA_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUA_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CUA_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cUA_ID = value
                OnPropertyChanged("CUA_ID")
            End If
        End Set
    End Property

    Private _cUA_ID As String

    <DataMember()>
    Public Property CUC_ID_ACT() As String
        Get
            Return _cUC_ID_ACT
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_ACT, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_ACT", _cUC_ID_ACT)
                If Not IsDeserializing Then
                    If CuentasContables IsNot Nothing AndAlso Not Equals(CuentasContables.CUC_ID, value) Then
                        CuentasContables = Nothing
                    End If
                End If
                _cUC_ID_ACT = value
                OnPropertyChanged("CUC_ID_ACT")
            End If
        End Set
    End Property

    Private _cUC_ID_ACT As String

    <DataMember()>
    Public Property CUC_ID_DEP() As String
        Get
            Return _cUC_ID_DEP
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_DEP, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_DEP", _cUC_ID_DEP)
                If Not IsDeserializing Then
                    If CuentasContables1 IsNot Nothing AndAlso Not Equals(CuentasContables1.CUC_ID, value) Then
                        CuentasContables1 = Nothing
                    End If
                End If
                _cUC_ID_DEP = value
                OnPropertyChanged("CUC_ID_DEP")
            End If
        End Set
    End Property

    Private _cUC_ID_DEP As String

    <DataMember()>
    Public Property CUC_ID_PRO() As String
        Get
            Return _cUC_ID_PRO
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_PRO, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_PRO", _cUC_ID_PRO)
                If Not IsDeserializing Then
                    If CuentasContables2 IsNot Nothing AndAlso Not Equals(CuentasContables2.CUC_ID, value) Then
                        CuentasContables2 = Nothing
                    End If
                End If
                _cUC_ID_PRO = value
                OnPropertyChanged("CUC_ID_PRO")
            End If
        End Set
    End Property

    Private _cUC_ID_PRO As String

    <DataMember()>
    Public Property CUC_ID_ACT_ACU() As String
        Get
            Return _cUC_ID_ACT_ACU
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_ACT_ACU, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_ACT_ACU", _cUC_ID_ACT_ACU)
                If Not IsDeserializing Then
                    If CuentasContables3 IsNot Nothing AndAlso Not Equals(CuentasContables3.CUC_ID, value) Then
                        CuentasContables3 = Nothing
                    End If
                End If
                _cUC_ID_ACT_ACU = value
                OnPropertyChanged("CUC_ID_ACT_ACU")
            End If
        End Set
    End Property

    Private _cUC_ID_ACT_ACU As String

    <DataMember()>
    Public Property CUC_ID_DEP_ACU() As String
        Get
            Return _cUC_ID_DEP_ACU
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_DEP_ACU, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_DEP_ACU", _cUC_ID_DEP_ACU)
                If Not IsDeserializing Then
                    If CuentasContables4 IsNot Nothing AndAlso Not Equals(CuentasContables4.CUC_ID, value) Then
                        CuentasContables4 = Nothing
                    End If
                End If
                _cUC_ID_DEP_ACU = value
                OnPropertyChanged("CUC_ID_DEP_ACU")
            End If
        End Set
    End Property

    Private _cUC_ID_DEP_ACU As String

    <DataMember()>
    Public Property CUC_ID_RES() As String
        Get
            Return _cUC_ID_RES
        End Get
        Set(ByVal value As String)
            If Not Equals(_cUC_ID_RES, value) Then
                ChangeTracker.RecordOriginalValue("CUC_ID_RES", _cUC_ID_RES)
                If Not IsDeserializing Then
                    If CuentasContables5 IsNot Nothing AndAlso Not Equals(CuentasContables5.CUC_ID, value) Then
                        CuentasContables5 = Nothing
                    End If
                End If
                _cUC_ID_RES = value
                OnPropertyChanged("CUC_ID_RES")
            End If
        End Set
    End Property

    Private _cUC_ID_RES As String

    <DataMember()>
    Public Property CUA_TASA_ANUAL() As Decimal
        Get
            Return _cUA_TASA_ANUAL
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cUA_TASA_ANUAL, value) Then
                _cUA_TASA_ANUAL = value
                OnPropertyChanged("CUA_TASA_ANUAL")
            End If
        End Set
    End Property

    Private _cUA_TASA_ANUAL As Decimal

    <DataMember()>
    Public Property CUA_MESES() As Decimal
        Get
            Return _cUA_MESES
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cUA_MESES, value) Then
                _cUA_MESES = value
                OnPropertyChanged("CUA_MESES")
            End If
        End Set
    End Property

    Private _cUA_MESES As Decimal

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property CUA_FEC_GRAB() As Date
        Get
            Return _cUA_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cUA_FEC_GRAB, value) Then
                _cUA_FEC_GRAB = value
                OnPropertyChanged("CUA_FEC_GRAB")
            End If
        End Set
    End Property

    Private _cUA_FEC_GRAB As Date

    <DataMember()>
    Public Property CUA_ESTADO() As Boolean
        Get
            Return _cUA_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_cUA_ESTADO, value) Then
                _cUA_ESTADO = value
                OnPropertyChanged("CUA_ESTADO")
            End If
        End Set
    End Property

    Private _cUA_ESTADO As Boolean

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property ActivosFijos() As TrackableCollection(Of ActivosFijos)
        Get
            If _activosFijos Is Nothing Then
                _activosFijos = New TrackableCollection(Of ActivosFijos)
                AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
            End If
            Return _activosFijos
        End Get
        Set(ByVal value As TrackableCollection(Of ActivosFijos))
            If Not Object.ReferenceEquals(_activosFijos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _activosFijos IsNot Nothing Then
                    RemoveHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                _activosFijos = value
                If _activosFijos IsNot Nothing Then
                    AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                OnNavigationPropertyChanged("ActivosFijos")
            End If
        End Set
    End Property

    Private _activosFijos As TrackableCollection(Of ActivosFijos)

    <DataMember()>
    Public Property CuentasContables() As CuentasContables
        Get
            Return _cuentasContables
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables
                _cuentasContables = value
                FixupCuentasContables(previousValue)
                OnNavigationPropertyChanged("CuentasContables")
            End If
        End Set
    End Property

    Private _cuentasContables As CuentasContables


    <DataMember()>
    Public Property CuentasContables1() As CuentasContables
        Get
            Return _cuentasContables1
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables1 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables1
                _cuentasContables1 = value
                FixupCuentasContables1(previousValue)
                OnNavigationPropertyChanged("CuentasContables1")
            End If
        End Set
    End Property

    Private _cuentasContables1 As CuentasContables


    <DataMember()>
    Public Property CuentasContables2() As CuentasContables
        Get
            Return _cuentasContables2
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables2 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables2
                _cuentasContables2 = value
                FixupCuentasContables2(previousValue)
                OnNavigationPropertyChanged("CuentasContables2")
            End If
        End Set
    End Property

    Private _cuentasContables2 As CuentasContables


    <DataMember()>
    Public Property CuentasContables3() As CuentasContables
        Get
            Return _cuentasContables3
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables3 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables3
                _cuentasContables3 = value
                FixupCuentasContables3(previousValue)
                OnNavigationPropertyChanged("CuentasContables3")
            End If
        End Set
    End Property

    Private _cuentasContables3 As CuentasContables


    <DataMember()>
    Public Property CuentasContables4() As CuentasContables
        Get
            Return _cuentasContables4
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables4 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables4
                _cuentasContables4 = value
                FixupCuentasContables4(previousValue)
                OnNavigationPropertyChanged("CuentasContables4")
            End If
        End Set
    End Property

    Private _cuentasContables4 As CuentasContables


    <DataMember()>
    Public Property CuentasContables5() As CuentasContables
        Get
            Return _cuentasContables5
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables5 IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables5
                _cuentasContables5 = value
                FixupCuentasContables5(previousValue)
                OnNavigationPropertyChanged("CuentasContables5")
            End If
        End Set
    End Property

    Private _cuentasContables5 As CuentasContables


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ActivosFijos.Clear()
        CuentasContables = Nothing
        CuentasContables1 = Nothing
        CuentasContables2 = Nothing
        CuentasContables3 = Nothing
        CuentasContables4 = Nothing
        CuentasContables5 = Nothing
        Usuarios = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupCuentasContables(ByVal previousValue As CuentasContables)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos.Contains(Me) Then
            previousValue.CuentasActivos.Remove(Me)
        End If

        If CuentasContables IsNot Nothing Then
            If Not CuentasContables.CuentasActivos.Contains(Me) Then
                CuentasContables.CuentasActivos.Add(Me)
            End If

            CUC_ID_ACT = CuentasContables.CUC_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables") AndAlso
                ChangeTracker.OriginalValues("CuentasContables") Is CuentasContables Then
                ChangeTracker.OriginalValues.Remove("CuentasContables")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables", previousValue)
            End If
            If CuentasContables IsNot Nothing AndAlso Not CuentasContables.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables1(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos1.Contains(Me) Then
            previousValue.CuentasActivos1.Remove(Me)
        End If

        If CuentasContables1 IsNot Nothing Then
            If Not CuentasContables1.CuentasActivos1.Contains(Me) Then
                CuentasContables1.CuentasActivos1.Add(Me)
            End If

            CUC_ID_DEP = CuentasContables1.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID_DEP = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables1") AndAlso
                ChangeTracker.OriginalValues("CuentasContables1") Is CuentasContables1 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables1")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables1", previousValue)
            End If
            If CuentasContables1 IsNot Nothing AndAlso Not CuentasContables1.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables2(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos2.Contains(Me) Then
            previousValue.CuentasActivos2.Remove(Me)
        End If

        If CuentasContables2 IsNot Nothing Then
            If Not CuentasContables2.CuentasActivos2.Contains(Me) Then
                CuentasContables2.CuentasActivos2.Add(Me)
            End If

            CUC_ID_PRO = CuentasContables2.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID_PRO = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables2") AndAlso
                ChangeTracker.OriginalValues("CuentasContables2") Is CuentasContables2 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables2")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables2", previousValue)
            End If
            If CuentasContables2 IsNot Nothing AndAlso Not CuentasContables2.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables3(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos3.Contains(Me) Then
            previousValue.CuentasActivos3.Remove(Me)
        End If

        If CuentasContables3 IsNot Nothing Then
            If Not CuentasContables3.CuentasActivos3.Contains(Me) Then
                CuentasContables3.CuentasActivos3.Add(Me)
            End If

            CUC_ID_ACT_ACU = CuentasContables3.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID_ACT_ACU = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables3") AndAlso
                ChangeTracker.OriginalValues("CuentasContables3") Is CuentasContables3 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables3")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables3", previousValue)
            End If
            If CuentasContables3 IsNot Nothing AndAlso Not CuentasContables3.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables4(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos4.Contains(Me) Then
            previousValue.CuentasActivos4.Remove(Me)
        End If

        If CuentasContables4 IsNot Nothing Then
            If Not CuentasContables4.CuentasActivos4.Contains(Me) Then
                CuentasContables4.CuentasActivos4.Add(Me)
            End If

            CUC_ID_DEP_ACU = CuentasContables4.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID_DEP_ACU = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables4") AndAlso
                ChangeTracker.OriginalValues("CuentasContables4") Is CuentasContables4 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables4")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables4", previousValue)
            End If
            If CuentasContables4 IsNot Nothing AndAlso Not CuentasContables4.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables4.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables5(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentasActivos5.Contains(Me) Then
            previousValue.CuentasActivos5.Remove(Me)
        End If

        If CuentasContables5 IsNot Nothing Then
            If Not CuentasContables5.CuentasActivos5.Contains(Me) Then
                CuentasContables5.CuentasActivos5.Add(Me)
            End If

            CUC_ID_RES = CuentasContables5.CUC_ID
        ElseIf Not skipKeys Then
            CUC_ID_RES = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables5") AndAlso
                ChangeTracker.OriginalValues("CuentasContables5") Is CuentasContables5 Then
                ChangeTracker.OriginalValues.Remove("CuentasContables5")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables5", previousValue)
            End If
            If CuentasContables5 IsNot Nothing AndAlso Not CuentasContables5.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables5.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupActivosFijos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ActivosFijos In e.NewItems
                item.CuentasActivos = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ActivosFijos In e.OldItems
                If ReferenceEquals(item.CuentasActivos, Me) Then
                    item.CuentasActivos = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
