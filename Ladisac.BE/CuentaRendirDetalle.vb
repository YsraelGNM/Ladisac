'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CuentaRendir))>
<KnownType(GetType(Articulos))>
<KnownType(GetType(DetalleTipoDocumentos))>
<KnownType(GetType(Moneda))>
<KnownType(GetType(Personas))>
<KnownType(GetType(RendicionGastos))>
Partial Public Class CuentaRendirDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared CRD_ID As string = "CRD_ID"
				public shared CRE_ID As string = "CRE_ID"
				public shared PER_ID_PROVEEDOR As string = "PER_ID_PROVEEDOR"
				public shared TDO_ID As string = "TDO_ID"
				public shared DTD_ID As string = "DTD_ID"
				public shared CCT_ID As string = "CCT_ID"
				public shared MON_ID As string = "MON_ID"
				public shared CRD_TIPO_CAMBIO As string = "CRD_TIPO_CAMBIO"
				public shared CRD_SERIE_DOC As string = "CRD_SERIE_DOC"
				public shared CRD_NUMERO_DOC As string = "CRD_NUMERO_DOC"
				public shared CRD_FECHA As string = "CRD_FECHA"
				public shared ART_ID As string = "ART_ID"
				public shared CRD_CANTIDAD As string = "CRD_CANTIDAD"
				public shared CRD_PRECIO_UNITARIO As string = "CRD_PRECIO_UNITARIO"
				public shared CRD_IGV As string = "CRD_IGV"
				public shared CRD_CONTRAVALOR As string = "CRD_CONTRAVALOR"
				public shared CRD_OBSERVACION As string = "CRD_OBSERVACION"
				public shared USU_ID_AUT_2 As string = "USU_ID_AUT_2"
				public shared CRD_FEC_AUT_2 As string = "CRD_FEC_AUT_2"
				public shared USU_ID_AUT_3 As string = "USU_ID_AUT_3"
				public shared CRD_FEC_AUT_3 As string = "CRD_FEC_AUT_3"
				public shared USU_ID_AUT_4 As string = "USU_ID_AUT_4"
				public shared CRD_FEC_AUT_4 As string = "CRD_FEC_AUT_4"
				public shared RGA_ID As string = "RGA_ID"
		    End Structure
	



    <DataMember()>
    Public Property CRD_ID() As Integer
        Get
            Return _cRD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cRD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'CRD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _cRD_ID = value
                OnPropertyChanged("CRD_ID")
            End If
        End Set
    End Property

    Private _cRD_ID As Integer

    <DataMember()>
    Public Property CRE_ID() As Integer
        Get
            Return _cRE_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_cRE_ID, value) Then
                ChangeTracker.RecordOriginalValue("CRE_ID", _cRE_ID)
                If Not IsDeserializing Then
                    If CuentaRendir IsNot Nothing AndAlso Not Equals(CuentaRendir.CRE_ID, value) Then
                        CuentaRendir = Nothing
                    End If
                End If
                _cRE_ID = value
                OnPropertyChanged("CRE_ID")
            End If
        End Set
    End Property

    Private _cRE_ID As Integer

    <DataMember()>
    Public Property PER_ID_PROVEEDOR() As String
        Get
            Return _pER_ID_PROVEEDOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_PROVEEDOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_PROVEEDOR", _pER_ID_PROVEEDOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_PROVEEDOR = value
                OnPropertyChanged("PER_ID_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_ID_PROVEEDOR As String

    <DataMember()>
    Public Property TDO_ID() As String
        Get
            Return _tDO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID, value) Then
                _tDO_ID = value
                OnPropertyChanged("TDO_ID")
            End If
        End Set
    End Property

    Private _tDO_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                ChangeTracker.RecordOriginalValue("DTD_ID", _dTD_ID)
                If Not IsDeserializing Then
                    If DetalleTipoDocumentos IsNot Nothing AndAlso Not Equals(DetalleTipoDocumentos.DTD_ID, value) Then
                        DetalleTipoDocumentos = Nothing
                    End If
                End If
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

    <DataMember()>
    Public Property CCT_ID() As String
        Get
            Return _cCT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_ID, value) Then
                _cCT_ID = value
                OnPropertyChanged("CCT_ID")
            End If
        End Set
    End Property

    Private _cCT_ID As String

    <DataMember()>
    Public Property MON_ID() As String
        Get
            Return _mON_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_mON_ID, value) Then
                ChangeTracker.RecordOriginalValue("MON_ID", _mON_ID)
                If Not IsDeserializing Then
                    If Moneda IsNot Nothing AndAlso Not Equals(Moneda.MON_ID, value) Then
                        Moneda = Nothing
                    End If
                End If
                _mON_ID = value
                OnPropertyChanged("MON_ID")
            End If
        End Set
    End Property

    Private _mON_ID As String

    <DataMember()>
    Public Property CRD_TIPO_CAMBIO() As Decimal
        Get
            Return _cRD_TIPO_CAMBIO
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cRD_TIPO_CAMBIO, value) Then
                _cRD_TIPO_CAMBIO = value
                OnPropertyChanged("CRD_TIPO_CAMBIO")
            End If
        End Set
    End Property

    Private _cRD_TIPO_CAMBIO As Decimal

    <DataMember()>
    Public Property CRD_SERIE_DOC() As String
        Get
            Return _cRD_SERIE_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_cRD_SERIE_DOC, value) Then
                _cRD_SERIE_DOC = value
                OnPropertyChanged("CRD_SERIE_DOC")
            End If
        End Set
    End Property

    Private _cRD_SERIE_DOC As String

    <DataMember()>
    Public Property CRD_NUMERO_DOC() As String
        Get
            Return _cRD_NUMERO_DOC
        End Get
        Set(ByVal value As String)
            If Not Equals(_cRD_NUMERO_DOC, value) Then
                _cRD_NUMERO_DOC = value
                OnPropertyChanged("CRD_NUMERO_DOC")
            End If
        End Set
    End Property

    Private _cRD_NUMERO_DOC As String

    <DataMember()>
    Public Property CRD_FECHA() As Date
        Get
            Return _cRD_FECHA
        End Get
        Set(ByVal value As Date)
            If Not Equals(_cRD_FECHA, value) Then
                _cRD_FECHA = value
                OnPropertyChanged("CRD_FECHA")
            End If
        End Set
    End Property

    Private _cRD_FECHA As Date

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property CRD_CANTIDAD() As Decimal
        Get
            Return _cRD_CANTIDAD
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cRD_CANTIDAD, value) Then
                _cRD_CANTIDAD = value
                OnPropertyChanged("CRD_CANTIDAD")
            End If
        End Set
    End Property

    Private _cRD_CANTIDAD As Decimal

    <DataMember()>
    Public Property CRD_PRECIO_UNITARIO() As Decimal
        Get
            Return _cRD_PRECIO_UNITARIO
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cRD_PRECIO_UNITARIO, value) Then
                _cRD_PRECIO_UNITARIO = value
                OnPropertyChanged("CRD_PRECIO_UNITARIO")
            End If
        End Set
    End Property

    Private _cRD_PRECIO_UNITARIO As Decimal

    <DataMember()>
    Public Property CRD_IGV() As Nullable(Of Decimal)
        Get
            Return _cRD_IGV
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_cRD_IGV, value) Then
                _cRD_IGV = value
                OnPropertyChanged("CRD_IGV")
            End If
        End Set
    End Property

    Private _cRD_IGV As Nullable(Of Decimal)

    <DataMember()>
    Public Property CRD_CONTRAVALOR() As Decimal
        Get
            Return _cRD_CONTRAVALOR
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cRD_CONTRAVALOR, value) Then
                _cRD_CONTRAVALOR = value
                OnPropertyChanged("CRD_CONTRAVALOR")
            End If
        End Set
    End Property

    Private _cRD_CONTRAVALOR As Decimal

    <DataMember()>
    Public Property CRD_OBSERVACION() As String
        Get
            Return _cRD_OBSERVACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_cRD_OBSERVACION, value) Then
                _cRD_OBSERVACION = value
                OnPropertyChanged("CRD_OBSERVACION")
            End If
        End Set
    End Property

    Private _cRD_OBSERVACION As String

    <DataMember()>
    Public Property USU_ID_AUT_2() As String
        Get
            Return _uSU_ID_AUT_2
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_2, value) Then
                _uSU_ID_AUT_2 = value
                OnPropertyChanged("USU_ID_AUT_2")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_2 As String

    <DataMember()>
    Public Property CRD_FEC_AUT_2() As Nullable(Of Date)
        Get
            Return _cRD_FEC_AUT_2
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRD_FEC_AUT_2, value) Then
                _cRD_FEC_AUT_2 = value
                OnPropertyChanged("CRD_FEC_AUT_2")
            End If
        End Set
    End Property

    Private _cRD_FEC_AUT_2 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_3() As String
        Get
            Return _uSU_ID_AUT_3
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_3, value) Then
                _uSU_ID_AUT_3 = value
                OnPropertyChanged("USU_ID_AUT_3")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_3 As String

    <DataMember()>
    Public Property CRD_FEC_AUT_3() As Nullable(Of Date)
        Get
            Return _cRD_FEC_AUT_3
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRD_FEC_AUT_3, value) Then
                _cRD_FEC_AUT_3 = value
                OnPropertyChanged("CRD_FEC_AUT_3")
            End If
        End Set
    End Property

    Private _cRD_FEC_AUT_3 As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID_AUT_4() As String
        Get
            Return _uSU_ID_AUT_4
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_AUT_4, value) Then
                _uSU_ID_AUT_4 = value
                OnPropertyChanged("USU_ID_AUT_4")
            End If
        End Set
    End Property

    Private _uSU_ID_AUT_4 As String

    <DataMember()>
    Public Property CRD_FEC_AUT_4() As Nullable(Of Date)
        Get
            Return _cRD_FEC_AUT_4
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_cRD_FEC_AUT_4, value) Then
                _cRD_FEC_AUT_4 = value
                OnPropertyChanged("CRD_FEC_AUT_4")
            End If
        End Set
    End Property

    Private _cRD_FEC_AUT_4 As Nullable(Of Date)

    <DataMember()>
    Public Property RGA_ID() As Nullable(Of Integer)
        Get
            Return _rGA_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rGA_ID, value) Then
                ChangeTracker.RecordOriginalValue("RGA_ID", _rGA_ID)
                If Not IsDeserializing Then
                    If RendicionGastos IsNot Nothing AndAlso Not Equals(RendicionGastos.RGA_ID, value) Then
                        RendicionGastos = Nothing
                    End If
                End If
                _rGA_ID = value
                OnPropertyChanged("RGA_ID")
            End If
        End Set
    End Property

    Private _rGA_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property CuentaRendir() As CuentaRendir
        Get
            Return _cuentaRendir
        End Get
        Set(ByVal value As CuentaRendir)
            If _cuentaRendir IsNot value Then
                Dim previousValue As CuentaRendir = _cuentaRendir
                _cuentaRendir = value
                FixupCuentaRendir(previousValue)
                OnNavigationPropertyChanged("CuentaRendir")
            End If
        End Set
    End Property

    Private _cuentaRendir As CuentaRendir


    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


    <DataMember()>
    Public Property DetalleTipoDocumentos() As DetalleTipoDocumentos
        Get
            Return _detalleTipoDocumentos
        End Get
        Set(ByVal value As DetalleTipoDocumentos)
            If _detalleTipoDocumentos IsNot value Then
                Dim previousValue As DetalleTipoDocumentos = _detalleTipoDocumentos
                _detalleTipoDocumentos = value
                FixupDetalleTipoDocumentos(previousValue)
                OnNavigationPropertyChanged("DetalleTipoDocumentos")
            End If
        End Set
    End Property

    Private _detalleTipoDocumentos As DetalleTipoDocumentos


    <DataMember()>
    Public Property Moneda() As Moneda
        Get
            Return _moneda
        End Get
        Set(ByVal value As Moneda)
            If _moneda IsNot value Then
                Dim previousValue As Moneda = _moneda
                _moneda = value
                FixupMoneda(previousValue)
                OnNavigationPropertyChanged("Moneda")
            End If
        End Set
    End Property

    Private _moneda As Moneda


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property RendicionGastos() As RendicionGastos
        Get
            Return _rendicionGastos
        End Get
        Set(ByVal value As RendicionGastos)
            If _rendicionGastos IsNot value Then
                Dim previousValue As RendicionGastos = _rendicionGastos
                _rendicionGastos = value
                FixupRendicionGastos(previousValue)
                OnNavigationPropertyChanged("RendicionGastos")
            End If
        End Set
    End Property

    Private _rendicionGastos As RendicionGastos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CuentaRendir = Nothing
        Articulos = Nothing
        DetalleTipoDocumentos = Nothing
        Moneda = Nothing
        Personas = Nothing
        RendicionGastos = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupCuentaRendir(ByVal previousValue As CuentaRendir)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If CuentaRendir IsNot Nothing Then
            If Not CuentaRendir.CuentaRendirDetalle.Contains(Me) Then
                CuentaRendir.CuentaRendirDetalle.Add(Me)
            End If

            CRE_ID = CuentaRendir.CRE_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentaRendir") AndAlso
                ChangeTracker.OriginalValues("CuentaRendir") Is CuentaRendir Then
                ChangeTracker.OriginalValues.Remove("CuentaRendir")
            Else
                ChangeTracker.RecordOriginalValue("CuentaRendir", previousValue)
            End If
            If CuentaRendir IsNot Nothing AndAlso Not CuentaRendir.ChangeTracker.ChangeTrackingEnabled Then
                CuentaRendir.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If Articulos IsNot Nothing Then
            If Not Articulos.CuentaRendirDetalle.Contains(Me) Then
                Articulos.CuentaRendirDetalle.Add(Me)
            End If

            ART_ID = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleTipoDocumentos(ByVal previousValue As DetalleTipoDocumentos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If DetalleTipoDocumentos IsNot Nothing Then
            If Not DetalleTipoDocumentos.CuentaRendirDetalle.Contains(Me) Then
                DetalleTipoDocumentos.CuentaRendirDetalle.Add(Me)
            End If

            DTD_ID = DetalleTipoDocumentos.DTD_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DetalleTipoDocumentos") AndAlso
                ChangeTracker.OriginalValues("DetalleTipoDocumentos") Is DetalleTipoDocumentos Then
                ChangeTracker.OriginalValues.Remove("DetalleTipoDocumentos")
            Else
                ChangeTracker.RecordOriginalValue("DetalleTipoDocumentos", previousValue)
            End If
            If DetalleTipoDocumentos IsNot Nothing AndAlso Not DetalleTipoDocumentos.ChangeTracker.ChangeTrackingEnabled Then
                DetalleTipoDocumentos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupMoneda(ByVal previousValue As Moneda)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If Moneda IsNot Nothing Then
            If Not Moneda.CuentaRendirDetalle.Contains(Me) Then
                Moneda.CuentaRendirDetalle.Add(Me)
            End If

            MON_ID = Moneda.MON_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Moneda") AndAlso
                ChangeTracker.OriginalValues("Moneda") Is Moneda Then
                ChangeTracker.OriginalValues.Remove("Moneda")
            Else
                ChangeTracker.RecordOriginalValue("Moneda", previousValue)
            End If
            If Moneda IsNot Nothing AndAlso Not Moneda.ChangeTracker.ChangeTrackingEnabled Then
                Moneda.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.CuentaRendirDetalle.Contains(Me) Then
                Personas.CuentaRendirDetalle.Add(Me)
            End If

            PER_ID_PROVEEDOR = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupRendicionGastos(ByVal previousValue As RendicionGastos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.CuentaRendirDetalle.Contains(Me) Then
            previousValue.CuentaRendirDetalle.Remove(Me)
        End If

        If RendicionGastos IsNot Nothing Then
            If Not RendicionGastos.CuentaRendirDetalle.Contains(Me) Then
                RendicionGastos.CuentaRendirDetalle.Add(Me)
            End If

            RGA_ID = RendicionGastos.RGA_ID
        ElseIf Not skipKeys Then
            RGA_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("RendicionGastos") AndAlso
                ChangeTracker.OriginalValues("RendicionGastos") Is RendicionGastos Then
                ChangeTracker.OriginalValues.Remove("RendicionGastos")
            Else
                ChangeTracker.RecordOriginalValue("RendicionGastos", previousValue)
            End If
            If RendicionGastos IsNot Nothing AndAlso Not RendicionGastos.ChangeTracker.ChangeTrackingEnabled Then
                RendicionGastos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
