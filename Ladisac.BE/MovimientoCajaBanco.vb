'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(CentroCostos))>
<KnownType(GetType(CtaCte))>
<KnownType(GetType(CuentasContables))>
<KnownType(GetType(DetalleTipoDocumentos))>
<KnownType(GetType(Personas))>
<KnownType(GetType(TipoDocumentos))>
<KnownType(GetType(CajaCtaCte))>
Partial Public Class MovimientoCajaBanco
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared item As string = "item"
				public shared Tes_Fecha_Emi As string = "Tes_Fecha_Emi"
				public shared Cco_Id As string = "Cco_Id"
				public shared Cuc_Id As string = "Cuc_Id"
				public shared Tes_Monto_total As string = "Tes_Monto_total"
				public shared Ccc_Id As string = "Ccc_Id"
				public shared Cct_Id As string = "Cct_Id"
				public shared Tdo_Id As string = "Tdo_Id"
				public shared Dtd_Id As string = "Dtd_Id"
				public shared Tes_Serie As string = "Tes_Serie"
				public shared Tes_Numero As string = "Tes_Numero"
				public shared Cargo As string = "Cargo"
				public shared Abono As string = "Abono"
				public shared Dte_ContraValor_Doc As string = "Dte_ContraValor_Doc"
				public shared Per_Id_Ban As string = "Per_Id_Ban"
				public shared Per_Id_Cli As string = "Per_Id_Cli"
				public shared Ccc_Id_Cli As string = "Ccc_Id_Cli"
				public shared Cct_Id_Doc As string = "Cct_Id_Doc"
				public shared Tdo_Id_Doc As string = "Tdo_Id_Doc"
				public shared Dtd_Id_Doc As string = "Dtd_Id_Doc"
				public shared Dte_Serie_Doc As string = "Dte_Serie_Doc"
				public shared Dte_Numero_Doc As string = "Dte_Numero_Doc"
				public shared Dte_Observaciones As string = "Dte_Observaciones"
				public shared DOCUMENTO As string = "DOCUMENTO"
				public shared Tes_Monto_Total1 As string = "Tes_Monto_Total1"
				public shared TIPO As string = "TIPO"
		    End Structure
	



    <DataMember()>
    Public Property item() As Decimal
        Get
            Return _item
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _item = value
                OnPropertyChanged("item")
            End If
        End Set
    End Property

    Private _item As Decimal

    <DataMember()>
    Public Property Tes_Fecha_Emi() As Date
        Get
            Return _tes_Fecha_Emi
        End Get
        Set(ByVal value As Date)
            If Not Equals(_tes_Fecha_Emi, value) Then
                _tes_Fecha_Emi = value
                OnPropertyChanged("Tes_Fecha_Emi")
            End If
        End Set
    End Property

    Private _tes_Fecha_Emi As Date

    <DataMember()>
    Public Property Cco_Id() As String
        Get
            Return _cco_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cco_Id, value) Then
                ChangeTracker.RecordOriginalValue("Cco_Id", _cco_Id)
                If Not IsDeserializing Then
                    If CentroCostos IsNot Nothing AndAlso Not Equals(CentroCostos.CCO_ID, value) Then
                        CentroCostos = Nothing
                    End If
                End If
                _cco_Id = value
                OnPropertyChanged("Cco_Id")
            End If
        End Set
    End Property

    Private _cco_Id As String

    <DataMember()>
    Public Property Cuc_Id() As String
        Get
            Return _cuc_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cuc_Id, value) Then
                ChangeTracker.RecordOriginalValue("Cuc_Id", _cuc_Id)
                If Not IsDeserializing Then
                    If CuentasContables IsNot Nothing AndAlso Not Equals(CuentasContables.CUC_ID, value) Then
                        CuentasContables = Nothing
                    End If
                End If
                _cuc_Id = value
                OnPropertyChanged("Cuc_Id")
            End If
        End Set
    End Property

    Private _cuc_Id As String

    <DataMember()>
    Public Property Tes_Monto_total() As Decimal
        Get
            Return _tes_Monto_total
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_tes_Monto_total, value) Then
                _tes_Monto_total = value
                OnPropertyChanged("Tes_Monto_total")
            End If
        End Set
    End Property

    Private _tes_Monto_total As Decimal

    <DataMember()>
    Public Property Ccc_Id() As String
        Get
            Return _ccc_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_ccc_Id, value) Then
                ChangeTracker.RecordOriginalValue("Ccc_Id", _ccc_Id)
                If Not IsDeserializing Then
                    If CajaCtaCte IsNot Nothing AndAlso Not Equals(CajaCtaCte.CCC_ID, value) Then
                        CajaCtaCte = Nothing
                    End If
                End If
                _ccc_Id = value
                OnPropertyChanged("Ccc_Id")
            End If
        End Set
    End Property

    Private _ccc_Id As String

    <DataMember()>
    Public Property Cct_Id() As String
        Get
            Return _cct_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cct_Id, value) Then
                ChangeTracker.RecordOriginalValue("Cct_Id", _cct_Id)
                If Not IsDeserializing Then
                    If CtaCte IsNot Nothing AndAlso Not Equals(CtaCte.CCT_ID, value) Then
                        CtaCte = Nothing
                    End If
                End If
                _cct_Id = value
                OnPropertyChanged("Cct_Id")
            End If
        End Set
    End Property

    Private _cct_Id As String

    <DataMember()>
    Public Property Tdo_Id() As String
        Get
            Return _tdo_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_Id, value) Then
                ChangeTracker.RecordOriginalValue("Tdo_Id", _tdo_Id)
                If Not IsDeserializing Then
                    If TipoDocumentos IsNot Nothing AndAlso Not Equals(TipoDocumentos.TDO_ID, value) Then
                        TipoDocumentos = Nothing
                    End If
                End If
                _tdo_Id = value
                OnPropertyChanged("Tdo_Id")
            End If
        End Set
    End Property

    Private _tdo_Id As String

    <DataMember()>
    Public Property Dtd_Id() As String
        Get
            Return _dtd_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_dtd_Id, value) Then
                ChangeTracker.RecordOriginalValue("Dtd_Id", _dtd_Id)
                If Not IsDeserializing Then
                    If DetalleTipoDocumentos IsNot Nothing AndAlso Not Equals(DetalleTipoDocumentos.DTD_ID, value) Then
                        DetalleTipoDocumentos = Nothing
                    End If
                End If
                _dtd_Id = value
                OnPropertyChanged("Dtd_Id")
            End If
        End Set
    End Property

    Private _dtd_Id As String

    <DataMember()>
    Public Property Tes_Serie() As String
        Get
            Return _tes_Serie
        End Get
        Set(ByVal value As String)
            If Not Equals(_tes_Serie, value) Then
                _tes_Serie = value
                OnPropertyChanged("Tes_Serie")
            End If
        End Set
    End Property

    Private _tes_Serie As String

    <DataMember()>
    Public Property Tes_Numero() As String
        Get
            Return _tes_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_tes_Numero, value) Then
                _tes_Numero = value
                OnPropertyChanged("Tes_Numero")
            End If
        End Set
    End Property

    Private _tes_Numero As String

    <DataMember()>
    Public Property Cargo() As Decimal
        Get
            Return _cargo
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_cargo, value) Then
                _cargo = value
                OnPropertyChanged("Cargo")
            End If
        End Set
    End Property

    Private _cargo As Decimal

    <DataMember()>
    Public Property Abono() As Decimal
        Get
            Return _abono
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_abono, value) Then
                _abono = value
                OnPropertyChanged("Abono")
            End If
        End Set
    End Property

    Private _abono As Decimal

    <DataMember()>
    Public Property Dte_ContraValor_Doc() As Decimal
        Get
            Return _dte_ContraValor_Doc
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dte_ContraValor_Doc, value) Then
                _dte_ContraValor_Doc = value
                OnPropertyChanged("Dte_ContraValor_Doc")
            End If
        End Set
    End Property

    Private _dte_ContraValor_Doc As Decimal

    <DataMember()>
    Public Property Per_Id_Ban() As String
        Get
            Return _per_Id_Ban
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id_Ban, value) Then
                ChangeTracker.RecordOriginalValue("Per_Id_Ban", _per_Id_Ban)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                    If Personas2 IsNot Nothing AndAlso Not Equals(Personas2.PER_ID, value) Then
                        Personas2 = Nothing
                    End If
                End If
                _per_Id_Ban = value
                OnPropertyChanged("Per_Id_Ban")
            End If
        End Set
    End Property

    Private _per_Id_Ban As String

    <DataMember()>
    Public Property Per_Id_Cli() As String
        Get
            Return _per_Id_Cli
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id_Cli, value) Then
                ChangeTracker.RecordOriginalValue("Per_Id_Cli", _per_Id_Cli)
                If Not IsDeserializing Then
                    If Personas1 IsNot Nothing AndAlso Not Equals(Personas1.PER_ID, value) Then
                        Personas1 = Nothing
                    End If
                    If Personas3 IsNot Nothing AndAlso Not Equals(Personas3.PER_ID, value) Then
                        Personas3 = Nothing
                    End If
                End If
                _per_Id_Cli = value
                OnPropertyChanged("Per_Id_Cli")
            End If
        End Set
    End Property

    Private _per_Id_Cli As String

    <DataMember()>
    Public Property Ccc_Id_Cli() As String
        Get
            Return _ccc_Id_Cli
        End Get
        Set(ByVal value As String)
            If Not Equals(_ccc_Id_Cli, value) Then
                ChangeTracker.RecordOriginalValue("Ccc_Id_Cli", _ccc_Id_Cli)
                If Not IsDeserializing Then
                    If CajaCtaCte1 IsNot Nothing AndAlso Not Equals(CajaCtaCte1.CCC_ID, value) Then
                        CajaCtaCte1 = Nothing
                    End If
                End If
                _ccc_Id_Cli = value
                OnPropertyChanged("Ccc_Id_Cli")
            End If
        End Set
    End Property

    Private _ccc_Id_Cli As String

    <DataMember()>
    Public Property Cct_Id_Doc() As String
        Get
            Return _cct_Id_Doc
        End Get
        Set(ByVal value As String)
            If Not Equals(_cct_Id_Doc, value) Then
                ChangeTracker.RecordOriginalValue("Cct_Id_Doc", _cct_Id_Doc)
                If Not IsDeserializing Then
                    If CtaCte1 IsNot Nothing AndAlso Not Equals(CtaCte1.CCT_ID, value) Then
                        CtaCte1 = Nothing
                    End If
                End If
                _cct_Id_Doc = value
                OnPropertyChanged("Cct_Id_Doc")
            End If
        End Set
    End Property

    Private _cct_Id_Doc As String

    <DataMember()>
    Public Property Tdo_Id_Doc() As String
        Get
            Return _tdo_Id_Doc
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_Id_Doc, value) Then
                ChangeTracker.RecordOriginalValue("Tdo_Id_Doc", _tdo_Id_Doc)
                If Not IsDeserializing Then
                    If TipoDocumentos1 IsNot Nothing AndAlso Not Equals(TipoDocumentos1.TDO_ID, value) Then
                        TipoDocumentos1 = Nothing
                    End If
                End If
                _tdo_Id_Doc = value
                OnPropertyChanged("Tdo_Id_Doc")
            End If
        End Set
    End Property

    Private _tdo_Id_Doc As String

    <DataMember()>
    Public Property Dtd_Id_Doc() As String
        Get
            Return _dtd_Id_Doc
        End Get
        Set(ByVal value As String)
            If Not Equals(_dtd_Id_Doc, value) Then
                ChangeTracker.RecordOriginalValue("Dtd_Id_Doc", _dtd_Id_Doc)
                If Not IsDeserializing Then
                    If DetalleTipoDocumentos1 IsNot Nothing AndAlso Not Equals(DetalleTipoDocumentos1.DTD_ID, value) Then
                        DetalleTipoDocumentos1 = Nothing
                    End If
                End If
                _dtd_Id_Doc = value
                OnPropertyChanged("Dtd_Id_Doc")
            End If
        End Set
    End Property

    Private _dtd_Id_Doc As String

    <DataMember()>
    Public Property Dte_Serie_Doc() As String
        Get
            Return _dte_Serie_Doc
        End Get
        Set(ByVal value As String)
            If Not Equals(_dte_Serie_Doc, value) Then
                _dte_Serie_Doc = value
                OnPropertyChanged("Dte_Serie_Doc")
            End If
        End Set
    End Property

    Private _dte_Serie_Doc As String

    <DataMember()>
    Public Property Dte_Numero_Doc() As String
        Get
            Return _dte_Numero_Doc
        End Get
        Set(ByVal value As String)
            If Not Equals(_dte_Numero_Doc, value) Then
                _dte_Numero_Doc = value
                OnPropertyChanged("Dte_Numero_Doc")
            End If
        End Set
    End Property

    Private _dte_Numero_Doc As String

    <DataMember()>
    Public Property Dte_Observaciones() As String
        Get
            Return _dte_Observaciones
        End Get
        Set(ByVal value As String)
            If Not Equals(_dte_Observaciones, value) Then
                _dte_Observaciones = value
                OnPropertyChanged("Dte_Observaciones")
            End If
        End Set
    End Property

    Private _dte_Observaciones As String

    <DataMember()>
    Public Property DOCUMENTO() As String
        Get
            Return _dOCUMENTO
        End Get
        Set(ByVal value As String)
            If Not Equals(_dOCUMENTO, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DOCUMENTO' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dOCUMENTO = value
                OnPropertyChanged("DOCUMENTO")
            End If
        End Set
    End Property

    Private _dOCUMENTO As String

    <DataMember()>
    Public Property Tes_Monto_Total1() As Decimal
        Get
            Return _tes_Monto_Total1
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_tes_Monto_Total1, value) Then
                _tes_Monto_Total1 = value
                OnPropertyChanged("Tes_Monto_Total1")
            End If
        End Set
    End Property

    Private _tes_Monto_Total1 As Decimal

    <DataMember()>
    Public Property TIPO() As String
        Get
            Return _tIPO
        End Get
        Set(ByVal value As String)
            If Not Equals(_tIPO, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'TIPO' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _tIPO = value
                OnPropertyChanged("TIPO")
            End If
        End Set
    End Property

    Private _tIPO As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property CentroCostos() As CentroCostos
        Get
            Return _centroCostos
        End Get
        Set(ByVal value As CentroCostos)
            If _centroCostos IsNot value Then
                Dim previousValue As CentroCostos = _centroCostos
                _centroCostos = value
                FixupCentroCostos(previousValue)
                OnNavigationPropertyChanged("CentroCostos")
            End If
        End Set
    End Property

    Private _centroCostos As CentroCostos


    <DataMember()>
    Public Property CtaCte() As CtaCte
        Get
            Return _ctaCte
        End Get
        Set(ByVal value As CtaCte)
            If _ctaCte IsNot value Then
                Dim previousValue As CtaCte = _ctaCte
                _ctaCte = value
                FixupCtaCte(previousValue)
                OnNavigationPropertyChanged("CtaCte")
            End If
        End Set
    End Property

    Private _ctaCte As CtaCte


    <DataMember()>
    Public Property CtaCte1() As CtaCte
        Get
            Return _ctaCte1
        End Get
        Set(ByVal value As CtaCte)
            If _ctaCte1 IsNot value Then
                Dim previousValue As CtaCte = _ctaCte1
                _ctaCte1 = value
                FixupCtaCte1(previousValue)
                OnNavigationPropertyChanged("CtaCte1")
            End If
        End Set
    End Property

    Private _ctaCte1 As CtaCte


    <DataMember()>
    Public Property CuentasContables() As CuentasContables
        Get
            Return _cuentasContables
        End Get
        Set(ByVal value As CuentasContables)
            If _cuentasContables IsNot value Then
                Dim previousValue As CuentasContables = _cuentasContables
                _cuentasContables = value
                FixupCuentasContables(previousValue)
                OnNavigationPropertyChanged("CuentasContables")
            End If
        End Set
    End Property

    Private _cuentasContables As CuentasContables


    <DataMember()>
    Public Property DetalleTipoDocumentos() As DetalleTipoDocumentos
        Get
            Return _detalleTipoDocumentos
        End Get
        Set(ByVal value As DetalleTipoDocumentos)
            If _detalleTipoDocumentos IsNot value Then
                Dim previousValue As DetalleTipoDocumentos = _detalleTipoDocumentos
                _detalleTipoDocumentos = value
                FixupDetalleTipoDocumentos(previousValue)
                OnNavigationPropertyChanged("DetalleTipoDocumentos")
            End If
        End Set
    End Property

    Private _detalleTipoDocumentos As DetalleTipoDocumentos


    <DataMember()>
    Public Property DetalleTipoDocumentos1() As DetalleTipoDocumentos
        Get
            Return _detalleTipoDocumentos1
        End Get
        Set(ByVal value As DetalleTipoDocumentos)
            If _detalleTipoDocumentos1 IsNot value Then
                Dim previousValue As DetalleTipoDocumentos = _detalleTipoDocumentos1
                _detalleTipoDocumentos1 = value
                FixupDetalleTipoDocumentos1(previousValue)
                OnNavigationPropertyChanged("DetalleTipoDocumentos1")
            End If
        End Set
    End Property

    Private _detalleTipoDocumentos1 As DetalleTipoDocumentos


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Personas1() As Personas
        Get
            Return _personas1
        End Get
        Set(ByVal value As Personas)
            If _personas1 IsNot value Then
                Dim previousValue As Personas = _personas1
                _personas1 = value
                FixupPersonas1(previousValue)
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As Personas


    <DataMember()>
    Public Property Personas2() As Personas
        Get
            Return _personas2
        End Get
        Set(ByVal value As Personas)
            If _personas2 IsNot value Then
                Dim previousValue As Personas = _personas2
                _personas2 = value
                FixupPersonas2(previousValue)
                OnNavigationPropertyChanged("Personas2")
            End If
        End Set
    End Property

    Private _personas2 As Personas


    <DataMember()>
    Public Property Personas3() As Personas
        Get
            Return _personas3
        End Get
        Set(ByVal value As Personas)
            If _personas3 IsNot value Then
                Dim previousValue As Personas = _personas3
                _personas3 = value
                FixupPersonas3(previousValue)
                OnNavigationPropertyChanged("Personas3")
            End If
        End Set
    End Property

    Private _personas3 As Personas


    <DataMember()>
    Public Property TipoDocumentos() As TipoDocumentos
        Get
            Return _tipoDocumentos
        End Get
        Set(ByVal value As TipoDocumentos)
            If _tipoDocumentos IsNot value Then
                Dim previousValue As TipoDocumentos = _tipoDocumentos
                _tipoDocumentos = value
                FixupTipoDocumentos(previousValue)
                OnNavigationPropertyChanged("TipoDocumentos")
            End If
        End Set
    End Property

    Private _tipoDocumentos As TipoDocumentos


    <DataMember()>
    Public Property TipoDocumentos1() As TipoDocumentos
        Get
            Return _tipoDocumentos1
        End Get
        Set(ByVal value As TipoDocumentos)
            If _tipoDocumentos1 IsNot value Then
                Dim previousValue As TipoDocumentos = _tipoDocumentos1
                _tipoDocumentos1 = value
                FixupTipoDocumentos1(previousValue)
                OnNavigationPropertyChanged("TipoDocumentos1")
            End If
        End Set
    End Property

    Private _tipoDocumentos1 As TipoDocumentos


    <DataMember()>
    Public Property CajaCtaCte() As CajaCtaCte
        Get
            Return _cajaCtaCte
        End Get
        Set(ByVal value As CajaCtaCte)
            If _cajaCtaCte IsNot value Then
                Dim previousValue As CajaCtaCte = _cajaCtaCte
                _cajaCtaCte = value
                FixupCajaCtaCte(previousValue)
                OnNavigationPropertyChanged("CajaCtaCte")
            End If
        End Set
    End Property

    Private _cajaCtaCte As CajaCtaCte


    <DataMember()>
    Public Property CajaCtaCte1() As CajaCtaCte
        Get
            Return _cajaCtaCte1
        End Get
        Set(ByVal value As CajaCtaCte)
            If _cajaCtaCte1 IsNot value Then
                Dim previousValue As CajaCtaCte = _cajaCtaCte1
                _cajaCtaCte1 = value
                FixupCajaCtaCte1(previousValue)
                OnNavigationPropertyChanged("CajaCtaCte1")
            End If
        End Set
    End Property

    Private _cajaCtaCte1 As CajaCtaCte


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        CentroCostos = Nothing
        CtaCte = Nothing
        CtaCte1 = Nothing
        CuentasContables = Nothing
        DetalleTipoDocumentos = Nothing
        DetalleTipoDocumentos1 = Nothing
        Personas = Nothing
        Personas1 = Nothing
        Personas2 = Nothing
        Personas3 = Nothing
        TipoDocumentos = Nothing
        TipoDocumentos1 = Nothing
        CajaCtaCte = Nothing
        CajaCtaCte1 = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupCentroCostos(ByVal previousValue As CentroCostos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If CentroCostos IsNot Nothing Then
            If Not CentroCostos.MovimientoCajaBanco.Contains(Me) Then
                CentroCostos.MovimientoCajaBanco.Add(Me)
            End If

            Cco_Id = CentroCostos.CCO_ID
        ElseIf Not skipKeys Then
            Cco_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CentroCostos") AndAlso
                ChangeTracker.OriginalValues("CentroCostos") Is CentroCostos Then
                ChangeTracker.OriginalValues.Remove("CentroCostos")
            Else
                ChangeTracker.RecordOriginalValue("CentroCostos", previousValue)
            End If
            If CentroCostos IsNot Nothing AndAlso Not CentroCostos.ChangeTracker.ChangeTrackingEnabled Then
                CentroCostos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCtaCte(ByVal previousValue As CtaCte)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If CtaCte IsNot Nothing Then
            If Not CtaCte.MovimientoCajaBanco.Contains(Me) Then
                CtaCte.MovimientoCajaBanco.Add(Me)
            End If

            Cct_Id = CtaCte.CCT_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CtaCte") AndAlso
                ChangeTracker.OriginalValues("CtaCte") Is CtaCte Then
                ChangeTracker.OriginalValues.Remove("CtaCte")
            Else
                ChangeTracker.RecordOriginalValue("CtaCte", previousValue)
            End If
            If CtaCte IsNot Nothing AndAlso Not CtaCte.ChangeTracker.ChangeTrackingEnabled Then
                CtaCte.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCtaCte1(ByVal previousValue As CtaCte)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco1.Contains(Me) Then
            previousValue.MovimientoCajaBanco1.Remove(Me)
        End If

        If CtaCte1 IsNot Nothing Then
            If Not CtaCte1.MovimientoCajaBanco1.Contains(Me) Then
                CtaCte1.MovimientoCajaBanco1.Add(Me)
            End If

            Cct_Id_Doc = CtaCte1.CCT_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CtaCte1") AndAlso
                ChangeTracker.OriginalValues("CtaCte1") Is CtaCte1 Then
                ChangeTracker.OriginalValues.Remove("CtaCte1")
            Else
                ChangeTracker.RecordOriginalValue("CtaCte1", previousValue)
            End If
            If CtaCte1 IsNot Nothing AndAlso Not CtaCte1.ChangeTracker.ChangeTrackingEnabled Then
                CtaCte1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCuentasContables(ByVal previousValue As CuentasContables, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If CuentasContables IsNot Nothing Then
            If Not CuentasContables.MovimientoCajaBanco.Contains(Me) Then
                CuentasContables.MovimientoCajaBanco.Add(Me)
            End If

            Cuc_Id = CuentasContables.CUC_ID
        ElseIf Not skipKeys Then
            Cuc_Id = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CuentasContables") AndAlso
                ChangeTracker.OriginalValues("CuentasContables") Is CuentasContables Then
                ChangeTracker.OriginalValues.Remove("CuentasContables")
            Else
                ChangeTracker.RecordOriginalValue("CuentasContables", previousValue)
            End If
            If CuentasContables IsNot Nothing AndAlso Not CuentasContables.ChangeTracker.ChangeTrackingEnabled Then
                CuentasContables.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleTipoDocumentos(ByVal previousValue As DetalleTipoDocumentos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If DetalleTipoDocumentos IsNot Nothing Then
            If Not DetalleTipoDocumentos.MovimientoCajaBanco.Contains(Me) Then
                DetalleTipoDocumentos.MovimientoCajaBanco.Add(Me)
            End If

            Dtd_Id = DetalleTipoDocumentos.DTD_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DetalleTipoDocumentos") AndAlso
                ChangeTracker.OriginalValues("DetalleTipoDocumentos") Is DetalleTipoDocumentos Then
                ChangeTracker.OriginalValues.Remove("DetalleTipoDocumentos")
            Else
                ChangeTracker.RecordOriginalValue("DetalleTipoDocumentos", previousValue)
            End If
            If DetalleTipoDocumentos IsNot Nothing AndAlso Not DetalleTipoDocumentos.ChangeTracker.ChangeTrackingEnabled Then
                DetalleTipoDocumentos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleTipoDocumentos1(ByVal previousValue As DetalleTipoDocumentos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco1.Contains(Me) Then
            previousValue.MovimientoCajaBanco1.Remove(Me)
        End If

        If DetalleTipoDocumentos1 IsNot Nothing Then
            If Not DetalleTipoDocumentos1.MovimientoCajaBanco1.Contains(Me) Then
                DetalleTipoDocumentos1.MovimientoCajaBanco1.Add(Me)
            End If

            Dtd_Id_Doc = DetalleTipoDocumentos1.DTD_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DetalleTipoDocumentos1") AndAlso
                ChangeTracker.OriginalValues("DetalleTipoDocumentos1") Is DetalleTipoDocumentos1 Then
                ChangeTracker.OriginalValues.Remove("DetalleTipoDocumentos1")
            Else
                ChangeTracker.RecordOriginalValue("DetalleTipoDocumentos1", previousValue)
            End If
            If DetalleTipoDocumentos1 IsNot Nothing AndAlso Not DetalleTipoDocumentos1.ChangeTracker.ChangeTrackingEnabled Then
                DetalleTipoDocumentos1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.MovimientoCajaBanco.Contains(Me) Then
                Personas.MovimientoCajaBanco.Add(Me)
            End If

            Per_Id_Ban = Personas.PER_ID
        ElseIf Not skipKeys Then
            Per_Id_Ban = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco1.Contains(Me) Then
            previousValue.MovimientoCajaBanco1.Remove(Me)
        End If

        If Personas1 IsNot Nothing Then
            If Not Personas1.MovimientoCajaBanco1.Contains(Me) Then
                Personas1.MovimientoCajaBanco1.Add(Me)
            End If

            Per_Id_Cli = Personas1.PER_ID
        ElseIf Not skipKeys Then
            Per_Id_Cli = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas1") AndAlso
                ChangeTracker.OriginalValues("Personas1") Is Personas1 Then
                ChangeTracker.OriginalValues.Remove("Personas1")
            Else
                ChangeTracker.RecordOriginalValue("Personas1", previousValue)
            End If
            If Personas1 IsNot Nothing AndAlso Not Personas1.ChangeTracker.ChangeTrackingEnabled Then
                Personas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas2(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco2.Contains(Me) Then
            previousValue.MovimientoCajaBanco2.Remove(Me)
        End If

        If Personas2 IsNot Nothing Then
            If Not Personas2.MovimientoCajaBanco2.Contains(Me) Then
                Personas2.MovimientoCajaBanco2.Add(Me)
            End If

            Per_Id_Ban = Personas2.PER_ID
        ElseIf Not skipKeys Then
            Per_Id_Ban = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas2") AndAlso
                ChangeTracker.OriginalValues("Personas2") Is Personas2 Then
                ChangeTracker.OriginalValues.Remove("Personas2")
            Else
                ChangeTracker.RecordOriginalValue("Personas2", previousValue)
            End If
            If Personas2 IsNot Nothing AndAlso Not Personas2.ChangeTracker.ChangeTrackingEnabled Then
                Personas2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas3(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco3.Contains(Me) Then
            previousValue.MovimientoCajaBanco3.Remove(Me)
        End If

        If Personas3 IsNot Nothing Then
            If Not Personas3.MovimientoCajaBanco3.Contains(Me) Then
                Personas3.MovimientoCajaBanco3.Add(Me)
            End If

            Per_Id_Cli = Personas3.PER_ID
        ElseIf Not skipKeys Then
            Per_Id_Cli = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas3") AndAlso
                ChangeTracker.OriginalValues("Personas3") Is Personas3 Then
                ChangeTracker.OriginalValues.Remove("Personas3")
            Else
                ChangeTracker.RecordOriginalValue("Personas3", previousValue)
            End If
            If Personas3 IsNot Nothing AndAlso Not Personas3.ChangeTracker.ChangeTrackingEnabled Then
                Personas3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupTipoDocumentos(ByVal previousValue As TipoDocumentos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If TipoDocumentos IsNot Nothing Then
            If Not TipoDocumentos.MovimientoCajaBanco.Contains(Me) Then
                TipoDocumentos.MovimientoCajaBanco.Add(Me)
            End If

            Tdo_Id = TipoDocumentos.TDO_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("TipoDocumentos") AndAlso
                ChangeTracker.OriginalValues("TipoDocumentos") Is TipoDocumentos Then
                ChangeTracker.OriginalValues.Remove("TipoDocumentos")
            Else
                ChangeTracker.RecordOriginalValue("TipoDocumentos", previousValue)
            End If
            If TipoDocumentos IsNot Nothing AndAlso Not TipoDocumentos.ChangeTracker.ChangeTrackingEnabled Then
                TipoDocumentos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupTipoDocumentos1(ByVal previousValue As TipoDocumentos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco1.Contains(Me) Then
            previousValue.MovimientoCajaBanco1.Remove(Me)
        End If

        If TipoDocumentos1 IsNot Nothing Then
            If Not TipoDocumentos1.MovimientoCajaBanco1.Contains(Me) Then
                TipoDocumentos1.MovimientoCajaBanco1.Add(Me)
            End If

            Tdo_Id_Doc = TipoDocumentos1.TDO_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("TipoDocumentos1") AndAlso
                ChangeTracker.OriginalValues("TipoDocumentos1") Is TipoDocumentos1 Then
                ChangeTracker.OriginalValues.Remove("TipoDocumentos1")
            Else
                ChangeTracker.RecordOriginalValue("TipoDocumentos1", previousValue)
            End If
            If TipoDocumentos1 IsNot Nothing AndAlso Not TipoDocumentos1.ChangeTracker.ChangeTrackingEnabled Then
                TipoDocumentos1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCajaCtaCte(ByVal previousValue As CajaCtaCte)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco.Contains(Me) Then
            previousValue.MovimientoCajaBanco.Remove(Me)
        End If

        If CajaCtaCte IsNot Nothing Then
            If Not CajaCtaCte.MovimientoCajaBanco.Contains(Me) Then
                CajaCtaCte.MovimientoCajaBanco.Add(Me)
            End If

            Ccc_Id = CajaCtaCte.CCC_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CajaCtaCte") AndAlso
                ChangeTracker.OriginalValues("CajaCtaCte") Is CajaCtaCte Then
                ChangeTracker.OriginalValues.Remove("CajaCtaCte")
            Else
                ChangeTracker.RecordOriginalValue("CajaCtaCte", previousValue)
            End If
            If CajaCtaCte IsNot Nothing AndAlso Not CajaCtaCte.ChangeTracker.ChangeTrackingEnabled Then
                CajaCtaCte.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCajaCtaCte1(ByVal previousValue As CajaCtaCte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.MovimientoCajaBanco1.Contains(Me) Then
            previousValue.MovimientoCajaBanco1.Remove(Me)
        End If

        If CajaCtaCte1 IsNot Nothing Then
            If Not CajaCtaCte1.MovimientoCajaBanco1.Contains(Me) Then
                CajaCtaCte1.MovimientoCajaBanco1.Add(Me)
            End If

            Ccc_Id_Cli = CajaCtaCte1.CCC_ID
        ElseIf Not skipKeys Then
            Ccc_Id_Cli = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CajaCtaCte1") AndAlso
                ChangeTracker.OriginalValues("CajaCtaCte1") Is CajaCtaCte1 Then
                ChangeTracker.OriginalValues.Remove("CajaCtaCte1")
            Else
                ChangeTracker.RecordOriginalValue("CajaCtaCte1", previousValue)
            End If
            If CajaCtaCte1 IsNot Nothing AndAlso Not CajaCtaCte1.ChangeTracker.ChangeTrackingEnabled Then
                CajaCtaCte1.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
