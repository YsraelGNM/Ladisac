'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ActivosFijos))>
<KnownType(GetType(MarcaArticulos))>
<KnownType(GetType(ModeloArticulos))>
<KnownType(GetType(Personas))>
<KnownType(GetType(Placas))>
<KnownType(GetType(TipoUnidad))>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(Sancion))>
<KnownType(GetType(CargaDescargaTransporte))>
<KnownType(GetType(PlanCargaDescargaHorno))>
Partial Public Class UnidadesTransporte
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared UNT_ID As string = "UNT_ID"
				public shared UNT_COMPORTAMIENTO As string = "UNT_COMPORTAMIENTO"
				public shared UNT_TIPO As string = "UNT_TIPO"
				public shared TUN_ID As string = "TUN_ID"
				public shared MAR_ID As string = "MAR_ID"
				public shared MOD_ID As string = "MOD_ID"
				public shared UNT_TARA As string = "UNT_TARA"
				public shared UNT_NRO_INS As string = "UNT_NRO_INS"
				public shared PER_ID As string = "PER_ID"
				public shared UNT_KILOMETRAJE As string = "UNT_KILOMETRAJE"
				public shared UNT_HOROMETRO As string = "UNT_HOROMETRO"
				public shared UNT_NRO_SERIE As string = "UNT_NRO_SERIE"
				public shared UNT_NRO_MOTOR As string = "UNT_NRO_MOTOR"
				public shared UNT_ANIO_FABRICACION As string = "UNT_ANIO_FABRICACION"
				public shared UNT_FECHA_ADQUISICION As string = "UNT_FECHA_ADQUISICION"
				public shared USU_ID As string = "USU_ID"
				public shared UNT_FEC_GRAB As string = "UNT_FEC_GRAB"
				public shared UNT_ESTADO As string = "UNT_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property UNT_ID() As String
        Get
            Return _uNT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'UNT_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _uNT_ID = value
                OnPropertyChanged("UNT_ID")
            End If
        End Set
    End Property

    Private _uNT_ID As String

    <DataMember()>
    Public Property UNT_COMPORTAMIENTO() As Short
        Get
            Return _uNT_COMPORTAMIENTO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_uNT_COMPORTAMIENTO, value) Then
                _uNT_COMPORTAMIENTO = value
                OnPropertyChanged("UNT_COMPORTAMIENTO")
            End If
        End Set
    End Property

    Private _uNT_COMPORTAMIENTO As Short

    <DataMember()>
    Public Property UNT_TIPO() As Short
        Get
            Return _uNT_TIPO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_uNT_TIPO, value) Then
                _uNT_TIPO = value
                OnPropertyChanged("UNT_TIPO")
            End If
        End Set
    End Property

    Private _uNT_TIPO As Short

    <DataMember()>
    Public Property TUN_ID() As String
        Get
            Return _tUN_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tUN_ID, value) Then
                ChangeTracker.RecordOriginalValue("TUN_ID", _tUN_ID)
                If Not IsDeserializing Then
                    If TipoUnidad IsNot Nothing AndAlso Not Equals(TipoUnidad.TUN_ID, value) Then
                        TipoUnidad = Nothing
                    End If
                End If
                _tUN_ID = value
                OnPropertyChanged("TUN_ID")
            End If
        End Set
    End Property

    Private _tUN_ID As String

    <DataMember()>
    Public Property MAR_ID() As String
        Get
            Return _mAR_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_mAR_ID, value) Then
                ChangeTracker.RecordOriginalValue("MAR_ID", _mAR_ID)
                If Not IsDeserializing Then
                    If MarcaArticulos IsNot Nothing AndAlso Not Equals(MarcaArticulos.MAR_ID, value) Then
                        MarcaArticulos = Nothing
                    End If
                End If
                _mAR_ID = value
                OnPropertyChanged("MAR_ID")
            End If
        End Set
    End Property

    Private _mAR_ID As String

    <DataMember()>
    Public Property MOD_ID() As String
        Get
            Return _mOD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_mOD_ID, value) Then
                ChangeTracker.RecordOriginalValue("MOD_ID", _mOD_ID)
                If Not IsDeserializing Then
                    If ModeloArticulos IsNot Nothing AndAlso Not Equals(ModeloArticulos.MOD_ID, value) Then
                        ModeloArticulos = Nothing
                    End If
                End If
                _mOD_ID = value
                OnPropertyChanged("MOD_ID")
            End If
        End Set
    End Property

    Private _mOD_ID As String

    <DataMember()>
    Public Property UNT_TARA() As Nullable(Of Decimal)
        Get
            Return _uNT_TARA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_uNT_TARA, value) Then
                _uNT_TARA = value
                OnPropertyChanged("UNT_TARA")
            End If
        End Set
    End Property

    Private _uNT_TARA As Nullable(Of Decimal)

    <DataMember()>
    Public Property UNT_NRO_INS() As String
        Get
            Return _uNT_NRO_INS
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_NRO_INS, value) Then
                _uNT_NRO_INS = value
                OnPropertyChanged("UNT_NRO_INS")
            End If
        End Set
    End Property

    Private _uNT_NRO_INS As String

    <DataMember()>
    Public Property PER_ID() As String
        Get
            Return _pER_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID", _pER_ID)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID = value
                OnPropertyChanged("PER_ID")
            End If
        End Set
    End Property

    Private _pER_ID As String

    <DataMember()>
    Public Property UNT_KILOMETRAJE() As Nullable(Of Decimal)
        Get
            Return _uNT_KILOMETRAJE
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_uNT_KILOMETRAJE, value) Then
                _uNT_KILOMETRAJE = value
                OnPropertyChanged("UNT_KILOMETRAJE")
            End If
        End Set
    End Property

    Private _uNT_KILOMETRAJE As Nullable(Of Decimal)

    <DataMember()>
    Public Property UNT_HOROMETRO() As Nullable(Of Decimal)
        Get
            Return _uNT_HOROMETRO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_uNT_HOROMETRO, value) Then
                _uNT_HOROMETRO = value
                OnPropertyChanged("UNT_HOROMETRO")
            End If
        End Set
    End Property

    Private _uNT_HOROMETRO As Nullable(Of Decimal)

    <DataMember()>
    Public Property UNT_NRO_SERIE() As String
        Get
            Return _uNT_NRO_SERIE
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_NRO_SERIE, value) Then
                _uNT_NRO_SERIE = value
                OnPropertyChanged("UNT_NRO_SERIE")
            End If
        End Set
    End Property

    Private _uNT_NRO_SERIE As String

    <DataMember()>
    Public Property UNT_NRO_MOTOR() As String
        Get
            Return _uNT_NRO_MOTOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_uNT_NRO_MOTOR, value) Then
                _uNT_NRO_MOTOR = value
                OnPropertyChanged("UNT_NRO_MOTOR")
            End If
        End Set
    End Property

    Private _uNT_NRO_MOTOR As String

    <DataMember()>
    Public Property UNT_ANIO_FABRICACION() As Nullable(Of Decimal)
        Get
            Return _uNT_ANIO_FABRICACION
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_uNT_ANIO_FABRICACION, value) Then
                _uNT_ANIO_FABRICACION = value
                OnPropertyChanged("UNT_ANIO_FABRICACION")
            End If
        End Set
    End Property

    Private _uNT_ANIO_FABRICACION As Nullable(Of Decimal)

    <DataMember()>
    Public Property UNT_FECHA_ADQUISICION() As Nullable(Of Date)
        Get
            Return _uNT_FECHA_ADQUISICION
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_uNT_FECHA_ADQUISICION, value) Then
                _uNT_FECHA_ADQUISICION = value
                OnPropertyChanged("UNT_FECHA_ADQUISICION")
            End If
        End Set
    End Property

    Private _uNT_FECHA_ADQUISICION As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property UNT_FEC_GRAB() As Date
        Get
            Return _uNT_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_uNT_FEC_GRAB, value) Then
                _uNT_FEC_GRAB = value
                OnPropertyChanged("UNT_FEC_GRAB")
            End If
        End Set
    End Property

    Private _uNT_FEC_GRAB As Date

    <DataMember()>
    Public Property UNT_ESTADO() As Boolean
        Get
            Return _uNT_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_uNT_ESTADO, value) Then
                _uNT_ESTADO = value
                OnPropertyChanged("UNT_ESTADO")
            End If
        End Set
    End Property

    Private _uNT_ESTADO As Boolean

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property ActivosFijos() As TrackableCollection(Of ActivosFijos)
        Get
            If _activosFijos Is Nothing Then
                _activosFijos = New TrackableCollection(Of ActivosFijos)
                AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
            End If
            Return _activosFijos
        End Get
        Set(ByVal value As TrackableCollection(Of ActivosFijos))
            If Not Object.ReferenceEquals(_activosFijos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _activosFijos IsNot Nothing Then
                    RemoveHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                _activosFijos = value
                If _activosFijos IsNot Nothing Then
                    AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                OnNavigationPropertyChanged("ActivosFijos")
            End If
        End Set
    End Property

    Private _activosFijos As TrackableCollection(Of ActivosFijos)

    <DataMember()>
    Public Property MarcaArticulos() As MarcaArticulos
        Get
            Return _marcaArticulos
        End Get
        Set(ByVal value As MarcaArticulos)
            If _marcaArticulos IsNot value Then
                Dim previousValue As MarcaArticulos = _marcaArticulos
                _marcaArticulos = value
                FixupMarcaArticulos(previousValue)
                OnNavigationPropertyChanged("MarcaArticulos")
            End If
        End Set
    End Property

    Private _marcaArticulos As MarcaArticulos


    <DataMember()>
    Public Property ModeloArticulos() As ModeloArticulos
        Get
            Return _modeloArticulos
        End Get
        Set(ByVal value As ModeloArticulos)
            If _modeloArticulos IsNot value Then
                Dim previousValue As ModeloArticulos = _modeloArticulos
                _modeloArticulos = value
                FixupModeloArticulos(previousValue)
                OnNavigationPropertyChanged("ModeloArticulos")
            End If
        End Set
    End Property

    Private _modeloArticulos As ModeloArticulos


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Placas() As TrackableCollection(Of Placas)
        Get
            If _placas Is Nothing Then
                _placas = New TrackableCollection(Of Placas)
                AddHandler _placas.CollectionChanged, AddressOf FixupPlacas
            End If
            Return _placas
        End Get
        Set(ByVal value As TrackableCollection(Of Placas))
            If Not Object.ReferenceEquals(_placas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _placas IsNot Nothing Then
                    RemoveHandler _placas.CollectionChanged, AddressOf FixupPlacas
                End If
                _placas = value
                If _placas IsNot Nothing Then
                    AddHandler _placas.CollectionChanged, AddressOf FixupPlacas
                End If
                OnNavigationPropertyChanged("Placas")
            End If
        End Set
    End Property

    Private _placas As TrackableCollection(Of Placas)

    <DataMember()>
    Public Property Placas1() As TrackableCollection(Of Placas)
        Get
            If _placas1 Is Nothing Then
                _placas1 = New TrackableCollection(Of Placas)
                AddHandler _placas1.CollectionChanged, AddressOf FixupPlacas1
            End If
            Return _placas1
        End Get
        Set(ByVal value As TrackableCollection(Of Placas))
            If Not Object.ReferenceEquals(_placas1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _placas1 IsNot Nothing Then
                    RemoveHandler _placas1.CollectionChanged, AddressOf FixupPlacas1
                End If
                _placas1 = value
                If _placas1 IsNot Nothing Then
                    AddHandler _placas1.CollectionChanged, AddressOf FixupPlacas1
                End If
                OnNavigationPropertyChanged("Placas1")
            End If
        End Set
    End Property

    Private _placas1 As TrackableCollection(Of Placas)

    <DataMember()>
    Public Property TipoUnidad() As TipoUnidad
        Get
            Return _tipoUnidad
        End Get
        Set(ByVal value As TipoUnidad)
            If _tipoUnidad IsNot value Then
                Dim previousValue As TipoUnidad = _tipoUnidad
                _tipoUnidad = value
                FixupTipoUnidad(previousValue)
                OnNavigationPropertyChanged("TipoUnidad")
            End If
        End Set
    End Property

    Private _tipoUnidad As TipoUnidad


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property Sancion() As TrackableCollection(Of Sancion)
        Get
            If _sancion Is Nothing Then
                _sancion = New TrackableCollection(Of Sancion)
                AddHandler _sancion.CollectionChanged, AddressOf FixupSancion
            End If
            Return _sancion
        End Get
        Set(ByVal value As TrackableCollection(Of Sancion))
            If Not Object.ReferenceEquals(_sancion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _sancion IsNot Nothing Then
                    RemoveHandler _sancion.CollectionChanged, AddressOf FixupSancion
                End If
                _sancion = value
                If _sancion IsNot Nothing Then
                    AddHandler _sancion.CollectionChanged, AddressOf FixupSancion
                End If
                OnNavigationPropertyChanged("Sancion")
            End If
        End Set
    End Property

    Private _sancion As TrackableCollection(Of Sancion)

    <DataMember()>
    Public Property CargaDescargaTransporte() As TrackableCollection(Of CargaDescargaTransporte)
        Get
            If _cargaDescargaTransporte Is Nothing Then
                _cargaDescargaTransporte = New TrackableCollection(Of CargaDescargaTransporte)
                AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
            End If
            Return _cargaDescargaTransporte
        End Get
        Set(ByVal value As TrackableCollection(Of CargaDescargaTransporte))
            If Not Object.ReferenceEquals(_cargaDescargaTransporte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cargaDescargaTransporte IsNot Nothing Then
                    RemoveHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                _cargaDescargaTransporte = value
                If _cargaDescargaTransporte IsNot Nothing Then
                    AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                OnNavigationPropertyChanged("CargaDescargaTransporte")
            End If
        End Set
    End Property

    Private _cargaDescargaTransporte As TrackableCollection(Of CargaDescargaTransporte)

    <DataMember()>
    Public Property PlanCargaDescargaHorno() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno Is Nothing Then
                _planCargaDescargaHorno = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno
            End If
            Return _planCargaDescargaHorno
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno
                End If
                _planCargaDescargaHorno = value
                If _planCargaDescargaHorno IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno1() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno1 Is Nothing Then
                _planCargaDescargaHorno1 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno1
            End If
            Return _planCargaDescargaHorno1
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno1 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno1
                End If
                _planCargaDescargaHorno1 = value
                If _planCargaDescargaHorno1 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno1
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno1")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno1 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno2() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno2 Is Nothing Then
                _planCargaDescargaHorno2 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno2.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2
            End If
            Return _planCargaDescargaHorno2
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno2 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno2.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2
                End If
                _planCargaDescargaHorno2 = value
                If _planCargaDescargaHorno2 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno2.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno2")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno2 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno3() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno3 Is Nothing Then
                _planCargaDescargaHorno3 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno3.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3
            End If
            Return _planCargaDescargaHorno3
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno3 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno3.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3
                End If
                _planCargaDescargaHorno3 = value
                If _planCargaDescargaHorno3 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno3.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno3")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno3 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno4() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno4 Is Nothing Then
                _planCargaDescargaHorno4 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno4.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno4
            End If
            Return _planCargaDescargaHorno4
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno4, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno4 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno4.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno4
                End If
                _planCargaDescargaHorno4 = value
                If _planCargaDescargaHorno4 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno4.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno4
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno4")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno4 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno5() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno5 Is Nothing Then
                _planCargaDescargaHorno5 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno5.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno5
            End If
            Return _planCargaDescargaHorno5
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno5, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno5 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno5.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno5
                End If
                _planCargaDescargaHorno5 = value
                If _planCargaDescargaHorno5 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno5.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno5
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno5")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno5 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno6() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno6 Is Nothing Then
                _planCargaDescargaHorno6 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno6.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno6
            End If
            Return _planCargaDescargaHorno6
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno6, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno6 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno6.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno6
                End If
                _planCargaDescargaHorno6 = value
                If _planCargaDescargaHorno6 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno6.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno6
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno6")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno6 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno7() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno7 Is Nothing Then
                _planCargaDescargaHorno7 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno7.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno7
            End If
            Return _planCargaDescargaHorno7
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno7, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno7 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno7.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno7
                End If
                _planCargaDescargaHorno7 = value
                If _planCargaDescargaHorno7 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno7.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno7
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno7")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno7 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno2_1() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno2_1 Is Nothing Then
                _planCargaDescargaHorno2_1 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno2_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2_1
            End If
            Return _planCargaDescargaHorno2_1
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno2_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno2_1 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno2_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2_1
                End If
                _planCargaDescargaHorno2_1 = value
                If _planCargaDescargaHorno2_1 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno2_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno2_1
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno2_1")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno2_1 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno3_1() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno3_1 Is Nothing Then
                _planCargaDescargaHorno3_1 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno3_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3_1
            End If
            Return _planCargaDescargaHorno3_1
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno3_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno3_1 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno3_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3_1
                End If
                _planCargaDescargaHorno3_1 = value
                If _planCargaDescargaHorno3_1 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno3_1.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno3_1
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno3_1")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno3_1 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno10() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno10 Is Nothing Then
                _planCargaDescargaHorno10 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno10.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno10
            End If
            Return _planCargaDescargaHorno10
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno10, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno10 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno10.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno10
                End If
                _planCargaDescargaHorno10 = value
                If _planCargaDescargaHorno10 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno10.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno10
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno10")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno10 As TrackableCollection(Of PlanCargaDescargaHorno)

    <DataMember()>
    Public Property PlanCargaDescargaHorno11() As TrackableCollection(Of PlanCargaDescargaHorno)
        Get
            If _planCargaDescargaHorno11 Is Nothing Then
                _planCargaDescargaHorno11 = New TrackableCollection(Of PlanCargaDescargaHorno)
                AddHandler _planCargaDescargaHorno11.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno11
            End If
            Return _planCargaDescargaHorno11
        End Get
        Set(ByVal value As TrackableCollection(Of PlanCargaDescargaHorno))
            If Not Object.ReferenceEquals(_planCargaDescargaHorno11, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _planCargaDescargaHorno11 IsNot Nothing Then
                    RemoveHandler _planCargaDescargaHorno11.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno11
                End If
                _planCargaDescargaHorno11 = value
                If _planCargaDescargaHorno11 IsNot Nothing Then
                    AddHandler _planCargaDescargaHorno11.CollectionChanged, AddressOf FixupPlanCargaDescargaHorno11
                End If
                OnNavigationPropertyChanged("PlanCargaDescargaHorno11")
            End If
        End Set
    End Property

    Private _planCargaDescargaHorno11 As TrackableCollection(Of PlanCargaDescargaHorno)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ActivosFijos.Clear()
        MarcaArticulos = Nothing
        ModeloArticulos = Nothing
        Personas = Nothing
        Placas.Clear()
        Placas1.Clear()
        TipoUnidad = Nothing
        Usuarios = Nothing
        Sancion.Clear()
        CargaDescargaTransporte.Clear()
        PlanCargaDescargaHorno.Clear()
        PlanCargaDescargaHorno1.Clear()
        PlanCargaDescargaHorno2.Clear()
        PlanCargaDescargaHorno3.Clear()
        PlanCargaDescargaHorno4.Clear()
        PlanCargaDescargaHorno5.Clear()
        PlanCargaDescargaHorno6.Clear()
        PlanCargaDescargaHorno7.Clear()
        PlanCargaDescargaHorno2_1.Clear()
        PlanCargaDescargaHorno3_1.Clear()
        PlanCargaDescargaHorno10.Clear()
        PlanCargaDescargaHorno11.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupMarcaArticulos(ByVal previousValue As MarcaArticulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.UnidadesTransporte.Contains(Me) Then
            previousValue.UnidadesTransporte.Remove(Me)
        End If

        If MarcaArticulos IsNot Nothing Then
            If Not MarcaArticulos.UnidadesTransporte.Contains(Me) Then
                MarcaArticulos.UnidadesTransporte.Add(Me)
            End If

            MAR_ID = MarcaArticulos.MAR_ID
        ElseIf Not skipKeys Then
            MAR_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("MarcaArticulos") AndAlso
                ChangeTracker.OriginalValues("MarcaArticulos") Is MarcaArticulos Then
                ChangeTracker.OriginalValues.Remove("MarcaArticulos")
            Else
                ChangeTracker.RecordOriginalValue("MarcaArticulos", previousValue)
            End If
            If MarcaArticulos IsNot Nothing AndAlso Not MarcaArticulos.ChangeTracker.ChangeTrackingEnabled Then
                MarcaArticulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupModeloArticulos(ByVal previousValue As ModeloArticulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.UnidadesTransporte.Contains(Me) Then
            previousValue.UnidadesTransporte.Remove(Me)
        End If

        If ModeloArticulos IsNot Nothing Then
            If Not ModeloArticulos.UnidadesTransporte.Contains(Me) Then
                ModeloArticulos.UnidadesTransporte.Add(Me)
            End If

            MOD_ID = ModeloArticulos.MOD_ID
        ElseIf Not skipKeys Then
            MOD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ModeloArticulos") AndAlso
                ChangeTracker.OriginalValues("ModeloArticulos") Is ModeloArticulos Then
                ChangeTracker.OriginalValues.Remove("ModeloArticulos")
            Else
                ChangeTracker.RecordOriginalValue("ModeloArticulos", previousValue)
            End If
            If ModeloArticulos IsNot Nothing AndAlso Not ModeloArticulos.ChangeTracker.ChangeTrackingEnabled Then
                ModeloArticulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID = Personas.PER_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupTipoUnidad(ByVal previousValue As TipoUnidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.UnidadesTransporte.Contains(Me) Then
            previousValue.UnidadesTransporte.Remove(Me)
        End If

        If TipoUnidad IsNot Nothing Then
            If Not TipoUnidad.UnidadesTransporte.Contains(Me) Then
                TipoUnidad.UnidadesTransporte.Add(Me)
            End If

            TUN_ID = TipoUnidad.TUN_ID
        ElseIf Not skipKeys Then
            TUN_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("TipoUnidad") AndAlso
                ChangeTracker.OriginalValues("TipoUnidad") Is TipoUnidad Then
                ChangeTracker.OriginalValues.Remove("TipoUnidad")
            Else
                ChangeTracker.RecordOriginalValue("TipoUnidad", previousValue)
            End If
            If TipoUnidad IsNot Nothing AndAlso Not TipoUnidad.ChangeTracker.ChangeTrackingEnabled Then
                TipoUnidad.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupActivosFijos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ActivosFijos In e.NewItems
                item.UnidadesTransporte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ActivosFijos In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte, Me) Then
                    item.UnidadesTransporte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlacas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Placas In e.NewItems
                item.UnidadesTransporte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Placas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Placas In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte, Me) Then
                    item.UnidadesTransporte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Placas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlacas1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Placas In e.NewItems
                item.UnidadesTransporte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Placas1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Placas In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte1, Me) Then
                    item.UnidadesTransporte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Placas1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSancion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Sancion In e.NewItems
                item.UnidadesTransporte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Sancion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Sancion In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte, Me) Then
                    item.UnidadesTransporte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Sancion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCargaDescargaTransporte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.NewItems
                item.UnidadesTransporte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte, Me) Then
                    item.UnidadesTransporte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte, Me) Then
                    item.UnidadesTransporte = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte1, Me) Then
                    item.UnidadesTransporte1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte2, Me) Then
                    item.UnidadesTransporte2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte3, Me) Then
                    item.UnidadesTransporte3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno4(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte4 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno4", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte4, Me) Then
                    item.UnidadesTransporte4 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno4", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno5(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte5 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno5", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte5, Me) Then
                    item.UnidadesTransporte5 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno5", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno6(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte6 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno6", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte6, Me) Then
                    item.UnidadesTransporte6 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno6", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno7(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte7 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno7", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte7, Me) Then
                    item.UnidadesTransporte7 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno7", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno2_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte2_1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno2_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte2_1, Me) Then
                    item.UnidadesTransporte2_1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno2_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno3_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte3_1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno3_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte3_1, Me) Then
                    item.UnidadesTransporte3_1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno3_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno10(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte10 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno10", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte10, Me) Then
                    item.UnidadesTransporte10 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno10", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPlanCargaDescargaHorno11(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.NewItems
                item.UnidadesTransporte11 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PlanCargaDescargaHorno11", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PlanCargaDescargaHorno In e.OldItems
                If ReferenceEquals(item.UnidadesTransporte11, Me) Then
                    item.UnidadesTransporte11 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PlanCargaDescargaHorno11", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
