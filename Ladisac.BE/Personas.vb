'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ActivosFijos))>
<KnownType(GetType(Asignaciones))>
<KnownType(GetType(Comprobantes))>
<KnownType(GetType(DetalleAsientosManuales))>
<KnownType(GetType(RestriccionArticulo))>
<KnownType(GetType(CartaFianza))>
<KnownType(GetType(DescuentoIncrementoTipoVentaPersonas))>
<KnownType(GetType(ListaPreciosArticulos))>
<KnownType(GetType(ContactoPersona))>
<KnownType(GetType(DatosUsuarios))>
<KnownType(GetType(DireccionesPersonas))>
<KnownType(GetType(DocPersonas))>
<KnownType(GetType(ComedorPLL))>
<KnownType(GetType(DetalleComedorPLL))>
<KnownType(GetType(DetalleReparoTrabajador))>
<KnownType(GetType(CajaCtaCte))>
<KnownType(GetType(DatosLaborales))>
<KnownType(GetType(DatosTrabajadorJudicial))>
<KnownType(GetType(DetalleGrupoTrabajo))>
<KnownType(GetType(DetalleTesoreria))>
<KnownType(GetType(MedioPagoTesoreria))>
<KnownType(GetType(Personas))>
<KnownType(GetType(Usuarios))>
<KnownType(GetType(PrestamosTrabajador))>
<KnownType(GetType(ReparoTrabajador))>
<KnownType(GetType(RolPersonaTipoPersona))>
<KnownType(GetType(TesoreriaPlanillas))>
<KnownType(GetType(Tesoreria))>
<KnownType(GetType(DetalleTrabajadorHoras))>
<KnownType(GetType(PermisosTrabajador))>
<KnownType(GetType(AsientosContables))>
<KnownType(GetType(Leasing))>
<KnownType(GetType(Marcaciones))>
<KnownType(GetType(MovimientoCajaBanco))>
<KnownType(GetType(Documentos))>
<KnownType(GetType(GrupoTrabajoDiasDescanso))>
<KnownType(GetType(Despachos))>
<KnownType(GetType(DetalleGrupoEmpleado))>
<KnownType(GetType(GrupoEmpleado))>
<KnownType(GetType(CajeroAnexo))>
<KnownType(GetType(ProvisionCompras))>
<KnownType(GetType(ReferenciaProvisionCompras))>
<KnownType(GetType(DocumentosPromocion))>
<KnownType(GetType(RubroPersona))>
<KnownType(GetType(BloqueosCodigoPersona))>
<KnownType(GetType(CuadroComparativo))>
<KnownType(GetType(RegistroEquipo))>
<KnownType(GetType(FaltaSancion))>
<KnownType(GetType(Sancion))>
<KnownType(GetType(DocumentoGuias))>
<KnownType(GetType(PCDCotizacionDetalle))>
<KnownType(GetType(OrdenServicio))>
<KnownType(GetType(SolicitudSoporte))>
<KnownType(GetType(RecepcionDocumento))>
<KnownType(GetType(FotoPersonas))>
<KnownType(GetType(BloqueoVendedor))>
<KnownType(GetType(RegistroMaquina))>
<KnownType(GetType(FichaInspeccion))>
<KnownType(GetType(DocuIso))>
<KnownType(GetType(OrdenCompra))>
<KnownType(GetType(SolicitudAjustePrecio))>
<KnownType(GetType(CargaDescargaTransporte))>
<KnownType(GetType(RendicionGastos))>
<KnownType(GetType(DetallePrestamo))>
<KnownType(GetType(Prestamo))>
<KnownType(GetType(CuentaRendirDetalle))>
Partial Public Class Personas
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared PER_ID As string = "PER_ID"
				public shared PER_CLIENTE As string = "PER_CLIENTE"
				public shared PER_CLIENTE_OP_CON As string = "PER_CLIENTE_OP_CON"
				public shared PER_PROVEEDOR As string = "PER_PROVEEDOR"
				public shared PER_PROVEEDOR_OP_CON As string = "PER_PROVEEDOR_OP_CON"
				public shared PER_TRANSPORTISTA As string = "PER_TRANSPORTISTA"
				public shared PER_TRANSPORTISTA_OP_CON As string = "PER_TRANSPORTISTA_OP_CON"
				public shared PER_TRABAJADOR As string = "PER_TRABAJADOR"
				public shared PER_TRABAJADOR_OP_CON As string = "PER_TRABAJADOR_OP_CON"
				public shared PER_BANCO As string = "PER_BANCO"
				public shared PER_BANCO_OP_CON As string = "PER_BANCO_OP_CON"
				public shared PER_GRUPO As string = "PER_GRUPO"
				public shared PER_GRUPO_OP_CON As string = "PER_GRUPO_OP_CON"
				public shared PER_CONTACTO As string = "PER_CONTACTO"
				public shared PER_CONTACTO_OP_CON As string = "PER_CONTACTO_OP_CON"
				public shared PER_TRANSP_PROPIO As string = "PER_TRANSP_PROPIO"
				public shared PER_NOMBRES As string = "PER_NOMBRES"
				public shared PER_APE_PAT As string = "PER_APE_PAT"
				public shared PER_APE_MAT As string = "PER_APE_MAT"
				public shared PER_BREVETE As string = "PER_BREVETE"
				public shared PER_FORMA_VENTA As string = "PER_FORMA_VENTA"
				public shared DIR_ID As string = "DIR_ID"
				public shared PER_TELEFONOS As string = "PER_TELEFONOS"
				public shared PER_EMAIL As string = "PER_EMAIL"
				public shared PER_PAGINA_WEB As string = "PER_PAGINA_WEB"
				public shared PER_LINEA_CREDITO As string = "PER_LINEA_CREDITO"
				public shared PER_DIAS_CREDITO As string = "PER_DIAS_CREDITO"
				public shared PER_ID_VEN As string = "PER_ID_VEN"
				public shared PER_ID_COB As string = "PER_ID_COB"
				public shared PER_ID_TRA As string = "PER_ID_TRA"
				public shared PER_ID_BAN As string = "PER_ID_BAN"
				public shared PER_ID_GRU As string = "PER_ID_GRU"
				public shared PER_DIASEM_PAGO As string = "PER_DIASEM_PAGO"
				public shared PER_COND_DIASEM As string = "PER_COND_DIASEM"
				public shared PER_DIAMES_PAGO As string = "PER_DIAMES_PAGO"
				public shared PER_DOC_PAGO As string = "PER_DOC_PAGO"
				public shared PER_HORA_PAGO As string = "PER_HORA_PAGO"
				public shared PER_OBSERVACIONES As string = "PER_OBSERVACIONES"
				public shared PER_PROMOCIONES As string = "PER_PROMOCIONES"
				public shared PER_CARTA_FIANZA As string = "PER_CARTA_FIANZA"
				public shared PER_CUOTA_MENSUAL As string = "PER_CUOTA_MENSUAL"
				public shared PER_CUOTA_OBJETIVO As string = "PER_CUOTA_OBJETIVO"
				public shared PER_BONO As string = "PER_BONO"
				public shared CCC_ID As string = "CCC_ID"
				public shared PER_CARGO As string = "PER_CARGO"
				public shared PER_REP_LEGAL As string = "PER_REP_LEGAL"
				public shared PER_FIRMA_AUT As string = "PER_FIRMA_AUT"
				public shared PER_PROCESAR_DESCUENTO As string = "PER_PROCESAR_DESCUENTO"
				public shared PER_ALIAS As string = "PER_ALIAS"
				public shared USU_ID As string = "USU_ID"
				public shared PER_FEC_GRAB As string = "PER_FEC_GRAB"
				public shared PER_ESTADO As string = "PER_ESTADO"
				public shared PER_CALIFICACION As string = "PER_CALIFICACION"
				public shared PER_LINEA_CREDITO_ESTADO As string = "PER_LINEA_CREDITO_ESTADO"
				public shared PER_FECHA_ALTA As string = "PER_FECHA_ALTA"
				public shared PER_FECHA_VENC As string = "PER_FECHA_VENC"
				public shared PER_GARANTIA As string = "PER_GARANTIA"
				public shared PER_EXCESO_LINEA As string = "PER_EXCESO_LINEA"
		    End Structure
	



    <DataMember()>
    Public Property PER_ID() As String
        Get
            Return _pER_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'PER_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _pER_ID = value
                OnPropertyChanged("PER_ID")
            End If
        End Set
    End Property

    Private _pER_ID As String

    <DataMember()>
    Public Property PER_CLIENTE() As Boolean
        Get
            Return _pER_CLIENTE
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_CLIENTE, value) Then
                _pER_CLIENTE = value
                OnPropertyChanged("PER_CLIENTE")
            End If
        End Set
    End Property

    Private _pER_CLIENTE As Boolean

    <DataMember()>
    Public Property PER_CLIENTE_OP_CON() As Short
        Get
            Return _pER_CLIENTE_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_CLIENTE_OP_CON, value) Then
                _pER_CLIENTE_OP_CON = value
                OnPropertyChanged("PER_CLIENTE_OP_CON")
            End If
        End Set
    End Property

    Private _pER_CLIENTE_OP_CON As Short

    <DataMember()>
    Public Property PER_PROVEEDOR() As Boolean
        Get
            Return _pER_PROVEEDOR
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_PROVEEDOR, value) Then
                _pER_PROVEEDOR = value
                OnPropertyChanged("PER_PROVEEDOR")
            End If
        End Set
    End Property

    Private _pER_PROVEEDOR As Boolean

    <DataMember()>
    Public Property PER_PROVEEDOR_OP_CON() As Short
        Get
            Return _pER_PROVEEDOR_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_PROVEEDOR_OP_CON, value) Then
                _pER_PROVEEDOR_OP_CON = value
                OnPropertyChanged("PER_PROVEEDOR_OP_CON")
            End If
        End Set
    End Property

    Private _pER_PROVEEDOR_OP_CON As Short

    <DataMember()>
    Public Property PER_TRANSPORTISTA() As Boolean
        Get
            Return _pER_TRANSPORTISTA
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_TRANSPORTISTA, value) Then
                _pER_TRANSPORTISTA = value
                OnPropertyChanged("PER_TRANSPORTISTA")
            End If
        End Set
    End Property

    Private _pER_TRANSPORTISTA As Boolean

    <DataMember()>
    Public Property PER_TRANSPORTISTA_OP_CON() As Short
        Get
            Return _pER_TRANSPORTISTA_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_TRANSPORTISTA_OP_CON, value) Then
                _pER_TRANSPORTISTA_OP_CON = value
                OnPropertyChanged("PER_TRANSPORTISTA_OP_CON")
            End If
        End Set
    End Property

    Private _pER_TRANSPORTISTA_OP_CON As Short

    <DataMember()>
    Public Property PER_TRABAJADOR() As Boolean
        Get
            Return _pER_TRABAJADOR
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_TRABAJADOR, value) Then
                _pER_TRABAJADOR = value
                OnPropertyChanged("PER_TRABAJADOR")
            End If
        End Set
    End Property

    Private _pER_TRABAJADOR As Boolean

    <DataMember()>
    Public Property PER_TRABAJADOR_OP_CON() As Short
        Get
            Return _pER_TRABAJADOR_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_TRABAJADOR_OP_CON, value) Then
                _pER_TRABAJADOR_OP_CON = value
                OnPropertyChanged("PER_TRABAJADOR_OP_CON")
            End If
        End Set
    End Property

    Private _pER_TRABAJADOR_OP_CON As Short

    <DataMember()>
    Public Property PER_BANCO() As Boolean
        Get
            Return _pER_BANCO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_BANCO, value) Then
                _pER_BANCO = value
                OnPropertyChanged("PER_BANCO")
            End If
        End Set
    End Property

    Private _pER_BANCO As Boolean

    <DataMember()>
    Public Property PER_BANCO_OP_CON() As Short
        Get
            Return _pER_BANCO_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_BANCO_OP_CON, value) Then
                _pER_BANCO_OP_CON = value
                OnPropertyChanged("PER_BANCO_OP_CON")
            End If
        End Set
    End Property

    Private _pER_BANCO_OP_CON As Short

    <DataMember()>
    Public Property PER_GRUPO() As Boolean
        Get
            Return _pER_GRUPO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_GRUPO, value) Then
                _pER_GRUPO = value
                OnPropertyChanged("PER_GRUPO")
            End If
        End Set
    End Property

    Private _pER_GRUPO As Boolean

    <DataMember()>
    Public Property PER_GRUPO_OP_CON() As Short
        Get
            Return _pER_GRUPO_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_GRUPO_OP_CON, value) Then
                _pER_GRUPO_OP_CON = value
                OnPropertyChanged("PER_GRUPO_OP_CON")
            End If
        End Set
    End Property

    Private _pER_GRUPO_OP_CON As Short

    <DataMember()>
    Public Property PER_CONTACTO() As Boolean
        Get
            Return _pER_CONTACTO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_CONTACTO, value) Then
                _pER_CONTACTO = value
                OnPropertyChanged("PER_CONTACTO")
            End If
        End Set
    End Property

    Private _pER_CONTACTO As Boolean

    <DataMember()>
    Public Property PER_CONTACTO_OP_CON() As Short
        Get
            Return _pER_CONTACTO_OP_CON
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_CONTACTO_OP_CON, value) Then
                _pER_CONTACTO_OP_CON = value
                OnPropertyChanged("PER_CONTACTO_OP_CON")
            End If
        End Set
    End Property

    Private _pER_CONTACTO_OP_CON As Short

    <DataMember()>
    Public Property PER_TRANSP_PROPIO() As Short
        Get
            Return _pER_TRANSP_PROPIO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_TRANSP_PROPIO, value) Then
                _pER_TRANSP_PROPIO = value
                OnPropertyChanged("PER_TRANSP_PROPIO")
            End If
        End Set
    End Property

    Private _pER_TRANSP_PROPIO As Short

    <DataMember()>
    Public Property PER_NOMBRES() As String
        Get
            Return _pER_NOMBRES
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_NOMBRES, value) Then
                _pER_NOMBRES = value
                OnPropertyChanged("PER_NOMBRES")
            End If
        End Set
    End Property

    Private _pER_NOMBRES As String

    <DataMember()>
    Public Property PER_APE_PAT() As String
        Get
            Return _pER_APE_PAT
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_APE_PAT, value) Then
                _pER_APE_PAT = value
                OnPropertyChanged("PER_APE_PAT")
            End If
        End Set
    End Property

    Private _pER_APE_PAT As String

    <DataMember()>
    Public Property PER_APE_MAT() As String
        Get
            Return _pER_APE_MAT
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_APE_MAT, value) Then
                _pER_APE_MAT = value
                OnPropertyChanged("PER_APE_MAT")
            End If
        End Set
    End Property

    Private _pER_APE_MAT As String

    <DataMember()>
    Public Property PER_BREVETE() As String
        Get
            Return _pER_BREVETE
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_BREVETE, value) Then
                _pER_BREVETE = value
                OnPropertyChanged("PER_BREVETE")
            End If
        End Set
    End Property

    Private _pER_BREVETE As String

    <DataMember()>
    Public Property PER_FORMA_VENTA() As Short
        Get
            Return _pER_FORMA_VENTA
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_FORMA_VENTA, value) Then
                _pER_FORMA_VENTA = value
                OnPropertyChanged("PER_FORMA_VENTA")
            End If
        End Set
    End Property

    Private _pER_FORMA_VENTA As Short

    <DataMember()>
    Public Property DIR_ID() As String
        Get
            Return _dIR_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dIR_ID, value) Then
                ChangeTracker.RecordOriginalValue("DIR_ID", _dIR_ID)
                If Not IsDeserializing Then
                    If DireccionesPersonas1 IsNot Nothing AndAlso Not Equals(DireccionesPersonas1.DIR_ID, value) Then
                        DireccionesPersonas1 = Nothing
                    End If
                End If
                _dIR_ID = value
                OnPropertyChanged("DIR_ID")
            End If
        End Set
    End Property

    Private _dIR_ID As String

    <DataMember()>
    Public Property PER_TELEFONOS() As String
        Get
            Return _pER_TELEFONOS
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_TELEFONOS, value) Then
                _pER_TELEFONOS = value
                OnPropertyChanged("PER_TELEFONOS")
            End If
        End Set
    End Property

    Private _pER_TELEFONOS As String

    <DataMember()>
    Public Property PER_EMAIL() As String
        Get
            Return _pER_EMAIL
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_EMAIL, value) Then
                _pER_EMAIL = value
                OnPropertyChanged("PER_EMAIL")
            End If
        End Set
    End Property

    Private _pER_EMAIL As String

    <DataMember()>
    Public Property PER_PAGINA_WEB() As String
        Get
            Return _pER_PAGINA_WEB
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_PAGINA_WEB, value) Then
                _pER_PAGINA_WEB = value
                OnPropertyChanged("PER_PAGINA_WEB")
            End If
        End Set
    End Property

    Private _pER_PAGINA_WEB As String

    <DataMember()>
    Public Property PER_LINEA_CREDITO() As Decimal
        Get
            Return _pER_LINEA_CREDITO
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_pER_LINEA_CREDITO, value) Then
                _pER_LINEA_CREDITO = value
                OnPropertyChanged("PER_LINEA_CREDITO")
            End If
        End Set
    End Property

    Private _pER_LINEA_CREDITO As Decimal

    <DataMember()>
    Public Property PER_DIAS_CREDITO() As Short
        Get
            Return _pER_DIAS_CREDITO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_DIAS_CREDITO, value) Then
                _pER_DIAS_CREDITO = value
                OnPropertyChanged("PER_DIAS_CREDITO")
            End If
        End Set
    End Property

    Private _pER_DIAS_CREDITO As Short

    <DataMember()>
    Public Property PER_ID_VEN() As String
        Get
            Return _pER_ID_VEN
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_VEN, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_VEN", _pER_ID_VEN)
                If Not IsDeserializing Then
                    If Personas6 IsNot Nothing AndAlso Not Equals(Personas6.PER_ID, value) Then
                        Personas6 = Nothing
                    End If
                End If
                _pER_ID_VEN = value
                OnPropertyChanged("PER_ID_VEN")
            End If
        End Set
    End Property

    Private _pER_ID_VEN As String

    <DataMember()>
    Public Property PER_ID_COB() As String
        Get
            Return _pER_ID_COB
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_COB, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_COB", _pER_ID_COB)
                If Not IsDeserializing Then
                    If Personas3 IsNot Nothing AndAlso Not Equals(Personas3.PER_ID, value) Then
                        Personas3 = Nothing
                    End If
                End If
                _pER_ID_COB = value
                OnPropertyChanged("PER_ID_COB")
            End If
        End Set
    End Property

    Private _pER_ID_COB As String

    <DataMember()>
    Public Property PER_ID_TRA() As String
        Get
            Return _pER_ID_TRA
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_TRA, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_TRA", _pER_ID_TRA)
                If Not IsDeserializing Then
                    If Personas5 IsNot Nothing AndAlso Not Equals(Personas5.PER_ID, value) Then
                        Personas5 = Nothing
                    End If
                End If
                _pER_ID_TRA = value
                OnPropertyChanged("PER_ID_TRA")
            End If
        End Set
    End Property

    Private _pER_ID_TRA As String

    <DataMember()>
    Public Property PER_ID_BAN() As String
        Get
            Return _pER_ID_BAN
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_BAN, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_BAN", _pER_ID_BAN)
                If Not IsDeserializing Then
                    If Personas2 IsNot Nothing AndAlso Not Equals(Personas2.PER_ID, value) Then
                        Personas2 = Nothing
                    End If
                End If
                _pER_ID_BAN = value
                OnPropertyChanged("PER_ID_BAN")
            End If
        End Set
    End Property

    Private _pER_ID_BAN As String

    <DataMember()>
    Public Property PER_ID_GRU() As String
        Get
            Return _pER_ID_GRU
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_GRU, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_GRU", _pER_ID_GRU)
                If Not IsDeserializing Then
                    If Personas4 IsNot Nothing AndAlso Not Equals(Personas4.PER_ID, value) Then
                        Personas4 = Nothing
                    End If
                End If
                _pER_ID_GRU = value
                OnPropertyChanged("PER_ID_GRU")
            End If
        End Set
    End Property

    Private _pER_ID_GRU As String

    <DataMember()>
    Public Property PER_DIASEM_PAGO() As Short
        Get
            Return _pER_DIASEM_PAGO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_DIASEM_PAGO, value) Then
                _pER_DIASEM_PAGO = value
                OnPropertyChanged("PER_DIASEM_PAGO")
            End If
        End Set
    End Property

    Private _pER_DIASEM_PAGO As Short

    <DataMember()>
    Public Property PER_COND_DIASEM() As Short
        Get
            Return _pER_COND_DIASEM
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_COND_DIASEM, value) Then
                _pER_COND_DIASEM = value
                OnPropertyChanged("PER_COND_DIASEM")
            End If
        End Set
    End Property

    Private _pER_COND_DIASEM As Short

    <DataMember()>
    Public Property PER_DIAMES_PAGO() As Short
        Get
            Return _pER_DIAMES_PAGO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_DIAMES_PAGO, value) Then
                _pER_DIAMES_PAGO = value
                OnPropertyChanged("PER_DIAMES_PAGO")
            End If
        End Set
    End Property

    Private _pER_DIAMES_PAGO As Short

    <DataMember()>
    Public Property PER_DOC_PAGO() As Short
        Get
            Return _pER_DOC_PAGO
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_DOC_PAGO, value) Then
                _pER_DOC_PAGO = value
                OnPropertyChanged("PER_DOC_PAGO")
            End If
        End Set
    End Property

    Private _pER_DOC_PAGO As Short

    <DataMember()>
    Public Property PER_HORA_PAGO() As String
        Get
            Return _pER_HORA_PAGO
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_HORA_PAGO, value) Then
                _pER_HORA_PAGO = value
                OnPropertyChanged("PER_HORA_PAGO")
            End If
        End Set
    End Property

    Private _pER_HORA_PAGO As String

    <DataMember()>
    Public Property PER_OBSERVACIONES() As String
        Get
            Return _pER_OBSERVACIONES
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_OBSERVACIONES, value) Then
                _pER_OBSERVACIONES = value
                OnPropertyChanged("PER_OBSERVACIONES")
            End If
        End Set
    End Property

    Private _pER_OBSERVACIONES As String

    <DataMember()>
    Public Property PER_PROMOCIONES() As Boolean
        Get
            Return _pER_PROMOCIONES
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_PROMOCIONES, value) Then
                _pER_PROMOCIONES = value
                OnPropertyChanged("PER_PROMOCIONES")
            End If
        End Set
    End Property

    Private _pER_PROMOCIONES As Boolean

    <DataMember()>
    Public Property PER_CARTA_FIANZA() As Short
        Get
            Return _pER_CARTA_FIANZA
        End Get
        Set(ByVal value As Short)
            If Not Equals(_pER_CARTA_FIANZA, value) Then
                _pER_CARTA_FIANZA = value
                OnPropertyChanged("PER_CARTA_FIANZA")
            End If
        End Set
    End Property

    Private _pER_CARTA_FIANZA As Short

    <DataMember()>
    Public Property PER_CUOTA_MENSUAL() As Decimal
        Get
            Return _pER_CUOTA_MENSUAL
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_pER_CUOTA_MENSUAL, value) Then
                _pER_CUOTA_MENSUAL = value
                OnPropertyChanged("PER_CUOTA_MENSUAL")
            End If
        End Set
    End Property

    Private _pER_CUOTA_MENSUAL As Decimal

    <DataMember()>
    Public Property PER_CUOTA_OBJETIVO() As Nullable(Of Decimal)
        Get
            Return _pER_CUOTA_OBJETIVO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pER_CUOTA_OBJETIVO, value) Then
                _pER_CUOTA_OBJETIVO = value
                OnPropertyChanged("PER_CUOTA_OBJETIVO")
            End If
        End Set
    End Property

    Private _pER_CUOTA_OBJETIVO As Nullable(Of Decimal)

    <DataMember()>
    Public Property PER_BONO() As Decimal
        Get
            Return _pER_BONO
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_pER_BONO, value) Then
                _pER_BONO = value
                OnPropertyChanged("PER_BONO")
            End If
        End Set
    End Property

    Private _pER_BONO As Decimal

    <DataMember()>
    Public Property CCC_ID() As String
        Get
            Return _cCC_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCC_ID, value) Then
                ChangeTracker.RecordOriginalValue("CCC_ID", _cCC_ID)
                If Not IsDeserializing Then
                    If CajaCtaCte2 IsNot Nothing AndAlso Not Equals(CajaCtaCte2.CCC_ID, value) Then
                        CajaCtaCte2 = Nothing
                    End If
                End If
                _cCC_ID = value
                OnPropertyChanged("CCC_ID")
            End If
        End Set
    End Property

    Private _cCC_ID As String

    <DataMember()>
    Public Property PER_CARGO() As String
        Get
            Return _pER_CARGO
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_CARGO, value) Then
                _pER_CARGO = value
                OnPropertyChanged("PER_CARGO")
            End If
        End Set
    End Property

    Private _pER_CARGO As String

    <DataMember()>
    Public Property PER_REP_LEGAL() As Boolean
        Get
            Return _pER_REP_LEGAL
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_REP_LEGAL, value) Then
                _pER_REP_LEGAL = value
                OnPropertyChanged("PER_REP_LEGAL")
            End If
        End Set
    End Property

    Private _pER_REP_LEGAL As Boolean

    <DataMember()>
    Public Property PER_FIRMA_AUT() As Boolean
        Get
            Return _pER_FIRMA_AUT
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_FIRMA_AUT, value) Then
                _pER_FIRMA_AUT = value
                OnPropertyChanged("PER_FIRMA_AUT")
            End If
        End Set
    End Property

    Private _pER_FIRMA_AUT As Boolean

    <DataMember()>
    Public Property PER_PROCESAR_DESCUENTO() As Boolean
        Get
            Return _pER_PROCESAR_DESCUENTO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_PROCESAR_DESCUENTO, value) Then
                _pER_PROCESAR_DESCUENTO = value
                OnPropertyChanged("PER_PROCESAR_DESCUENTO")
            End If
        End Set
    End Property

    Private _pER_PROCESAR_DESCUENTO As Boolean

    <DataMember()>
    Public Property PER_ALIAS() As String
        Get
            Return _pER_ALIAS
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ALIAS, value) Then
                _pER_ALIAS = value
                OnPropertyChanged("PER_ALIAS")
            End If
        End Set
    End Property

    Private _pER_ALIAS As String

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                ChangeTracker.RecordOriginalValue("USU_ID", _uSU_ID)
                If Not IsDeserializing Then
                    If Usuarios IsNot Nothing AndAlso Not Equals(Usuarios.USU_ID, value) Then
                        Usuarios = Nothing
                    End If
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property PER_FEC_GRAB() As Date
        Get
            Return _pER_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_pER_FEC_GRAB, value) Then
                _pER_FEC_GRAB = value
                OnPropertyChanged("PER_FEC_GRAB")
            End If
        End Set
    End Property

    Private _pER_FEC_GRAB As Date

    <DataMember()>
    Public Property PER_ESTADO() As Boolean
        Get
            Return _pER_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_ESTADO, value) Then
                _pER_ESTADO = value
                OnPropertyChanged("PER_ESTADO")
            End If
        End Set
    End Property

    Private _pER_ESTADO As Boolean

    <DataMember()>
    Public Property PER_CALIFICACION() As String
        Get
            Return _pER_CALIFICACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_CALIFICACION, value) Then
                _pER_CALIFICACION = value
                OnPropertyChanged("PER_CALIFICACION")
            End If
        End Set
    End Property

    Private _pER_CALIFICACION As String

    <DataMember()>
    Public Property PER_LINEA_CREDITO_ESTADO() As Boolean
        Get
            Return _pER_LINEA_CREDITO_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_pER_LINEA_CREDITO_ESTADO, value) Then
                _pER_LINEA_CREDITO_ESTADO = value
                OnPropertyChanged("PER_LINEA_CREDITO_ESTADO")
            End If
        End Set
    End Property

    Private _pER_LINEA_CREDITO_ESTADO As Boolean

    <DataMember()>
    Public Property PER_FECHA_ALTA() As Nullable(Of Date)
        Get
            Return _pER_FECHA_ALTA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pER_FECHA_ALTA, value) Then
                _pER_FECHA_ALTA = value
                OnPropertyChanged("PER_FECHA_ALTA")
            End If
        End Set
    End Property

    Private _pER_FECHA_ALTA As Nullable(Of Date)

    <DataMember()>
    Public Property PER_FECHA_VENC() As Nullable(Of Date)
        Get
            Return _pER_FECHA_VENC
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_pER_FECHA_VENC, value) Then
                _pER_FECHA_VENC = value
                OnPropertyChanged("PER_FECHA_VENC")
            End If
        End Set
    End Property

    Private _pER_FECHA_VENC As Nullable(Of Date)

    <DataMember()>
    Public Property PER_GARANTIA() As String
        Get
            Return _pER_GARANTIA
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_GARANTIA, value) Then
                _pER_GARANTIA = value
                OnPropertyChanged("PER_GARANTIA")
            End If
        End Set
    End Property

    Private _pER_GARANTIA As String

    <DataMember()>
    Public Property PER_EXCESO_LINEA() As Nullable(Of Decimal)
        Get
            Return _pER_EXCESO_LINEA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_pER_EXCESO_LINEA, value) Then
                _pER_EXCESO_LINEA = value
                OnPropertyChanged("PER_EXCESO_LINEA")
            End If
        End Set
    End Property

    Private _pER_EXCESO_LINEA As Nullable(Of Decimal)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property ActivosFijos() As TrackableCollection(Of ActivosFijos)
        Get
            If _activosFijos Is Nothing Then
                _activosFijos = New TrackableCollection(Of ActivosFijos)
                AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
            End If
            Return _activosFijos
        End Get
        Set(ByVal value As TrackableCollection(Of ActivosFijos))
            If Not Object.ReferenceEquals(_activosFijos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _activosFijos IsNot Nothing Then
                    RemoveHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                _activosFijos = value
                If _activosFijos IsNot Nothing Then
                    AddHandler _activosFijos.CollectionChanged, AddressOf FixupActivosFijos
                End If
                OnNavigationPropertyChanged("ActivosFijos")
            End If
        End Set
    End Property

    Private _activosFijos As TrackableCollection(Of ActivosFijos)

    <DataMember()>
    Public Property Asignaciones() As TrackableCollection(Of Asignaciones)
        Get
            If _asignaciones Is Nothing Then
                _asignaciones = New TrackableCollection(Of Asignaciones)
                AddHandler _asignaciones.CollectionChanged, AddressOf FixupAsignaciones
            End If
            Return _asignaciones
        End Get
        Set(ByVal value As TrackableCollection(Of Asignaciones))
            If Not Object.ReferenceEquals(_asignaciones, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _asignaciones IsNot Nothing Then
                    RemoveHandler _asignaciones.CollectionChanged, AddressOf FixupAsignaciones
                End If
                _asignaciones = value
                If _asignaciones IsNot Nothing Then
                    AddHandler _asignaciones.CollectionChanged, AddressOf FixupAsignaciones
                End If
                OnNavigationPropertyChanged("Asignaciones")
            End If
        End Set
    End Property

    Private _asignaciones As TrackableCollection(Of Asignaciones)

    <DataMember()>
    Public Property Comprobantes() As TrackableCollection(Of Comprobantes)
        Get
            If _comprobantes Is Nothing Then
                _comprobantes = New TrackableCollection(Of Comprobantes)
                AddHandler _comprobantes.CollectionChanged, AddressOf FixupComprobantes
            End If
            Return _comprobantes
        End Get
        Set(ByVal value As TrackableCollection(Of Comprobantes))
            If Not Object.ReferenceEquals(_comprobantes, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _comprobantes IsNot Nothing Then
                    RemoveHandler _comprobantes.CollectionChanged, AddressOf FixupComprobantes
                End If
                _comprobantes = value
                If _comprobantes IsNot Nothing Then
                    AddHandler _comprobantes.CollectionChanged, AddressOf FixupComprobantes
                End If
                OnNavigationPropertyChanged("Comprobantes")
            End If
        End Set
    End Property

    Private _comprobantes As TrackableCollection(Of Comprobantes)

    <DataMember()>
    Public Property DetalleAsientosManuales() As TrackableCollection(Of DetalleAsientosManuales)
        Get
            If _detalleAsientosManuales Is Nothing Then
                _detalleAsientosManuales = New TrackableCollection(Of DetalleAsientosManuales)
                AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
            End If
            Return _detalleAsientosManuales
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAsientosManuales))
            If Not Object.ReferenceEquals(_detalleAsientosManuales, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAsientosManuales IsNot Nothing Then
                    RemoveHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                _detalleAsientosManuales = value
                If _detalleAsientosManuales IsNot Nothing Then
                    AddHandler _detalleAsientosManuales.CollectionChanged, AddressOf FixupDetalleAsientosManuales
                End If
                OnNavigationPropertyChanged("DetalleAsientosManuales")
            End If
        End Set
    End Property

    Private _detalleAsientosManuales As TrackableCollection(Of DetalleAsientosManuales)

    <DataMember()>
    Public Property RestriccionArticulo() As TrackableCollection(Of RestriccionArticulo)
        Get
            If _restriccionArticulo Is Nothing Then
                _restriccionArticulo = New TrackableCollection(Of RestriccionArticulo)
                AddHandler _restriccionArticulo.CollectionChanged, AddressOf FixupRestriccionArticulo
            End If
            Return _restriccionArticulo
        End Get
        Set(ByVal value As TrackableCollection(Of RestriccionArticulo))
            If Not Object.ReferenceEquals(_restriccionArticulo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _restriccionArticulo IsNot Nothing Then
                    RemoveHandler _restriccionArticulo.CollectionChanged, AddressOf FixupRestriccionArticulo
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As RestriccionArticulo In _restriccionArticulo
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _restriccionArticulo = value
                If _restriccionArticulo IsNot Nothing Then
                    AddHandler _restriccionArticulo.CollectionChanged, AddressOf FixupRestriccionArticulo
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As RestriccionArticulo In _restriccionArticulo
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("RestriccionArticulo")
            End If
        End Set
    End Property

    Private _restriccionArticulo As TrackableCollection(Of RestriccionArticulo)

    <DataMember()>
    Public Property CartaFianza() As TrackableCollection(Of CartaFianza)
        Get
            If _cartaFianza Is Nothing Then
                _cartaFianza = New TrackableCollection(Of CartaFianza)
                AddHandler _cartaFianza.CollectionChanged, AddressOf FixupCartaFianza
            End If
            Return _cartaFianza
        End Get
        Set(ByVal value As TrackableCollection(Of CartaFianza))
            If Not Object.ReferenceEquals(_cartaFianza, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cartaFianza IsNot Nothing Then
                    RemoveHandler _cartaFianza.CollectionChanged, AddressOf FixupCartaFianza
                End If
                _cartaFianza = value
                If _cartaFianza IsNot Nothing Then
                    AddHandler _cartaFianza.CollectionChanged, AddressOf FixupCartaFianza
                End If
                OnNavigationPropertyChanged("CartaFianza")
            End If
        End Set
    End Property

    Private _cartaFianza As TrackableCollection(Of CartaFianza)

    <DataMember()>
    Public Property DescuentoIncrementoTipoVentaPersonas() As TrackableCollection(Of DescuentoIncrementoTipoVentaPersonas)
        Get
            If _descuentoIncrementoTipoVentaPersonas Is Nothing Then
                _descuentoIncrementoTipoVentaPersonas = New TrackableCollection(Of DescuentoIncrementoTipoVentaPersonas)
                AddHandler _descuentoIncrementoTipoVentaPersonas.CollectionChanged, AddressOf FixupDescuentoIncrementoTipoVentaPersonas
            End If
            Return _descuentoIncrementoTipoVentaPersonas
        End Get
        Set(ByVal value As TrackableCollection(Of DescuentoIncrementoTipoVentaPersonas))
            If Not Object.ReferenceEquals(_descuentoIncrementoTipoVentaPersonas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _descuentoIncrementoTipoVentaPersonas IsNot Nothing Then
                    RemoveHandler _descuentoIncrementoTipoVentaPersonas.CollectionChanged, AddressOf FixupDescuentoIncrementoTipoVentaPersonas
                End If
                _descuentoIncrementoTipoVentaPersonas = value
                If _descuentoIncrementoTipoVentaPersonas IsNot Nothing Then
                    AddHandler _descuentoIncrementoTipoVentaPersonas.CollectionChanged, AddressOf FixupDescuentoIncrementoTipoVentaPersonas
                End If
                OnNavigationPropertyChanged("DescuentoIncrementoTipoVentaPersonas")
            End If
        End Set
    End Property

    Private _descuentoIncrementoTipoVentaPersonas As TrackableCollection(Of DescuentoIncrementoTipoVentaPersonas)

    <DataMember()>
    Public Property ListaPreciosArticulos() As TrackableCollection(Of ListaPreciosArticulos)
        Get
            If _listaPreciosArticulos Is Nothing Then
                _listaPreciosArticulos = New TrackableCollection(Of ListaPreciosArticulos)
                AddHandler _listaPreciosArticulos.CollectionChanged, AddressOf FixupListaPreciosArticulos
            End If
            Return _listaPreciosArticulos
        End Get
        Set(ByVal value As TrackableCollection(Of ListaPreciosArticulos))
            If Not Object.ReferenceEquals(_listaPreciosArticulos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _listaPreciosArticulos IsNot Nothing Then
                    RemoveHandler _listaPreciosArticulos.CollectionChanged, AddressOf FixupListaPreciosArticulos
                End If
                _listaPreciosArticulos = value
                If _listaPreciosArticulos IsNot Nothing Then
                    AddHandler _listaPreciosArticulos.CollectionChanged, AddressOf FixupListaPreciosArticulos
                End If
                OnNavigationPropertyChanged("ListaPreciosArticulos")
            End If
        End Set
    End Property

    Private _listaPreciosArticulos As TrackableCollection(Of ListaPreciosArticulos)

    <DataMember()>
    Public Property ContactoPersona() As TrackableCollection(Of ContactoPersona)
        Get
            If _contactoPersona Is Nothing Then
                _contactoPersona = New TrackableCollection(Of ContactoPersona)
                AddHandler _contactoPersona.CollectionChanged, AddressOf FixupContactoPersona
            End If
            Return _contactoPersona
        End Get
        Set(ByVal value As TrackableCollection(Of ContactoPersona))
            If Not Object.ReferenceEquals(_contactoPersona, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _contactoPersona IsNot Nothing Then
                    RemoveHandler _contactoPersona.CollectionChanged, AddressOf FixupContactoPersona
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As ContactoPersona In _contactoPersona
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _contactoPersona = value
                If _contactoPersona IsNot Nothing Then
                    AddHandler _contactoPersona.CollectionChanged, AddressOf FixupContactoPersona
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As ContactoPersona In _contactoPersona
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("ContactoPersona")
            End If
        End Set
    End Property

    Private _contactoPersona As TrackableCollection(Of ContactoPersona)

    <DataMember()>
    Public Property DatosUsuarios() As TrackableCollection(Of DatosUsuarios)
        Get
            If _datosUsuarios Is Nothing Then
                _datosUsuarios = New TrackableCollection(Of DatosUsuarios)
                AddHandler _datosUsuarios.CollectionChanged, AddressOf FixupDatosUsuarios
            End If
            Return _datosUsuarios
        End Get
        Set(ByVal value As TrackableCollection(Of DatosUsuarios))
            If Not Object.ReferenceEquals(_datosUsuarios, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _datosUsuarios IsNot Nothing Then
                    RemoveHandler _datosUsuarios.CollectionChanged, AddressOf FixupDatosUsuarios
                End If
                _datosUsuarios = value
                If _datosUsuarios IsNot Nothing Then
                    AddHandler _datosUsuarios.CollectionChanged, AddressOf FixupDatosUsuarios
                End If
                OnNavigationPropertyChanged("DatosUsuarios")
            End If
        End Set
    End Property

    Private _datosUsuarios As TrackableCollection(Of DatosUsuarios)

    <DataMember()>
    Public Property DireccionesPersonas() As TrackableCollection(Of DireccionesPersonas)
        Get
            If _direccionesPersonas Is Nothing Then
                _direccionesPersonas = New TrackableCollection(Of DireccionesPersonas)
                AddHandler _direccionesPersonas.CollectionChanged, AddressOf FixupDireccionesPersonas
            End If
            Return _direccionesPersonas
        End Get
        Set(ByVal value As TrackableCollection(Of DireccionesPersonas))
            If Not Object.ReferenceEquals(_direccionesPersonas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _direccionesPersonas IsNot Nothing Then
                    RemoveHandler _direccionesPersonas.CollectionChanged, AddressOf FixupDireccionesPersonas
                End If
                _direccionesPersonas = value
                If _direccionesPersonas IsNot Nothing Then
                    AddHandler _direccionesPersonas.CollectionChanged, AddressOf FixupDireccionesPersonas
                End If
                OnNavigationPropertyChanged("DireccionesPersonas")
            End If
        End Set
    End Property

    Private _direccionesPersonas As TrackableCollection(Of DireccionesPersonas)

    <DataMember()>
    Public Property DireccionesPersonas1() As DireccionesPersonas
        Get
            Return _direccionesPersonas1
        End Get
        Set(ByVal value As DireccionesPersonas)
            If _direccionesPersonas1 IsNot value Then
                Dim previousValue As DireccionesPersonas = _direccionesPersonas1
                _direccionesPersonas1 = value
                FixupDireccionesPersonas1(previousValue)
                OnNavigationPropertyChanged("DireccionesPersonas1")
            End If
        End Set
    End Property

    Private _direccionesPersonas1 As DireccionesPersonas


    <DataMember()>
    Public Property DocPersonas() As TrackableCollection(Of DocPersonas)
        Get
            If _docPersonas Is Nothing Then
                _docPersonas = New TrackableCollection(Of DocPersonas)
                AddHandler _docPersonas.CollectionChanged, AddressOf FixupDocPersonas
            End If
            Return _docPersonas
        End Get
        Set(ByVal value As TrackableCollection(Of DocPersonas))
            If Not Object.ReferenceEquals(_docPersonas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docPersonas IsNot Nothing Then
                    RemoveHandler _docPersonas.CollectionChanged, AddressOf FixupDocPersonas
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As DocPersonas In _docPersonas
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _docPersonas = value
                If _docPersonas IsNot Nothing Then
                    AddHandler _docPersonas.CollectionChanged, AddressOf FixupDocPersonas
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As DocPersonas In _docPersonas
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("DocPersonas")
            End If
        End Set
    End Property

    Private _docPersonas As TrackableCollection(Of DocPersonas)

    <DataMember()>
    Public Property ComedorPLL() As TrackableCollection(Of ComedorPLL)
        Get
            If _comedorPLL Is Nothing Then
                _comedorPLL = New TrackableCollection(Of ComedorPLL)
                AddHandler _comedorPLL.CollectionChanged, AddressOf FixupComedorPLL
            End If
            Return _comedorPLL
        End Get
        Set(ByVal value As TrackableCollection(Of ComedorPLL))
            If Not Object.ReferenceEquals(_comedorPLL, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _comedorPLL IsNot Nothing Then
                    RemoveHandler _comedorPLL.CollectionChanged, AddressOf FixupComedorPLL
                End If
                _comedorPLL = value
                If _comedorPLL IsNot Nothing Then
                    AddHandler _comedorPLL.CollectionChanged, AddressOf FixupComedorPLL
                End If
                OnNavigationPropertyChanged("ComedorPLL")
            End If
        End Set
    End Property

    Private _comedorPLL As TrackableCollection(Of ComedorPLL)

    <DataMember()>
    Public Property ComedorPLL1() As TrackableCollection(Of ComedorPLL)
        Get
            If _comedorPLL1 Is Nothing Then
                _comedorPLL1 = New TrackableCollection(Of ComedorPLL)
                AddHandler _comedorPLL1.CollectionChanged, AddressOf FixupComedorPLL1
            End If
            Return _comedorPLL1
        End Get
        Set(ByVal value As TrackableCollection(Of ComedorPLL))
            If Not Object.ReferenceEquals(_comedorPLL1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _comedorPLL1 IsNot Nothing Then
                    RemoveHandler _comedorPLL1.CollectionChanged, AddressOf FixupComedorPLL1
                End If
                _comedorPLL1 = value
                If _comedorPLL1 IsNot Nothing Then
                    AddHandler _comedorPLL1.CollectionChanged, AddressOf FixupComedorPLL1
                End If
                OnNavigationPropertyChanged("ComedorPLL1")
            End If
        End Set
    End Property

    Private _comedorPLL1 As TrackableCollection(Of ComedorPLL)

    <DataMember()>
    Public Property DetalleComedorPLL() As TrackableCollection(Of DetalleComedorPLL)
        Get
            If _detalleComedorPLL Is Nothing Then
                _detalleComedorPLL = New TrackableCollection(Of DetalleComedorPLL)
                AddHandler _detalleComedorPLL.CollectionChanged, AddressOf FixupDetalleComedorPLL
            End If
            Return _detalleComedorPLL
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleComedorPLL))
            If Not Object.ReferenceEquals(_detalleComedorPLL, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleComedorPLL IsNot Nothing Then
                    RemoveHandler _detalleComedorPLL.CollectionChanged, AddressOf FixupDetalleComedorPLL
                End If
                _detalleComedorPLL = value
                If _detalleComedorPLL IsNot Nothing Then
                    AddHandler _detalleComedorPLL.CollectionChanged, AddressOf FixupDetalleComedorPLL
                End If
                OnNavigationPropertyChanged("DetalleComedorPLL")
            End If
        End Set
    End Property

    Private _detalleComedorPLL As TrackableCollection(Of DetalleComedorPLL)

    <DataMember()>
    Public Property DetalleReparoTrabajador() As TrackableCollection(Of DetalleReparoTrabajador)
        Get
            If _detalleReparoTrabajador Is Nothing Then
                _detalleReparoTrabajador = New TrackableCollection(Of DetalleReparoTrabajador)
                AddHandler _detalleReparoTrabajador.CollectionChanged, AddressOf FixupDetalleReparoTrabajador
            End If
            Return _detalleReparoTrabajador
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleReparoTrabajador))
            If Not Object.ReferenceEquals(_detalleReparoTrabajador, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleReparoTrabajador IsNot Nothing Then
                    RemoveHandler _detalleReparoTrabajador.CollectionChanged, AddressOf FixupDetalleReparoTrabajador
                End If
                _detalleReparoTrabajador = value
                If _detalleReparoTrabajador IsNot Nothing Then
                    AddHandler _detalleReparoTrabajador.CollectionChanged, AddressOf FixupDetalleReparoTrabajador
                End If
                OnNavigationPropertyChanged("DetalleReparoTrabajador")
            End If
        End Set
    End Property

    Private _detalleReparoTrabajador As TrackableCollection(Of DetalleReparoTrabajador)

    <DataMember()>
    Public Property CajaCtaCte() As TrackableCollection(Of CajaCtaCte)
        Get
            If _cajaCtaCte Is Nothing Then
                _cajaCtaCte = New TrackableCollection(Of CajaCtaCte)
                AddHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
            End If
            Return _cajaCtaCte
        End Get
        Set(ByVal value As TrackableCollection(Of CajaCtaCte))
            If Not Object.ReferenceEquals(_cajaCtaCte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cajaCtaCte IsNot Nothing Then
                    RemoveHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
                End If
                _cajaCtaCte = value
                If _cajaCtaCte IsNot Nothing Then
                    AddHandler _cajaCtaCte.CollectionChanged, AddressOf FixupCajaCtaCte
                End If
                OnNavigationPropertyChanged("CajaCtaCte")
            End If
        End Set
    End Property

    Private _cajaCtaCte As TrackableCollection(Of CajaCtaCte)

    <DataMember()>
    Public Property CajaCtaCte1() As TrackableCollection(Of CajaCtaCte)
        Get
            If _cajaCtaCte1 Is Nothing Then
                _cajaCtaCte1 = New TrackableCollection(Of CajaCtaCte)
                AddHandler _cajaCtaCte1.CollectionChanged, AddressOf FixupCajaCtaCte1
            End If
            Return _cajaCtaCte1
        End Get
        Set(ByVal value As TrackableCollection(Of CajaCtaCte))
            If Not Object.ReferenceEquals(_cajaCtaCte1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cajaCtaCte1 IsNot Nothing Then
                    RemoveHandler _cajaCtaCte1.CollectionChanged, AddressOf FixupCajaCtaCte1
                End If
                _cajaCtaCte1 = value
                If _cajaCtaCte1 IsNot Nothing Then
                    AddHandler _cajaCtaCte1.CollectionChanged, AddressOf FixupCajaCtaCte1
                End If
                OnNavigationPropertyChanged("CajaCtaCte1")
            End If
        End Set
    End Property

    Private _cajaCtaCte1 As TrackableCollection(Of CajaCtaCte)

    <DataMember()>
    Public Property DatosLaborales() As TrackableCollection(Of DatosLaborales)
        Get
            If _datosLaborales Is Nothing Then
                _datosLaborales = New TrackableCollection(Of DatosLaborales)
                AddHandler _datosLaborales.CollectionChanged, AddressOf FixupDatosLaborales
            End If
            Return _datosLaborales
        End Get
        Set(ByVal value As TrackableCollection(Of DatosLaborales))
            If Not Object.ReferenceEquals(_datosLaborales, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _datosLaborales IsNot Nothing Then
                    RemoveHandler _datosLaborales.CollectionChanged, AddressOf FixupDatosLaborales
                End If
                _datosLaborales = value
                If _datosLaborales IsNot Nothing Then
                    AddHandler _datosLaborales.CollectionChanged, AddressOf FixupDatosLaborales
                End If
                OnNavigationPropertyChanged("DatosLaborales")
            End If
        End Set
    End Property

    Private _datosLaborales As TrackableCollection(Of DatosLaborales)

    <DataMember()>
    Public Property DatosLaborales1() As TrackableCollection(Of DatosLaborales)
        Get
            If _datosLaborales1 Is Nothing Then
                _datosLaborales1 = New TrackableCollection(Of DatosLaborales)
                AddHandler _datosLaborales1.CollectionChanged, AddressOf FixupDatosLaborales1
            End If
            Return _datosLaborales1
        End Get
        Set(ByVal value As TrackableCollection(Of DatosLaborales))
            If Not Object.ReferenceEquals(_datosLaborales1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _datosLaborales1 IsNot Nothing Then
                    RemoveHandler _datosLaborales1.CollectionChanged, AddressOf FixupDatosLaborales1
                End If
                _datosLaborales1 = value
                If _datosLaborales1 IsNot Nothing Then
                    AddHandler _datosLaborales1.CollectionChanged, AddressOf FixupDatosLaborales1
                End If
                OnNavigationPropertyChanged("DatosLaborales1")
            End If
        End Set
    End Property

    Private _datosLaborales1 As TrackableCollection(Of DatosLaborales)

    <DataMember()>
    Public Property DatosTrabajadorJudicial() As TrackableCollection(Of DatosTrabajadorJudicial)
        Get
            If _datosTrabajadorJudicial Is Nothing Then
                _datosTrabajadorJudicial = New TrackableCollection(Of DatosTrabajadorJudicial)
                AddHandler _datosTrabajadorJudicial.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial
            End If
            Return _datosTrabajadorJudicial
        End Get
        Set(ByVal value As TrackableCollection(Of DatosTrabajadorJudicial))
            If Not Object.ReferenceEquals(_datosTrabajadorJudicial, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _datosTrabajadorJudicial IsNot Nothing Then
                    RemoveHandler _datosTrabajadorJudicial.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial
                End If
                _datosTrabajadorJudicial = value
                If _datosTrabajadorJudicial IsNot Nothing Then
                    AddHandler _datosTrabajadorJudicial.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial
                End If
                OnNavigationPropertyChanged("DatosTrabajadorJudicial")
            End If
        End Set
    End Property

    Private _datosTrabajadorJudicial As TrackableCollection(Of DatosTrabajadorJudicial)

    <DataMember()>
    Public Property DatosTrabajadorJudicial1() As TrackableCollection(Of DatosTrabajadorJudicial)
        Get
            If _datosTrabajadorJudicial1 Is Nothing Then
                _datosTrabajadorJudicial1 = New TrackableCollection(Of DatosTrabajadorJudicial)
                AddHandler _datosTrabajadorJudicial1.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial1
            End If
            Return _datosTrabajadorJudicial1
        End Get
        Set(ByVal value As TrackableCollection(Of DatosTrabajadorJudicial))
            If Not Object.ReferenceEquals(_datosTrabajadorJudicial1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _datosTrabajadorJudicial1 IsNot Nothing Then
                    RemoveHandler _datosTrabajadorJudicial1.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial1
                End If
                _datosTrabajadorJudicial1 = value
                If _datosTrabajadorJudicial1 IsNot Nothing Then
                    AddHandler _datosTrabajadorJudicial1.CollectionChanged, AddressOf FixupDatosTrabajadorJudicial1
                End If
                OnNavigationPropertyChanged("DatosTrabajadorJudicial1")
            End If
        End Set
    End Property

    Private _datosTrabajadorJudicial1 As TrackableCollection(Of DatosTrabajadorJudicial)

    <DataMember()>
    Public Property DetalleGrupoTrabajo() As TrackableCollection(Of DetalleGrupoTrabajo)
        Get
            If _detalleGrupoTrabajo Is Nothing Then
                _detalleGrupoTrabajo = New TrackableCollection(Of DetalleGrupoTrabajo)
                AddHandler _detalleGrupoTrabajo.CollectionChanged, AddressOf FixupDetalleGrupoTrabajo
            End If
            Return _detalleGrupoTrabajo
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleGrupoTrabajo))
            If Not Object.ReferenceEquals(_detalleGrupoTrabajo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleGrupoTrabajo IsNot Nothing Then
                    RemoveHandler _detalleGrupoTrabajo.CollectionChanged, AddressOf FixupDetalleGrupoTrabajo
                End If
                _detalleGrupoTrabajo = value
                If _detalleGrupoTrabajo IsNot Nothing Then
                    AddHandler _detalleGrupoTrabajo.CollectionChanged, AddressOf FixupDetalleGrupoTrabajo
                End If
                OnNavigationPropertyChanged("DetalleGrupoTrabajo")
            End If
        End Set
    End Property

    Private _detalleGrupoTrabajo As TrackableCollection(Of DetalleGrupoTrabajo)

    <DataMember()>
    Public Property DetalleTesoreria() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria Is Nothing Then
                _detalleTesoreria = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
            End If
            Return _detalleTesoreria
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria IsNot Nothing Then
                    RemoveHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                _detalleTesoreria = value
                If _detalleTesoreria IsNot Nothing Then
                    AddHandler _detalleTesoreria.CollectionChanged, AddressOf FixupDetalleTesoreria
                End If
                OnNavigationPropertyChanged("DetalleTesoreria")
            End If
        End Set
    End Property

    Private _detalleTesoreria As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property DetalleTesoreria1() As TrackableCollection(Of DetalleTesoreria)
        Get
            If _detalleTesoreria1 Is Nothing Then
                _detalleTesoreria1 = New TrackableCollection(Of DetalleTesoreria)
                AddHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
            End If
            Return _detalleTesoreria1
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTesoreria))
            If Not Object.ReferenceEquals(_detalleTesoreria1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTesoreria1 IsNot Nothing Then
                    RemoveHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
                End If
                _detalleTesoreria1 = value
                If _detalleTesoreria1 IsNot Nothing Then
                    AddHandler _detalleTesoreria1.CollectionChanged, AddressOf FixupDetalleTesoreria1
                End If
                OnNavigationPropertyChanged("DetalleTesoreria1")
            End If
        End Set
    End Property

    Private _detalleTesoreria1 As TrackableCollection(Of DetalleTesoreria)

    <DataMember()>
    Public Property MedioPagoTesoreria() As TrackableCollection(Of MedioPagoTesoreria)
        Get
            If _medioPagoTesoreria Is Nothing Then
                _medioPagoTesoreria = New TrackableCollection(Of MedioPagoTesoreria)
                AddHandler _medioPagoTesoreria.CollectionChanged, AddressOf FixupMedioPagoTesoreria
            End If
            Return _medioPagoTesoreria
        End Get
        Set(ByVal value As TrackableCollection(Of MedioPagoTesoreria))
            If Not Object.ReferenceEquals(_medioPagoTesoreria, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _medioPagoTesoreria IsNot Nothing Then
                    RemoveHandler _medioPagoTesoreria.CollectionChanged, AddressOf FixupMedioPagoTesoreria
                End If
                _medioPagoTesoreria = value
                If _medioPagoTesoreria IsNot Nothing Then
                    AddHandler _medioPagoTesoreria.CollectionChanged, AddressOf FixupMedioPagoTesoreria
                End If
                OnNavigationPropertyChanged("MedioPagoTesoreria")
            End If
        End Set
    End Property

    Private _medioPagoTesoreria As TrackableCollection(Of MedioPagoTesoreria)

    <DataMember()>
    Public Property CajaCtaCte2() As CajaCtaCte
        Get
            Return _cajaCtaCte2
        End Get
        Set(ByVal value As CajaCtaCte)
            If _cajaCtaCte2 IsNot value Then
                Dim previousValue As CajaCtaCte = _cajaCtaCte2
                _cajaCtaCte2 = value
                FixupCajaCtaCte2(previousValue)
                OnNavigationPropertyChanged("CajaCtaCte2")
            End If
        End Set
    End Property

    Private _cajaCtaCte2 As CajaCtaCte


    <DataMember()>
    Public Property Personas1() As TrackableCollection(Of Personas)
        Get
            If _personas1 Is Nothing Then
                _personas1 = New TrackableCollection(Of Personas)
                AddHandler _personas1.CollectionChanged, AddressOf FixupPersonas1
            End If
            Return _personas1
        End Get
        Set(ByVal value As TrackableCollection(Of Personas))
            If Not Object.ReferenceEquals(_personas1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _personas1 IsNot Nothing Then
                    RemoveHandler _personas1.CollectionChanged, AddressOf FixupPersonas1
                End If
                _personas1 = value
                If _personas1 IsNot Nothing Then
                    AddHandler _personas1.CollectionChanged, AddressOf FixupPersonas1
                End If
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As TrackableCollection(Of Personas)

    <DataMember()>
    Public Property Personas2() As Personas
        Get
            Return _personas2
        End Get
        Set(ByVal value As Personas)
            If _personas2 IsNot value Then
                Dim previousValue As Personas = _personas2
                _personas2 = value
                FixupPersonas2(previousValue)
                OnNavigationPropertyChanged("Personas2")
            End If
        End Set
    End Property

    Private _personas2 As Personas


    <DataMember()>
    Public Property Personas11() As TrackableCollection(Of Personas)
        Get
            If _personas11 Is Nothing Then
                _personas11 = New TrackableCollection(Of Personas)
                AddHandler _personas11.CollectionChanged, AddressOf FixupPersonas11
            End If
            Return _personas11
        End Get
        Set(ByVal value As TrackableCollection(Of Personas))
            If Not Object.ReferenceEquals(_personas11, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _personas11 IsNot Nothing Then
                    RemoveHandler _personas11.CollectionChanged, AddressOf FixupPersonas11
                End If
                _personas11 = value
                If _personas11 IsNot Nothing Then
                    AddHandler _personas11.CollectionChanged, AddressOf FixupPersonas11
                End If
                OnNavigationPropertyChanged("Personas11")
            End If
        End Set
    End Property

    Private _personas11 As TrackableCollection(Of Personas)

    <DataMember()>
    Public Property Personas3() As Personas
        Get
            Return _personas3
        End Get
        Set(ByVal value As Personas)
            If _personas3 IsNot value Then
                Dim previousValue As Personas = _personas3
                _personas3 = value
                FixupPersonas3(previousValue)
                OnNavigationPropertyChanged("Personas3")
            End If
        End Set
    End Property

    Private _personas3 As Personas


    <DataMember()>
    Public Property Personas12() As TrackableCollection(Of Personas)
        Get
            If _personas12 Is Nothing Then
                _personas12 = New TrackableCollection(Of Personas)
                AddHandler _personas12.CollectionChanged, AddressOf FixupPersonas12
            End If
            Return _personas12
        End Get
        Set(ByVal value As TrackableCollection(Of Personas))
            If Not Object.ReferenceEquals(_personas12, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _personas12 IsNot Nothing Then
                    RemoveHandler _personas12.CollectionChanged, AddressOf FixupPersonas12
                End If
                _personas12 = value
                If _personas12 IsNot Nothing Then
                    AddHandler _personas12.CollectionChanged, AddressOf FixupPersonas12
                End If
                OnNavigationPropertyChanged("Personas12")
            End If
        End Set
    End Property

    Private _personas12 As TrackableCollection(Of Personas)

    <DataMember()>
    Public Property Personas4() As Personas
        Get
            Return _personas4
        End Get
        Set(ByVal value As Personas)
            If _personas4 IsNot value Then
                Dim previousValue As Personas = _personas4
                _personas4 = value
                FixupPersonas4(previousValue)
                OnNavigationPropertyChanged("Personas4")
            End If
        End Set
    End Property

    Private _personas4 As Personas


    <DataMember()>
    Public Property Personas13() As TrackableCollection(Of Personas)
        Get
            If _personas13 Is Nothing Then
                _personas13 = New TrackableCollection(Of Personas)
                AddHandler _personas13.CollectionChanged, AddressOf FixupPersonas13
            End If
            Return _personas13
        End Get
        Set(ByVal value As TrackableCollection(Of Personas))
            If Not Object.ReferenceEquals(_personas13, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _personas13 IsNot Nothing Then
                    RemoveHandler _personas13.CollectionChanged, AddressOf FixupPersonas13
                End If
                _personas13 = value
                If _personas13 IsNot Nothing Then
                    AddHandler _personas13.CollectionChanged, AddressOf FixupPersonas13
                End If
                OnNavigationPropertyChanged("Personas13")
            End If
        End Set
    End Property

    Private _personas13 As TrackableCollection(Of Personas)

    <DataMember()>
    Public Property Personas5() As Personas
        Get
            Return _personas5
        End Get
        Set(ByVal value As Personas)
            If _personas5 IsNot value Then
                Dim previousValue As Personas = _personas5
                _personas5 = value
                FixupPersonas5(previousValue)
                OnNavigationPropertyChanged("Personas5")
            End If
        End Set
    End Property

    Private _personas5 As Personas


    <DataMember()>
    Public Property Personas14() As TrackableCollection(Of Personas)
        Get
            If _personas14 Is Nothing Then
                _personas14 = New TrackableCollection(Of Personas)
                AddHandler _personas14.CollectionChanged, AddressOf FixupPersonas14
            End If
            Return _personas14
        End Get
        Set(ByVal value As TrackableCollection(Of Personas))
            If Not Object.ReferenceEquals(_personas14, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _personas14 IsNot Nothing Then
                    RemoveHandler _personas14.CollectionChanged, AddressOf FixupPersonas14
                End If
                _personas14 = value
                If _personas14 IsNot Nothing Then
                    AddHandler _personas14.CollectionChanged, AddressOf FixupPersonas14
                End If
                OnNavigationPropertyChanged("Personas14")
            End If
        End Set
    End Property

    Private _personas14 As TrackableCollection(Of Personas)

    <DataMember()>
    Public Property Personas6() As Personas
        Get
            Return _personas6
        End Get
        Set(ByVal value As Personas)
            If _personas6 IsNot value Then
                Dim previousValue As Personas = _personas6
                _personas6 = value
                FixupPersonas6(previousValue)
                OnNavigationPropertyChanged("Personas6")
            End If
        End Set
    End Property

    Private _personas6 As Personas


    <DataMember()>
    Public Property Usuarios() As Usuarios
        Get
            Return _usuarios
        End Get
        Set(ByVal value As Usuarios)
            If _usuarios IsNot value Then
                Dim previousValue As Usuarios = _usuarios
                _usuarios = value
                FixupUsuarios(previousValue)
                OnNavigationPropertyChanged("Usuarios")
            End If
        End Set
    End Property

    Private _usuarios As Usuarios


    <DataMember()>
    Public Property PrestamosTrabajador() As TrackableCollection(Of PrestamosTrabajador)
        Get
            If _prestamosTrabajador Is Nothing Then
                _prestamosTrabajador = New TrackableCollection(Of PrestamosTrabajador)
                AddHandler _prestamosTrabajador.CollectionChanged, AddressOf FixupPrestamosTrabajador
            End If
            Return _prestamosTrabajador
        End Get
        Set(ByVal value As TrackableCollection(Of PrestamosTrabajador))
            If Not Object.ReferenceEquals(_prestamosTrabajador, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _prestamosTrabajador IsNot Nothing Then
                    RemoveHandler _prestamosTrabajador.CollectionChanged, AddressOf FixupPrestamosTrabajador
                End If
                _prestamosTrabajador = value
                If _prestamosTrabajador IsNot Nothing Then
                    AddHandler _prestamosTrabajador.CollectionChanged, AddressOf FixupPrestamosTrabajador
                End If
                OnNavigationPropertyChanged("PrestamosTrabajador")
            End If
        End Set
    End Property

    Private _prestamosTrabajador As TrackableCollection(Of PrestamosTrabajador)

    <DataMember()>
    Public Property PrestamosTrabajador1() As TrackableCollection(Of PrestamosTrabajador)
        Get
            If _prestamosTrabajador1 Is Nothing Then
                _prestamosTrabajador1 = New TrackableCollection(Of PrestamosTrabajador)
                AddHandler _prestamosTrabajador1.CollectionChanged, AddressOf FixupPrestamosTrabajador1
            End If
            Return _prestamosTrabajador1
        End Get
        Set(ByVal value As TrackableCollection(Of PrestamosTrabajador))
            If Not Object.ReferenceEquals(_prestamosTrabajador1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _prestamosTrabajador1 IsNot Nothing Then
                    RemoveHandler _prestamosTrabajador1.CollectionChanged, AddressOf FixupPrestamosTrabajador1
                End If
                _prestamosTrabajador1 = value
                If _prestamosTrabajador1 IsNot Nothing Then
                    AddHandler _prestamosTrabajador1.CollectionChanged, AddressOf FixupPrestamosTrabajador1
                End If
                OnNavigationPropertyChanged("PrestamosTrabajador1")
            End If
        End Set
    End Property

    Private _prestamosTrabajador1 As TrackableCollection(Of PrestamosTrabajador)

    <DataMember()>
    Public Property ReparoTrabajador() As TrackableCollection(Of ReparoTrabajador)
        Get
            If _reparoTrabajador Is Nothing Then
                _reparoTrabajador = New TrackableCollection(Of ReparoTrabajador)
                AddHandler _reparoTrabajador.CollectionChanged, AddressOf FixupReparoTrabajador
            End If
            Return _reparoTrabajador
        End Get
        Set(ByVal value As TrackableCollection(Of ReparoTrabajador))
            If Not Object.ReferenceEquals(_reparoTrabajador, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _reparoTrabajador IsNot Nothing Then
                    RemoveHandler _reparoTrabajador.CollectionChanged, AddressOf FixupReparoTrabajador
                End If
                _reparoTrabajador = value
                If _reparoTrabajador IsNot Nothing Then
                    AddHandler _reparoTrabajador.CollectionChanged, AddressOf FixupReparoTrabajador
                End If
                OnNavigationPropertyChanged("ReparoTrabajador")
            End If
        End Set
    End Property

    Private _reparoTrabajador As TrackableCollection(Of ReparoTrabajador)

    <DataMember()>
    Public Property RolPersonaTipoPersona() As TrackableCollection(Of RolPersonaTipoPersona)
        Get
            If _rolPersonaTipoPersona Is Nothing Then
                _rolPersonaTipoPersona = New TrackableCollection(Of RolPersonaTipoPersona)
                AddHandler _rolPersonaTipoPersona.CollectionChanged, AddressOf FixupRolPersonaTipoPersona
            End If
            Return _rolPersonaTipoPersona
        End Get
        Set(ByVal value As TrackableCollection(Of RolPersonaTipoPersona))
            If Not Object.ReferenceEquals(_rolPersonaTipoPersona, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolPersonaTipoPersona IsNot Nothing Then
                    RemoveHandler _rolPersonaTipoPersona.CollectionChanged, AddressOf FixupRolPersonaTipoPersona
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As RolPersonaTipoPersona In _rolPersonaTipoPersona
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _rolPersonaTipoPersona = value
                If _rolPersonaTipoPersona IsNot Nothing Then
                    AddHandler _rolPersonaTipoPersona.CollectionChanged, AddressOf FixupRolPersonaTipoPersona
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As RolPersonaTipoPersona In _rolPersonaTipoPersona
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("RolPersonaTipoPersona")
            End If
        End Set
    End Property

    Private _rolPersonaTipoPersona As TrackableCollection(Of RolPersonaTipoPersona)

    <DataMember()>
    Public Property TesoreriaPlanillas() As TrackableCollection(Of TesoreriaPlanillas)
        Get
            If _tesoreriaPlanillas Is Nothing Then
                _tesoreriaPlanillas = New TrackableCollection(Of TesoreriaPlanillas)
                AddHandler _tesoreriaPlanillas.CollectionChanged, AddressOf FixupTesoreriaPlanillas
            End If
            Return _tesoreriaPlanillas
        End Get
        Set(ByVal value As TrackableCollection(Of TesoreriaPlanillas))
            If Not Object.ReferenceEquals(_tesoreriaPlanillas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _tesoreriaPlanillas IsNot Nothing Then
                    RemoveHandler _tesoreriaPlanillas.CollectionChanged, AddressOf FixupTesoreriaPlanillas
                End If
                _tesoreriaPlanillas = value
                If _tesoreriaPlanillas IsNot Nothing Then
                    AddHandler _tesoreriaPlanillas.CollectionChanged, AddressOf FixupTesoreriaPlanillas
                End If
                OnNavigationPropertyChanged("TesoreriaPlanillas")
            End If
        End Set
    End Property

    Private _tesoreriaPlanillas As TrackableCollection(Of TesoreriaPlanillas)

    <DataMember()>
    Public Property Tesoreria() As TrackableCollection(Of Tesoreria)
        Get
            If _tesoreria Is Nothing Then
                _tesoreria = New TrackableCollection(Of Tesoreria)
                AddHandler _tesoreria.CollectionChanged, AddressOf FixupTesoreria
            End If
            Return _tesoreria
        End Get
        Set(ByVal value As TrackableCollection(Of Tesoreria))
            If Not Object.ReferenceEquals(_tesoreria, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _tesoreria IsNot Nothing Then
                    RemoveHandler _tesoreria.CollectionChanged, AddressOf FixupTesoreria
                End If
                _tesoreria = value
                If _tesoreria IsNot Nothing Then
                    AddHandler _tesoreria.CollectionChanged, AddressOf FixupTesoreria
                End If
                OnNavigationPropertyChanged("Tesoreria")
            End If
        End Set
    End Property

    Private _tesoreria As TrackableCollection(Of Tesoreria)

    <DataMember()>
    Public Property DetalleTrabajadorHoras() As TrackableCollection(Of DetalleTrabajadorHoras)
        Get
            If _detalleTrabajadorHoras Is Nothing Then
                _detalleTrabajadorHoras = New TrackableCollection(Of DetalleTrabajadorHoras)
                AddHandler _detalleTrabajadorHoras.CollectionChanged, AddressOf FixupDetalleTrabajadorHoras
            End If
            Return _detalleTrabajadorHoras
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleTrabajadorHoras))
            If Not Object.ReferenceEquals(_detalleTrabajadorHoras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleTrabajadorHoras IsNot Nothing Then
                    RemoveHandler _detalleTrabajadorHoras.CollectionChanged, AddressOf FixupDetalleTrabajadorHoras
                End If
                _detalleTrabajadorHoras = value
                If _detalleTrabajadorHoras IsNot Nothing Then
                    AddHandler _detalleTrabajadorHoras.CollectionChanged, AddressOf FixupDetalleTrabajadorHoras
                End If
                OnNavigationPropertyChanged("DetalleTrabajadorHoras")
            End If
        End Set
    End Property

    Private _detalleTrabajadorHoras As TrackableCollection(Of DetalleTrabajadorHoras)

    <DataMember()>
    Public Property PermisosTrabajador() As TrackableCollection(Of PermisosTrabajador)
        Get
            If _permisosTrabajador Is Nothing Then
                _permisosTrabajador = New TrackableCollection(Of PermisosTrabajador)
                AddHandler _permisosTrabajador.CollectionChanged, AddressOf FixupPermisosTrabajador
            End If
            Return _permisosTrabajador
        End Get
        Set(ByVal value As TrackableCollection(Of PermisosTrabajador))
            If Not Object.ReferenceEquals(_permisosTrabajador, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _permisosTrabajador IsNot Nothing Then
                    RemoveHandler _permisosTrabajador.CollectionChanged, AddressOf FixupPermisosTrabajador
                End If
                _permisosTrabajador = value
                If _permisosTrabajador IsNot Nothing Then
                    AddHandler _permisosTrabajador.CollectionChanged, AddressOf FixupPermisosTrabajador
                End If
                OnNavigationPropertyChanged("PermisosTrabajador")
            End If
        End Set
    End Property

    Private _permisosTrabajador As TrackableCollection(Of PermisosTrabajador)

    <DataMember()>
    Public Property PermisosTrabajador1() As TrackableCollection(Of PermisosTrabajador)
        Get
            If _permisosTrabajador1 Is Nothing Then
                _permisosTrabajador1 = New TrackableCollection(Of PermisosTrabajador)
                AddHandler _permisosTrabajador1.CollectionChanged, AddressOf FixupPermisosTrabajador1
            End If
            Return _permisosTrabajador1
        End Get
        Set(ByVal value As TrackableCollection(Of PermisosTrabajador))
            If Not Object.ReferenceEquals(_permisosTrabajador1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _permisosTrabajador1 IsNot Nothing Then
                    RemoveHandler _permisosTrabajador1.CollectionChanged, AddressOf FixupPermisosTrabajador1
                End If
                _permisosTrabajador1 = value
                If _permisosTrabajador1 IsNot Nothing Then
                    AddHandler _permisosTrabajador1.CollectionChanged, AddressOf FixupPermisosTrabajador1
                End If
                OnNavigationPropertyChanged("PermisosTrabajador1")
            End If
        End Set
    End Property

    Private _permisosTrabajador1 As TrackableCollection(Of PermisosTrabajador)

    <DataMember()>
    Public Property AsientosContables() As TrackableCollection(Of AsientosContables)
        Get
            If _asientosContables Is Nothing Then
                _asientosContables = New TrackableCollection(Of AsientosContables)
                AddHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
            End If
            Return _asientosContables
        End Get
        Set(ByVal value As TrackableCollection(Of AsientosContables))
            If Not Object.ReferenceEquals(_asientosContables, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _asientosContables IsNot Nothing Then
                    RemoveHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
                End If
                _asientosContables = value
                If _asientosContables IsNot Nothing Then
                    AddHandler _asientosContables.CollectionChanged, AddressOf FixupAsientosContables
                End If
                OnNavigationPropertyChanged("AsientosContables")
            End If
        End Set
    End Property

    Private _asientosContables As TrackableCollection(Of AsientosContables)

    <DataMember()>
    Public Property AsientosContables1() As TrackableCollection(Of AsientosContables)
        Get
            If _asientosContables1 Is Nothing Then
                _asientosContables1 = New TrackableCollection(Of AsientosContables)
                AddHandler _asientosContables1.CollectionChanged, AddressOf FixupAsientosContables1
            End If
            Return _asientosContables1
        End Get
        Set(ByVal value As TrackableCollection(Of AsientosContables))
            If Not Object.ReferenceEquals(_asientosContables1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _asientosContables1 IsNot Nothing Then
                    RemoveHandler _asientosContables1.CollectionChanged, AddressOf FixupAsientosContables1
                End If
                _asientosContables1 = value
                If _asientosContables1 IsNot Nothing Then
                    AddHandler _asientosContables1.CollectionChanged, AddressOf FixupAsientosContables1
                End If
                OnNavigationPropertyChanged("AsientosContables1")
            End If
        End Set
    End Property

    Private _asientosContables1 As TrackableCollection(Of AsientosContables)

    <DataMember()>
    Public Property Leasing() As TrackableCollection(Of Leasing)
        Get
            If _leasing Is Nothing Then
                _leasing = New TrackableCollection(Of Leasing)
                AddHandler _leasing.CollectionChanged, AddressOf FixupLeasing
            End If
            Return _leasing
        End Get
        Set(ByVal value As TrackableCollection(Of Leasing))
            If Not Object.ReferenceEquals(_leasing, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _leasing IsNot Nothing Then
                    RemoveHandler _leasing.CollectionChanged, AddressOf FixupLeasing
                End If
                _leasing = value
                If _leasing IsNot Nothing Then
                    AddHandler _leasing.CollectionChanged, AddressOf FixupLeasing
                End If
                OnNavigationPropertyChanged("Leasing")
            End If
        End Set
    End Property

    Private _leasing As TrackableCollection(Of Leasing)

    <DataMember()>
    Public Property Marcaciones() As TrackableCollection(Of Marcaciones)
        Get
            If _marcaciones Is Nothing Then
                _marcaciones = New TrackableCollection(Of Marcaciones)
                AddHandler _marcaciones.CollectionChanged, AddressOf FixupMarcaciones
            End If
            Return _marcaciones
        End Get
        Set(ByVal value As TrackableCollection(Of Marcaciones))
            If Not Object.ReferenceEquals(_marcaciones, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _marcaciones IsNot Nothing Then
                    RemoveHandler _marcaciones.CollectionChanged, AddressOf FixupMarcaciones
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As Marcaciones In _marcaciones
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _marcaciones = value
                If _marcaciones IsNot Nothing Then
                    AddHandler _marcaciones.CollectionChanged, AddressOf FixupMarcaciones
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As Marcaciones In _marcaciones
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("Marcaciones")
            End If
        End Set
    End Property

    Private _marcaciones As TrackableCollection(Of Marcaciones)

    <DataMember()>
    Public Property MovimientoCajaBanco() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco Is Nothing Then
                _movimientoCajaBanco = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
            End If
            Return _movimientoCajaBanco
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                _movimientoCajaBanco = value
                If _movimientoCajaBanco IsNot Nothing Then
                    AddHandler _movimientoCajaBanco.CollectionChanged, AddressOf FixupMovimientoCajaBanco
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property MovimientoCajaBanco1() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco1 Is Nothing Then
                _movimientoCajaBanco1 = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
            End If
            Return _movimientoCajaBanco1
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco1 IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
                End If
                _movimientoCajaBanco1 = value
                If _movimientoCajaBanco1 IsNot Nothing Then
                    AddHandler _movimientoCajaBanco1.CollectionChanged, AddressOf FixupMovimientoCajaBanco1
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco1")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco1 As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property MovimientoCajaBanco2() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco2 Is Nothing Then
                _movimientoCajaBanco2 = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco2.CollectionChanged, AddressOf FixupMovimientoCajaBanco2
            End If
            Return _movimientoCajaBanco2
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco2 IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco2.CollectionChanged, AddressOf FixupMovimientoCajaBanco2
                End If
                _movimientoCajaBanco2 = value
                If _movimientoCajaBanco2 IsNot Nothing Then
                    AddHandler _movimientoCajaBanco2.CollectionChanged, AddressOf FixupMovimientoCajaBanco2
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco2")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco2 As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property MovimientoCajaBanco3() As TrackableCollection(Of MovimientoCajaBanco)
        Get
            If _movimientoCajaBanco3 Is Nothing Then
                _movimientoCajaBanco3 = New TrackableCollection(Of MovimientoCajaBanco)
                AddHandler _movimientoCajaBanco3.CollectionChanged, AddressOf FixupMovimientoCajaBanco3
            End If
            Return _movimientoCajaBanco3
        End Get
        Set(ByVal value As TrackableCollection(Of MovimientoCajaBanco))
            If Not Object.ReferenceEquals(_movimientoCajaBanco3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _movimientoCajaBanco3 IsNot Nothing Then
                    RemoveHandler _movimientoCajaBanco3.CollectionChanged, AddressOf FixupMovimientoCajaBanco3
                End If
                _movimientoCajaBanco3 = value
                If _movimientoCajaBanco3 IsNot Nothing Then
                    AddHandler _movimientoCajaBanco3.CollectionChanged, AddressOf FixupMovimientoCajaBanco3
                End If
                OnNavigationPropertyChanged("MovimientoCajaBanco3")
            End If
        End Set
    End Property

    Private _movimientoCajaBanco3 As TrackableCollection(Of MovimientoCajaBanco)

    <DataMember()>
    Public Property Documentos() As TrackableCollection(Of Documentos)
        Get
            If _documentos Is Nothing Then
                _documentos = New TrackableCollection(Of Documentos)
                AddHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
            End If
            Return _documentos
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos IsNot Nothing Then
                    RemoveHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
                End If
                _documentos = value
                If _documentos IsNot Nothing Then
                    AddHandler _documentos.CollectionChanged, AddressOf FixupDocumentos
                End If
                OnNavigationPropertyChanged("Documentos")
            End If
        End Set
    End Property

    Private _documentos As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos1() As TrackableCollection(Of Documentos)
        Get
            If _documentos1 Is Nothing Then
                _documentos1 = New TrackableCollection(Of Documentos)
                AddHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
            End If
            Return _documentos1
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos1 IsNot Nothing Then
                    RemoveHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
                End If
                _documentos1 = value
                If _documentos1 IsNot Nothing Then
                    AddHandler _documentos1.CollectionChanged, AddressOf FixupDocumentos1
                End If
                OnNavigationPropertyChanged("Documentos1")
            End If
        End Set
    End Property

    Private _documentos1 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos2() As TrackableCollection(Of Documentos)
        Get
            If _documentos2 Is Nothing Then
                _documentos2 = New TrackableCollection(Of Documentos)
                AddHandler _documentos2.CollectionChanged, AddressOf FixupDocumentos2
            End If
            Return _documentos2
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos2 IsNot Nothing Then
                    RemoveHandler _documentos2.CollectionChanged, AddressOf FixupDocumentos2
                End If
                _documentos2 = value
                If _documentos2 IsNot Nothing Then
                    AddHandler _documentos2.CollectionChanged, AddressOf FixupDocumentos2
                End If
                OnNavigationPropertyChanged("Documentos2")
            End If
        End Set
    End Property

    Private _documentos2 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos3() As TrackableCollection(Of Documentos)
        Get
            If _documentos3 Is Nothing Then
                _documentos3 = New TrackableCollection(Of Documentos)
                AddHandler _documentos3.CollectionChanged, AddressOf FixupDocumentos3
            End If
            Return _documentos3
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos3, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos3 IsNot Nothing Then
                    RemoveHandler _documentos3.CollectionChanged, AddressOf FixupDocumentos3
                End If
                _documentos3 = value
                If _documentos3 IsNot Nothing Then
                    AddHandler _documentos3.CollectionChanged, AddressOf FixupDocumentos3
                End If
                OnNavigationPropertyChanged("Documentos3")
            End If
        End Set
    End Property

    Private _documentos3 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos4() As TrackableCollection(Of Documentos)
        Get
            If _documentos4 Is Nothing Then
                _documentos4 = New TrackableCollection(Of Documentos)
                AddHandler _documentos4.CollectionChanged, AddressOf FixupDocumentos4
            End If
            Return _documentos4
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos4, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos4 IsNot Nothing Then
                    RemoveHandler _documentos4.CollectionChanged, AddressOf FixupDocumentos4
                End If
                _documentos4 = value
                If _documentos4 IsNot Nothing Then
                    AddHandler _documentos4.CollectionChanged, AddressOf FixupDocumentos4
                End If
                OnNavigationPropertyChanged("Documentos4")
            End If
        End Set
    End Property

    Private _documentos4 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos5() As TrackableCollection(Of Documentos)
        Get
            If _documentos5 Is Nothing Then
                _documentos5 = New TrackableCollection(Of Documentos)
                AddHandler _documentos5.CollectionChanged, AddressOf FixupDocumentos5
            End If
            Return _documentos5
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos5, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos5 IsNot Nothing Then
                    RemoveHandler _documentos5.CollectionChanged, AddressOf FixupDocumentos5
                End If
                _documentos5 = value
                If _documentos5 IsNot Nothing Then
                    AddHandler _documentos5.CollectionChanged, AddressOf FixupDocumentos5
                End If
                OnNavigationPropertyChanged("Documentos5")
            End If
        End Set
    End Property

    Private _documentos5 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property Documentos6() As TrackableCollection(Of Documentos)
        Get
            If _documentos6 Is Nothing Then
                _documentos6 = New TrackableCollection(Of Documentos)
                AddHandler _documentos6.CollectionChanged, AddressOf FixupDocumentos6
            End If
            Return _documentos6
        End Get
        Set(ByVal value As TrackableCollection(Of Documentos))
            If Not Object.ReferenceEquals(_documentos6, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentos6 IsNot Nothing Then
                    RemoveHandler _documentos6.CollectionChanged, AddressOf FixupDocumentos6
                End If
                _documentos6 = value
                If _documentos6 IsNot Nothing Then
                    AddHandler _documentos6.CollectionChanged, AddressOf FixupDocumentos6
                End If
                OnNavigationPropertyChanged("Documentos6")
            End If
        End Set
    End Property

    Private _documentos6 As TrackableCollection(Of Documentos)

    <DataMember()>
    Public Property GrupoTrabajoDiasDescanso() As TrackableCollection(Of GrupoTrabajoDiasDescanso)
        Get
            If _grupoTrabajoDiasDescanso Is Nothing Then
                _grupoTrabajoDiasDescanso = New TrackableCollection(Of GrupoTrabajoDiasDescanso)
                AddHandler _grupoTrabajoDiasDescanso.CollectionChanged, AddressOf FixupGrupoTrabajoDiasDescanso
            End If
            Return _grupoTrabajoDiasDescanso
        End Get
        Set(ByVal value As TrackableCollection(Of GrupoTrabajoDiasDescanso))
            If Not Object.ReferenceEquals(_grupoTrabajoDiasDescanso, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _grupoTrabajoDiasDescanso IsNot Nothing Then
                    RemoveHandler _grupoTrabajoDiasDescanso.CollectionChanged, AddressOf FixupGrupoTrabajoDiasDescanso
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As GrupoTrabajoDiasDescanso In _grupoTrabajoDiasDescanso
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _grupoTrabajoDiasDescanso = value
                If _grupoTrabajoDiasDescanso IsNot Nothing Then
                    AddHandler _grupoTrabajoDiasDescanso.CollectionChanged, AddressOf FixupGrupoTrabajoDiasDescanso
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As GrupoTrabajoDiasDescanso In _grupoTrabajoDiasDescanso
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("GrupoTrabajoDiasDescanso")
            End If
        End Set
    End Property

    Private _grupoTrabajoDiasDescanso As TrackableCollection(Of GrupoTrabajoDiasDescanso)

    <DataMember()>
    Public Property Despachos() As TrackableCollection(Of Despachos)
        Get
            If _despachos Is Nothing Then
                _despachos = New TrackableCollection(Of Despachos)
                AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
            End If
            Return _despachos
        End Get
        Set(ByVal value As TrackableCollection(Of Despachos))
            If Not Object.ReferenceEquals(_despachos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _despachos IsNot Nothing Then
                    RemoveHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                _despachos = value
                If _despachos IsNot Nothing Then
                    AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                OnNavigationPropertyChanged("Despachos")
            End If
        End Set
    End Property

    Private _despachos As TrackableCollection(Of Despachos)

    <DataMember()>
    Public Property DetalleGrupoEmpleado() As TrackableCollection(Of DetalleGrupoEmpleado)
        Get
            If _detalleGrupoEmpleado Is Nothing Then
                _detalleGrupoEmpleado = New TrackableCollection(Of DetalleGrupoEmpleado)
                AddHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
            End If
            Return _detalleGrupoEmpleado
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleGrupoEmpleado))
            If Not Object.ReferenceEquals(_detalleGrupoEmpleado, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleGrupoEmpleado IsNot Nothing Then
                    RemoveHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
                End If
                _detalleGrupoEmpleado = value
                If _detalleGrupoEmpleado IsNot Nothing Then
                    AddHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
                End If
                OnNavigationPropertyChanged("DetalleGrupoEmpleado")
            End If
        End Set
    End Property

    Private _detalleGrupoEmpleado As TrackableCollection(Of DetalleGrupoEmpleado)

    <DataMember()>
    Public Property GrupoEmpleado() As TrackableCollection(Of GrupoEmpleado)
        Get
            If _grupoEmpleado Is Nothing Then
                _grupoEmpleado = New TrackableCollection(Of GrupoEmpleado)
                AddHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
            End If
            Return _grupoEmpleado
        End Get
        Set(ByVal value As TrackableCollection(Of GrupoEmpleado))
            If Not Object.ReferenceEquals(_grupoEmpleado, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _grupoEmpleado IsNot Nothing Then
                    RemoveHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
                End If
                _grupoEmpleado = value
                If _grupoEmpleado IsNot Nothing Then
                    AddHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
                End If
                OnNavigationPropertyChanged("GrupoEmpleado")
            End If
        End Set
    End Property

    Private _grupoEmpleado As TrackableCollection(Of GrupoEmpleado)

    <DataMember()>
    Public Property CajeroAnexo() As TrackableCollection(Of CajeroAnexo)
        Get
            If _cajeroAnexo Is Nothing Then
                _cajeroAnexo = New TrackableCollection(Of CajeroAnexo)
                AddHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
            End If
            Return _cajeroAnexo
        End Get
        Set(ByVal value As TrackableCollection(Of CajeroAnexo))
            If Not Object.ReferenceEquals(_cajeroAnexo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cajeroAnexo IsNot Nothing Then
                    RemoveHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminaci칩n en cascada para aquellas entidades de la colecci칩n actual.
                    For Each item As CajeroAnexo In _cajeroAnexo
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _cajeroAnexo = value
                If _cajeroAnexo IsNot Nothing Then
                    AddHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
                    ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminaci칩n en cascada para aquellas entidades que ya se encuentran en la nueva colecci칩n.
                    For Each item As CajeroAnexo In _cajeroAnexo
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("CajeroAnexo")
            End If
        End Set
    End Property

    Private _cajeroAnexo As TrackableCollection(Of CajeroAnexo)

    <DataMember()>
    Public Property ProvisionCompras() As TrackableCollection(Of ProvisionCompras)
        Get
            If _provisionCompras Is Nothing Then
                _provisionCompras = New TrackableCollection(Of ProvisionCompras)
                AddHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
            End If
            Return _provisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of ProvisionCompras))
            If Not Object.ReferenceEquals(_provisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _provisionCompras IsNot Nothing Then
                    RemoveHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
                End If
                _provisionCompras = value
                If _provisionCompras IsNot Nothing Then
                    AddHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
                End If
                OnNavigationPropertyChanged("ProvisionCompras")
            End If
        End Set
    End Property

    Private _provisionCompras As TrackableCollection(Of ProvisionCompras)

    <DataMember()>
    Public Property ReferenciaProvisionCompras() As TrackableCollection(Of ReferenciaProvisionCompras)
        Get
            If _referenciaProvisionCompras Is Nothing Then
                _referenciaProvisionCompras = New TrackableCollection(Of ReferenciaProvisionCompras)
                AddHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
            End If
            Return _referenciaProvisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of ReferenciaProvisionCompras))
            If Not Object.ReferenceEquals(_referenciaProvisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _referenciaProvisionCompras IsNot Nothing Then
                    RemoveHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
                End If
                _referenciaProvisionCompras = value
                If _referenciaProvisionCompras IsNot Nothing Then
                    AddHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
                End If
                OnNavigationPropertyChanged("ReferenciaProvisionCompras")
            End If
        End Set
    End Property

    Private _referenciaProvisionCompras As TrackableCollection(Of ReferenciaProvisionCompras)

    <DataMember()>
    Public Property DocumentosPromocion() As TrackableCollection(Of DocumentosPromocion)
        Get
            If _documentosPromocion Is Nothing Then
                _documentosPromocion = New TrackableCollection(Of DocumentosPromocion)
                AddHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
            End If
            Return _documentosPromocion
        End Get
        Set(ByVal value As TrackableCollection(Of DocumentosPromocion))
            If Not Object.ReferenceEquals(_documentosPromocion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentosPromocion IsNot Nothing Then
                    RemoveHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
                End If
                _documentosPromocion = value
                If _documentosPromocion IsNot Nothing Then
                    AddHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
                End If
                OnNavigationPropertyChanged("DocumentosPromocion")
            End If
        End Set
    End Property

    Private _documentosPromocion As TrackableCollection(Of DocumentosPromocion)

    <DataMember()>
    Public Property ProvisionCompras_1() As TrackableCollection(Of ProvisionCompras)
        Get
            If _provisionCompras_1 Is Nothing Then
                _provisionCompras_1 = New TrackableCollection(Of ProvisionCompras)
                AddHandler _provisionCompras_1.CollectionChanged, AddressOf FixupProvisionCompras_1
            End If
            Return _provisionCompras_1
        End Get
        Set(ByVal value As TrackableCollection(Of ProvisionCompras))
            If Not Object.ReferenceEquals(_provisionCompras_1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _provisionCompras_1 IsNot Nothing Then
                    RemoveHandler _provisionCompras_1.CollectionChanged, AddressOf FixupProvisionCompras_1
                End If
                _provisionCompras_1 = value
                If _provisionCompras_1 IsNot Nothing Then
                    AddHandler _provisionCompras_1.CollectionChanged, AddressOf FixupProvisionCompras_1
                End If
                OnNavigationPropertyChanged("ProvisionCompras_1")
            End If
        End Set
    End Property

    Private _provisionCompras_1 As TrackableCollection(Of ProvisionCompras)

    <DataMember()>
    Public Property RubroPersona() As TrackableCollection(Of RubroPersona)
        Get
            If _rubroPersona Is Nothing Then
                _rubroPersona = New TrackableCollection(Of RubroPersona)
                AddHandler _rubroPersona.CollectionChanged, AddressOf FixupRubroPersona
            End If
            Return _rubroPersona
        End Get
        Set(ByVal value As TrackableCollection(Of RubroPersona))
            If Not Object.ReferenceEquals(_rubroPersona, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rubroPersona IsNot Nothing Then
                    RemoveHandler _rubroPersona.CollectionChanged, AddressOf FixupRubroPersona
                End If
                _rubroPersona = value
                If _rubroPersona IsNot Nothing Then
                    AddHandler _rubroPersona.CollectionChanged, AddressOf FixupRubroPersona
                End If
                OnNavigationPropertyChanged("RubroPersona")
            End If
        End Set
    End Property

    Private _rubroPersona As TrackableCollection(Of RubroPersona)

    <DataMember()>
    Public Property BloqueosCodigoPersona() As BloqueosCodigoPersona
        Get
            Return _bloqueosCodigoPersona
        End Get
        Set(ByVal value As BloqueosCodigoPersona)
            If _bloqueosCodigoPersona IsNot value Then
                Dim previousValue As BloqueosCodigoPersona = _bloqueosCodigoPersona
                _bloqueosCodigoPersona = value
                FixupBloqueosCodigoPersona(previousValue)
                OnNavigationPropertyChanged("BloqueosCodigoPersona")
            End If
        End Set
    End Property

    Private _bloqueosCodigoPersona As BloqueosCodigoPersona


    <DataMember()>
    Public Property CuadroComparativo() As TrackableCollection(Of CuadroComparativo)
        Get
            If _cuadroComparativo Is Nothing Then
                _cuadroComparativo = New TrackableCollection(Of CuadroComparativo)
                AddHandler _cuadroComparativo.CollectionChanged, AddressOf FixupCuadroComparativo
            End If
            Return _cuadroComparativo
        End Get
        Set(ByVal value As TrackableCollection(Of CuadroComparativo))
            If Not Object.ReferenceEquals(_cuadroComparativo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuadroComparativo IsNot Nothing Then
                    RemoveHandler _cuadroComparativo.CollectionChanged, AddressOf FixupCuadroComparativo
                End If
                _cuadroComparativo = value
                If _cuadroComparativo IsNot Nothing Then
                    AddHandler _cuadroComparativo.CollectionChanged, AddressOf FixupCuadroComparativo
                End If
                OnNavigationPropertyChanged("CuadroComparativo")
            End If
        End Set
    End Property

    Private _cuadroComparativo As TrackableCollection(Of CuadroComparativo)

    <DataMember()>
    Public Property RegistroEquipo() As TrackableCollection(Of RegistroEquipo)
        Get
            If _registroEquipo Is Nothing Then
                _registroEquipo = New TrackableCollection(Of RegistroEquipo)
                AddHandler _registroEquipo.CollectionChanged, AddressOf FixupRegistroEquipo
            End If
            Return _registroEquipo
        End Get
        Set(ByVal value As TrackableCollection(Of RegistroEquipo))
            If Not Object.ReferenceEquals(_registroEquipo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _registroEquipo IsNot Nothing Then
                    RemoveHandler _registroEquipo.CollectionChanged, AddressOf FixupRegistroEquipo
                End If
                _registroEquipo = value
                If _registroEquipo IsNot Nothing Then
                    AddHandler _registroEquipo.CollectionChanged, AddressOf FixupRegistroEquipo
                End If
                OnNavigationPropertyChanged("RegistroEquipo")
            End If
        End Set
    End Property

    Private _registroEquipo As TrackableCollection(Of RegistroEquipo)

    <DataMember()>
    Public Property FaltaSancion() As TrackableCollection(Of FaltaSancion)
        Get
            If _faltaSancion Is Nothing Then
                _faltaSancion = New TrackableCollection(Of FaltaSancion)
                AddHandler _faltaSancion.CollectionChanged, AddressOf FixupFaltaSancion
            End If
            Return _faltaSancion
        End Get
        Set(ByVal value As TrackableCollection(Of FaltaSancion))
            If Not Object.ReferenceEquals(_faltaSancion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _faltaSancion IsNot Nothing Then
                    RemoveHandler _faltaSancion.CollectionChanged, AddressOf FixupFaltaSancion
                End If
                _faltaSancion = value
                If _faltaSancion IsNot Nothing Then
                    AddHandler _faltaSancion.CollectionChanged, AddressOf FixupFaltaSancion
                End If
                OnNavigationPropertyChanged("FaltaSancion")
            End If
        End Set
    End Property

    Private _faltaSancion As TrackableCollection(Of FaltaSancion)

    <DataMember()>
    Public Property Sancion() As TrackableCollection(Of Sancion)
        Get
            If _sancion Is Nothing Then
                _sancion = New TrackableCollection(Of Sancion)
                AddHandler _sancion.CollectionChanged, AddressOf FixupSancion
            End If
            Return _sancion
        End Get
        Set(ByVal value As TrackableCollection(Of Sancion))
            If Not Object.ReferenceEquals(_sancion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _sancion IsNot Nothing Then
                    RemoveHandler _sancion.CollectionChanged, AddressOf FixupSancion
                End If
                _sancion = value
                If _sancion IsNot Nothing Then
                    AddHandler _sancion.CollectionChanged, AddressOf FixupSancion
                End If
                OnNavigationPropertyChanged("Sancion")
            End If
        End Set
    End Property

    Private _sancion As TrackableCollection(Of Sancion)

    <DataMember()>
    Public Property Sancion1() As TrackableCollection(Of Sancion)
        Get
            If _sancion1 Is Nothing Then
                _sancion1 = New TrackableCollection(Of Sancion)
                AddHandler _sancion1.CollectionChanged, AddressOf FixupSancion1
            End If
            Return _sancion1
        End Get
        Set(ByVal value As TrackableCollection(Of Sancion))
            If Not Object.ReferenceEquals(_sancion1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _sancion1 IsNot Nothing Then
                    RemoveHandler _sancion1.CollectionChanged, AddressOf FixupSancion1
                End If
                _sancion1 = value
                If _sancion1 IsNot Nothing Then
                    AddHandler _sancion1.CollectionChanged, AddressOf FixupSancion1
                End If
                OnNavigationPropertyChanged("Sancion1")
            End If
        End Set
    End Property

    Private _sancion1 As TrackableCollection(Of Sancion)

    <DataMember()>
    Public Property Sancion2() As TrackableCollection(Of Sancion)
        Get
            If _sancion2 Is Nothing Then
                _sancion2 = New TrackableCollection(Of Sancion)
                AddHandler _sancion2.CollectionChanged, AddressOf FixupSancion2
            End If
            Return _sancion2
        End Get
        Set(ByVal value As TrackableCollection(Of Sancion))
            If Not Object.ReferenceEquals(_sancion2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _sancion2 IsNot Nothing Then
                    RemoveHandler _sancion2.CollectionChanged, AddressOf FixupSancion2
                End If
                _sancion2 = value
                If _sancion2 IsNot Nothing Then
                    AddHandler _sancion2.CollectionChanged, AddressOf FixupSancion2
                End If
                OnNavigationPropertyChanged("Sancion2")
            End If
        End Set
    End Property

    Private _sancion2 As TrackableCollection(Of Sancion)

    <DataMember()>
    Public Property DocumentoGuias() As TrackableCollection(Of DocumentoGuias)
        Get
            If _documentoGuias Is Nothing Then
                _documentoGuias = New TrackableCollection(Of DocumentoGuias)
                AddHandler _documentoGuias.CollectionChanged, AddressOf FixupDocumentoGuias
            End If
            Return _documentoGuias
        End Get
        Set(ByVal value As TrackableCollection(Of DocumentoGuias))
            If Not Object.ReferenceEquals(_documentoGuias, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentoGuias IsNot Nothing Then
                    RemoveHandler _documentoGuias.CollectionChanged, AddressOf FixupDocumentoGuias
                End If
                _documentoGuias = value
                If _documentoGuias IsNot Nothing Then
                    AddHandler _documentoGuias.CollectionChanged, AddressOf FixupDocumentoGuias
                End If
                OnNavigationPropertyChanged("DocumentoGuias")
            End If
        End Set
    End Property

    Private _documentoGuias As TrackableCollection(Of DocumentoGuias)

    <DataMember()>
    Public Property PCDCotizacionDetalle() As TrackableCollection(Of PCDCotizacionDetalle)
        Get
            If _pCDCotizacionDetalle Is Nothing Then
                _pCDCotizacionDetalle = New TrackableCollection(Of PCDCotizacionDetalle)
                AddHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
            End If
            Return _pCDCotizacionDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of PCDCotizacionDetalle))
            If Not Object.ReferenceEquals(_pCDCotizacionDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _pCDCotizacionDetalle IsNot Nothing Then
                    RemoveHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
                End If
                _pCDCotizacionDetalle = value
                If _pCDCotizacionDetalle IsNot Nothing Then
                    AddHandler _pCDCotizacionDetalle.CollectionChanged, AddressOf FixupPCDCotizacionDetalle
                End If
                OnNavigationPropertyChanged("PCDCotizacionDetalle")
            End If
        End Set
    End Property

    Private _pCDCotizacionDetalle As TrackableCollection(Of PCDCotizacionDetalle)

    <DataMember()>
    Public Property OrdenServicio() As TrackableCollection(Of OrdenServicio)
        Get
            If _ordenServicio Is Nothing Then
                _ordenServicio = New TrackableCollection(Of OrdenServicio)
                AddHandler _ordenServicio.CollectionChanged, AddressOf FixupOrdenServicio
            End If
            Return _ordenServicio
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenServicio))
            If Not Object.ReferenceEquals(_ordenServicio, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenServicio IsNot Nothing Then
                    RemoveHandler _ordenServicio.CollectionChanged, AddressOf FixupOrdenServicio
                End If
                _ordenServicio = value
                If _ordenServicio IsNot Nothing Then
                    AddHandler _ordenServicio.CollectionChanged, AddressOf FixupOrdenServicio
                End If
                OnNavigationPropertyChanged("OrdenServicio")
            End If
        End Set
    End Property

    Private _ordenServicio As TrackableCollection(Of OrdenServicio)

    <DataMember()>
    Public Property SolicitudSoporte() As TrackableCollection(Of SolicitudSoporte)
        Get
            If _solicitudSoporte Is Nothing Then
                _solicitudSoporte = New TrackableCollection(Of SolicitudSoporte)
                AddHandler _solicitudSoporte.CollectionChanged, AddressOf FixupSolicitudSoporte
            End If
            Return _solicitudSoporte
        End Get
        Set(ByVal value As TrackableCollection(Of SolicitudSoporte))
            If Not Object.ReferenceEquals(_solicitudSoporte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _solicitudSoporte IsNot Nothing Then
                    RemoveHandler _solicitudSoporte.CollectionChanged, AddressOf FixupSolicitudSoporte
                End If
                _solicitudSoporte = value
                If _solicitudSoporte IsNot Nothing Then
                    AddHandler _solicitudSoporte.CollectionChanged, AddressOf FixupSolicitudSoporte
                End If
                OnNavigationPropertyChanged("SolicitudSoporte")
            End If
        End Set
    End Property

    Private _solicitudSoporte As TrackableCollection(Of SolicitudSoporte)

    <DataMember()>
    Public Property SolicitudSoporte1() As TrackableCollection(Of SolicitudSoporte)
        Get
            If _solicitudSoporte1 Is Nothing Then
                _solicitudSoporte1 = New TrackableCollection(Of SolicitudSoporte)
                AddHandler _solicitudSoporte1.CollectionChanged, AddressOf FixupSolicitudSoporte1
            End If
            Return _solicitudSoporte1
        End Get
        Set(ByVal value As TrackableCollection(Of SolicitudSoporte))
            If Not Object.ReferenceEquals(_solicitudSoporte1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _solicitudSoporte1 IsNot Nothing Then
                    RemoveHandler _solicitudSoporte1.CollectionChanged, AddressOf FixupSolicitudSoporte1
                End If
                _solicitudSoporte1 = value
                If _solicitudSoporte1 IsNot Nothing Then
                    AddHandler _solicitudSoporte1.CollectionChanged, AddressOf FixupSolicitudSoporte1
                End If
                OnNavigationPropertyChanged("SolicitudSoporte1")
            End If
        End Set
    End Property

    Private _solicitudSoporte1 As TrackableCollection(Of SolicitudSoporte)

    <DataMember()>
    Public Property RecepcionDocumento() As TrackableCollection(Of RecepcionDocumento)
        Get
            If _recepcionDocumento Is Nothing Then
                _recepcionDocumento = New TrackableCollection(Of RecepcionDocumento)
                AddHandler _recepcionDocumento.CollectionChanged, AddressOf FixupRecepcionDocumento
            End If
            Return _recepcionDocumento
        End Get
        Set(ByVal value As TrackableCollection(Of RecepcionDocumento))
            If Not Object.ReferenceEquals(_recepcionDocumento, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _recepcionDocumento IsNot Nothing Then
                    RemoveHandler _recepcionDocumento.CollectionChanged, AddressOf FixupRecepcionDocumento
                End If
                _recepcionDocumento = value
                If _recepcionDocumento IsNot Nothing Then
                    AddHandler _recepcionDocumento.CollectionChanged, AddressOf FixupRecepcionDocumento
                End If
                OnNavigationPropertyChanged("RecepcionDocumento")
            End If
        End Set
    End Property

    Private _recepcionDocumento As TrackableCollection(Of RecepcionDocumento)

    <DataMember()>
    Public Property RecepcionDocumento1() As TrackableCollection(Of RecepcionDocumento)
        Get
            If _recepcionDocumento1 Is Nothing Then
                _recepcionDocumento1 = New TrackableCollection(Of RecepcionDocumento)
                AddHandler _recepcionDocumento1.CollectionChanged, AddressOf FixupRecepcionDocumento1
            End If
            Return _recepcionDocumento1
        End Get
        Set(ByVal value As TrackableCollection(Of RecepcionDocumento))
            If Not Object.ReferenceEquals(_recepcionDocumento1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _recepcionDocumento1 IsNot Nothing Then
                    RemoveHandler _recepcionDocumento1.CollectionChanged, AddressOf FixupRecepcionDocumento1
                End If
                _recepcionDocumento1 = value
                If _recepcionDocumento1 IsNot Nothing Then
                    AddHandler _recepcionDocumento1.CollectionChanged, AddressOf FixupRecepcionDocumento1
                End If
                OnNavigationPropertyChanged("RecepcionDocumento1")
            End If
        End Set
    End Property

    Private _recepcionDocumento1 As TrackableCollection(Of RecepcionDocumento)

    <DataMember()>
    Public Property FotoPersonas() As TrackableCollection(Of FotoPersonas)
        Get
            If _fotoPersonas Is Nothing Then
                _fotoPersonas = New TrackableCollection(Of FotoPersonas)
                AddHandler _fotoPersonas.CollectionChanged, AddressOf FixupFotoPersonas
            End If
            Return _fotoPersonas
        End Get
        Set(ByVal value As TrackableCollection(Of FotoPersonas))
            If Not Object.ReferenceEquals(_fotoPersonas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _fotoPersonas IsNot Nothing Then
                    RemoveHandler _fotoPersonas.CollectionChanged, AddressOf FixupFotoPersonas
                End If
                _fotoPersonas = value
                If _fotoPersonas IsNot Nothing Then
                    AddHandler _fotoPersonas.CollectionChanged, AddressOf FixupFotoPersonas
                End If
                OnNavigationPropertyChanged("FotoPersonas")
            End If
        End Set
    End Property

    Private _fotoPersonas As TrackableCollection(Of FotoPersonas)

    <DataMember()>
    Public Property BloqueoVendedor() As BloqueoVendedor
        Get
            Return _bloqueoVendedor
        End Get
        Set(ByVal value As BloqueoVendedor)
            If _bloqueoVendedor IsNot value Then
                Dim previousValue As BloqueoVendedor = _bloqueoVendedor
                _bloqueoVendedor = value
                FixupBloqueoVendedor(previousValue)
                OnNavigationPropertyChanged("BloqueoVendedor")
            End If
        End Set
    End Property

    Private _bloqueoVendedor As BloqueoVendedor


    <DataMember()>
    Public Property RegistroMaquina() As TrackableCollection(Of RegistroMaquina)
        Get
            If _registroMaquina Is Nothing Then
                _registroMaquina = New TrackableCollection(Of RegistroMaquina)
                AddHandler _registroMaquina.CollectionChanged, AddressOf FixupRegistroMaquina
            End If
            Return _registroMaquina
        End Get
        Set(ByVal value As TrackableCollection(Of RegistroMaquina))
            If Not Object.ReferenceEquals(_registroMaquina, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _registroMaquina IsNot Nothing Then
                    RemoveHandler _registroMaquina.CollectionChanged, AddressOf FixupRegistroMaquina
                End If
                _registroMaquina = value
                If _registroMaquina IsNot Nothing Then
                    AddHandler _registroMaquina.CollectionChanged, AddressOf FixupRegistroMaquina
                End If
                OnNavigationPropertyChanged("RegistroMaquina")
            End If
        End Set
    End Property

    Private _registroMaquina As TrackableCollection(Of RegistroMaquina)

    <DataMember()>
    Public Property FichaInspeccion() As TrackableCollection(Of FichaInspeccion)
        Get
            If _fichaInspeccion Is Nothing Then
                _fichaInspeccion = New TrackableCollection(Of FichaInspeccion)
                AddHandler _fichaInspeccion.CollectionChanged, AddressOf FixupFichaInspeccion
            End If
            Return _fichaInspeccion
        End Get
        Set(ByVal value As TrackableCollection(Of FichaInspeccion))
            If Not Object.ReferenceEquals(_fichaInspeccion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _fichaInspeccion IsNot Nothing Then
                    RemoveHandler _fichaInspeccion.CollectionChanged, AddressOf FixupFichaInspeccion
                End If
                _fichaInspeccion = value
                If _fichaInspeccion IsNot Nothing Then
                    AddHandler _fichaInspeccion.CollectionChanged, AddressOf FixupFichaInspeccion
                End If
                OnNavigationPropertyChanged("FichaInspeccion")
            End If
        End Set
    End Property

    Private _fichaInspeccion As TrackableCollection(Of FichaInspeccion)

    <DataMember()>
    Public Property DocuIso() As TrackableCollection(Of DocuIso)
        Get
            If _docuIso Is Nothing Then
                _docuIso = New TrackableCollection(Of DocuIso)
                AddHandler _docuIso.CollectionChanged, AddressOf FixupDocuIso
            End If
            Return _docuIso
        End Get
        Set(ByVal value As TrackableCollection(Of DocuIso))
            If Not Object.ReferenceEquals(_docuIso, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuIso IsNot Nothing Then
                    RemoveHandler _docuIso.CollectionChanged, AddressOf FixupDocuIso
                End If
                _docuIso = value
                If _docuIso IsNot Nothing Then
                    AddHandler _docuIso.CollectionChanged, AddressOf FixupDocuIso
                End If
                OnNavigationPropertyChanged("DocuIso")
            End If
        End Set
    End Property

    Private _docuIso As TrackableCollection(Of DocuIso)

    <DataMember()>
    Public Property DocuIso1() As TrackableCollection(Of DocuIso)
        Get
            If _docuIso1 Is Nothing Then
                _docuIso1 = New TrackableCollection(Of DocuIso)
                AddHandler _docuIso1.CollectionChanged, AddressOf FixupDocuIso1
            End If
            Return _docuIso1
        End Get
        Set(ByVal value As TrackableCollection(Of DocuIso))
            If Not Object.ReferenceEquals(_docuIso1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuIso1 IsNot Nothing Then
                    RemoveHandler _docuIso1.CollectionChanged, AddressOf FixupDocuIso1
                End If
                _docuIso1 = value
                If _docuIso1 IsNot Nothing Then
                    AddHandler _docuIso1.CollectionChanged, AddressOf FixupDocuIso1
                End If
                OnNavigationPropertyChanged("DocuIso1")
            End If
        End Set
    End Property

    Private _docuIso1 As TrackableCollection(Of DocuIso)

    <DataMember()>
    Public Property DocuIso2() As TrackableCollection(Of DocuIso)
        Get
            If _docuIso2 Is Nothing Then
                _docuIso2 = New TrackableCollection(Of DocuIso)
                AddHandler _docuIso2.CollectionChanged, AddressOf FixupDocuIso2
            End If
            Return _docuIso2
        End Get
        Set(ByVal value As TrackableCollection(Of DocuIso))
            If Not Object.ReferenceEquals(_docuIso2, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuIso2 IsNot Nothing Then
                    RemoveHandler _docuIso2.CollectionChanged, AddressOf FixupDocuIso2
                End If
                _docuIso2 = value
                If _docuIso2 IsNot Nothing Then
                    AddHandler _docuIso2.CollectionChanged, AddressOf FixupDocuIso2
                End If
                OnNavigationPropertyChanged("DocuIso2")
            End If
        End Set
    End Property

    Private _docuIso2 As TrackableCollection(Of DocuIso)

    <DataMember()>
    Public Property OrdenCompra() As TrackableCollection(Of OrdenCompra)
        Get
            If _ordenCompra Is Nothing Then
                _ordenCompra = New TrackableCollection(Of OrdenCompra)
                AddHandler _ordenCompra.CollectionChanged, AddressOf FixupOrdenCompra
            End If
            Return _ordenCompra
        End Get
        Set(ByVal value As TrackableCollection(Of OrdenCompra))
            If Not Object.ReferenceEquals(_ordenCompra, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _ordenCompra IsNot Nothing Then
                    RemoveHandler _ordenCompra.CollectionChanged, AddressOf FixupOrdenCompra
                End If
                _ordenCompra = value
                If _ordenCompra IsNot Nothing Then
                    AddHandler _ordenCompra.CollectionChanged, AddressOf FixupOrdenCompra
                End If
                OnNavigationPropertyChanged("OrdenCompra")
            End If
        End Set
    End Property

    Private _ordenCompra As TrackableCollection(Of OrdenCompra)

    <DataMember()>
    Public Property SolicitudAjustePrecio() As TrackableCollection(Of SolicitudAjustePrecio)
        Get
            If _solicitudAjustePrecio Is Nothing Then
                _solicitudAjustePrecio = New TrackableCollection(Of SolicitudAjustePrecio)
                AddHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
            End If
            Return _solicitudAjustePrecio
        End Get
        Set(ByVal value As TrackableCollection(Of SolicitudAjustePrecio))
            If Not Object.ReferenceEquals(_solicitudAjustePrecio, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _solicitudAjustePrecio IsNot Nothing Then
                    RemoveHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
                End If
                _solicitudAjustePrecio = value
                If _solicitudAjustePrecio IsNot Nothing Then
                    AddHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
                End If
                OnNavigationPropertyChanged("SolicitudAjustePrecio")
            End If
        End Set
    End Property

    Private _solicitudAjustePrecio As TrackableCollection(Of SolicitudAjustePrecio)

    <DataMember()>
    Public Property SolicitudAjustePrecio1() As TrackableCollection(Of SolicitudAjustePrecio)
        Get
            If _solicitudAjustePrecio1 Is Nothing Then
                _solicitudAjustePrecio1 = New TrackableCollection(Of SolicitudAjustePrecio)
                AddHandler _solicitudAjustePrecio1.CollectionChanged, AddressOf FixupSolicitudAjustePrecio1
            End If
            Return _solicitudAjustePrecio1
        End Get
        Set(ByVal value As TrackableCollection(Of SolicitudAjustePrecio))
            If Not Object.ReferenceEquals(_solicitudAjustePrecio1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _solicitudAjustePrecio1 IsNot Nothing Then
                    RemoveHandler _solicitudAjustePrecio1.CollectionChanged, AddressOf FixupSolicitudAjustePrecio1
                End If
                _solicitudAjustePrecio1 = value
                If _solicitudAjustePrecio1 IsNot Nothing Then
                    AddHandler _solicitudAjustePrecio1.CollectionChanged, AddressOf FixupSolicitudAjustePrecio1
                End If
                OnNavigationPropertyChanged("SolicitudAjustePrecio1")
            End If
        End Set
    End Property

    Private _solicitudAjustePrecio1 As TrackableCollection(Of SolicitudAjustePrecio)

    <DataMember()>
    Public Property CargaDescargaTransporte() As TrackableCollection(Of CargaDescargaTransporte)
        Get
            If _cargaDescargaTransporte Is Nothing Then
                _cargaDescargaTransporte = New TrackableCollection(Of CargaDescargaTransporte)
                AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
            End If
            Return _cargaDescargaTransporte
        End Get
        Set(ByVal value As TrackableCollection(Of CargaDescargaTransporte))
            If Not Object.ReferenceEquals(_cargaDescargaTransporte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cargaDescargaTransporte IsNot Nothing Then
                    RemoveHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                _cargaDescargaTransporte = value
                If _cargaDescargaTransporte IsNot Nothing Then
                    AddHandler _cargaDescargaTransporte.CollectionChanged, AddressOf FixupCargaDescargaTransporte
                End If
                OnNavigationPropertyChanged("CargaDescargaTransporte")
            End If
        End Set
    End Property

    Private _cargaDescargaTransporte As TrackableCollection(Of CargaDescargaTransporte)

    <DataMember()>
    Public Property RendicionGastos() As TrackableCollection(Of RendicionGastos)
        Get
            If _rendicionGastos Is Nothing Then
                _rendicionGastos = New TrackableCollection(Of RendicionGastos)
                AddHandler _rendicionGastos.CollectionChanged, AddressOf FixupRendicionGastos
            End If
            Return _rendicionGastos
        End Get
        Set(ByVal value As TrackableCollection(Of RendicionGastos))
            If Not Object.ReferenceEquals(_rendicionGastos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rendicionGastos IsNot Nothing Then
                    RemoveHandler _rendicionGastos.CollectionChanged, AddressOf FixupRendicionGastos
                End If
                _rendicionGastos = value
                If _rendicionGastos IsNot Nothing Then
                    AddHandler _rendicionGastos.CollectionChanged, AddressOf FixupRendicionGastos
                End If
                OnNavigationPropertyChanged("RendicionGastos")
            End If
        End Set
    End Property

    Private _rendicionGastos As TrackableCollection(Of RendicionGastos)

    <DataMember()>
    Public Property DetallePrestamo() As TrackableCollection(Of DetallePrestamo)
        Get
            If _detallePrestamo Is Nothing Then
                _detallePrestamo = New TrackableCollection(Of DetallePrestamo)
                AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
            End If
            Return _detallePrestamo
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePrestamo))
            If Not Object.ReferenceEquals(_detallePrestamo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePrestamo IsNot Nothing Then
                    RemoveHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                _detallePrestamo = value
                If _detallePrestamo IsNot Nothing Then
                    AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                OnNavigationPropertyChanged("DetallePrestamo")
            End If
        End Set
    End Property

    Private _detallePrestamo As TrackableCollection(Of DetallePrestamo)

    <DataMember()>
    Public Property DetallePrestamo1() As TrackableCollection(Of DetallePrestamo)
        Get
            If _detallePrestamo1 Is Nothing Then
                _detallePrestamo1 = New TrackableCollection(Of DetallePrestamo)
                AddHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
            End If
            Return _detallePrestamo1
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePrestamo))
            If Not Object.ReferenceEquals(_detallePrestamo1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePrestamo1 IsNot Nothing Then
                    RemoveHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
                End If
                _detallePrestamo1 = value
                If _detallePrestamo1 IsNot Nothing Then
                    AddHandler _detallePrestamo1.CollectionChanged, AddressOf FixupDetallePrestamo1
                End If
                OnNavigationPropertyChanged("DetallePrestamo1")
            End If
        End Set
    End Property

    Private _detallePrestamo1 As TrackableCollection(Of DetallePrestamo)

    <DataMember()>
    Public Property Prestamo() As TrackableCollection(Of Prestamo)
        Get
            If _prestamo Is Nothing Then
                _prestamo = New TrackableCollection(Of Prestamo)
                AddHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
            End If
            Return _prestamo
        End Get
        Set(ByVal value As TrackableCollection(Of Prestamo))
            If Not Object.ReferenceEquals(_prestamo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _prestamo IsNot Nothing Then
                    RemoveHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
                End If
                _prestamo = value
                If _prestamo IsNot Nothing Then
                    AddHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
                End If
                OnNavigationPropertyChanged("Prestamo")
            End If
        End Set
    End Property

    Private _prestamo As TrackableCollection(Of Prestamo)

    <DataMember()>
    Public Property CuentaRendirDetalle() As TrackableCollection(Of CuentaRendirDetalle)
        Get
            If _cuentaRendirDetalle Is Nothing Then
                _cuentaRendirDetalle = New TrackableCollection(Of CuentaRendirDetalle)
                AddHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
            End If
            Return _cuentaRendirDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of CuentaRendirDetalle))
            If Not Object.ReferenceEquals(_cuentaRendirDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentaRendirDetalle IsNot Nothing Then
                    RemoveHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
                End If
                _cuentaRendirDetalle = value
                If _cuentaRendirDetalle IsNot Nothing Then
                    AddHandler _cuentaRendirDetalle.CollectionChanged, AddressOf FixupCuentaRendirDetalle
                End If
                OnNavigationPropertyChanged("CuentaRendirDetalle")
            End If
        End Set
    End Property

    Private _cuentaRendirDetalle As TrackableCollection(Of CuentaRendirDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ActivosFijos.Clear()
        Asignaciones.Clear()
        Comprobantes.Clear()
        DetalleAsientosManuales.Clear()
        RestriccionArticulo.Clear()
        CartaFianza.Clear()
        DescuentoIncrementoTipoVentaPersonas.Clear()
        ListaPreciosArticulos.Clear()
        ContactoPersona.Clear()
        DatosUsuarios.Clear()
        DireccionesPersonas.Clear()
        DireccionesPersonas1 = Nothing
        DocPersonas.Clear()
        ComedorPLL.Clear()
        ComedorPLL1.Clear()
        DetalleComedorPLL.Clear()
        DetalleReparoTrabajador.Clear()
        CajaCtaCte.Clear()
        CajaCtaCte1.Clear()
        DatosLaborales.Clear()
        DatosLaborales1.Clear()
        DatosTrabajadorJudicial.Clear()
        DatosTrabajadorJudicial1.Clear()
        DetalleGrupoTrabajo.Clear()
        DetalleTesoreria.Clear()
        DetalleTesoreria1.Clear()
        MedioPagoTesoreria.Clear()
        CajaCtaCte2 = Nothing
        Personas1.Clear()
        Personas2 = Nothing
        Personas11.Clear()
        Personas3 = Nothing
        Personas12.Clear()
        Personas4 = Nothing
        Personas13.Clear()
        Personas5 = Nothing
        Personas14.Clear()
        Personas6 = Nothing
        Usuarios = Nothing
        PrestamosTrabajador.Clear()
        PrestamosTrabajador1.Clear()
        ReparoTrabajador.Clear()
        RolPersonaTipoPersona.Clear()
        TesoreriaPlanillas.Clear()
        Tesoreria.Clear()
        DetalleTrabajadorHoras.Clear()
        PermisosTrabajador.Clear()
        PermisosTrabajador1.Clear()
        AsientosContables.Clear()
        AsientosContables1.Clear()
        Leasing.Clear()
        Marcaciones.Clear()
        MovimientoCajaBanco.Clear()
        MovimientoCajaBanco1.Clear()
        MovimientoCajaBanco2.Clear()
        MovimientoCajaBanco3.Clear()
        Documentos.Clear()
        Documentos1.Clear()
        Documentos2.Clear()
        Documentos3.Clear()
        Documentos4.Clear()
        Documentos5.Clear()
        Documentos6.Clear()
        GrupoTrabajoDiasDescanso.Clear()
        Despachos.Clear()
        DetalleGrupoEmpleado.Clear()
        GrupoEmpleado.Clear()
        CajeroAnexo.Clear()
        ProvisionCompras.Clear()
        ReferenciaProvisionCompras.Clear()
        DocumentosPromocion.Clear()
        ProvisionCompras_1.Clear()
        RubroPersona.Clear()
        BloqueosCodigoPersona = Nothing
        CuadroComparativo.Clear()
        RegistroEquipo.Clear()
        FaltaSancion.Clear()
        Sancion.Clear()
        Sancion1.Clear()
        Sancion2.Clear()
        DocumentoGuias.Clear()
        PCDCotizacionDetalle.Clear()
        OrdenServicio.Clear()
        SolicitudSoporte.Clear()
        SolicitudSoporte1.Clear()
        RecepcionDocumento.Clear()
        RecepcionDocumento1.Clear()
        FotoPersonas.Clear()
        BloqueoVendedor = Nothing
        RegistroMaquina.Clear()
        FichaInspeccion.Clear()
        DocuIso.Clear()
        DocuIso1.Clear()
        DocuIso2.Clear()
        OrdenCompra.Clear()
        SolicitudAjustePrecio.Clear()
        SolicitudAjustePrecio1.Clear()
        CargaDescargaTransporte.Clear()
        RendicionGastos.Clear()
        DetallePrestamo.Clear()
        DetallePrestamo1.Clear()
        Prestamo.Clear()
        CuentaRendirDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupDireccionesPersonas1(ByVal previousValue As DireccionesPersonas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas1.Contains(Me) Then
            previousValue.Personas1.Remove(Me)
        End If

        If DireccionesPersonas1 IsNot Nothing Then
            If Not DireccionesPersonas1.Personas1.Contains(Me) Then
                DireccionesPersonas1.Personas1.Add(Me)
            End If

            DIR_ID = DireccionesPersonas1.DIR_ID
        ElseIf Not skipKeys Then
            DIR_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DireccionesPersonas1") AndAlso
                ChangeTracker.OriginalValues("DireccionesPersonas1") Is DireccionesPersonas1 Then
                ChangeTracker.OriginalValues.Remove("DireccionesPersonas1")
            Else
                ChangeTracker.RecordOriginalValue("DireccionesPersonas1", previousValue)
            End If
            If DireccionesPersonas1 IsNot Nothing AndAlso Not DireccionesPersonas1.ChangeTracker.ChangeTrackingEnabled Then
                DireccionesPersonas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupCajaCtaCte2(ByVal previousValue As CajaCtaCte, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas2.Contains(Me) Then
            previousValue.Personas2.Remove(Me)
        End If

        If CajaCtaCte2 IsNot Nothing Then
            If Not CajaCtaCte2.Personas2.Contains(Me) Then
                CajaCtaCte2.Personas2.Add(Me)
            End If

            CCC_ID = CajaCtaCte2.CCC_ID
        ElseIf Not skipKeys Then
            CCC_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("CajaCtaCte2") AndAlso
                ChangeTracker.OriginalValues("CajaCtaCte2") Is CajaCtaCte2 Then
                ChangeTracker.OriginalValues.Remove("CajaCtaCte2")
            Else
                ChangeTracker.RecordOriginalValue("CajaCtaCte2", previousValue)
            End If
            If CajaCtaCte2 IsNot Nothing AndAlso Not CajaCtaCte2.ChangeTracker.ChangeTrackingEnabled Then
                CajaCtaCte2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas2(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas1.Contains(Me) Then
            previousValue.Personas1.Remove(Me)
        End If

        If Personas2 IsNot Nothing Then
            If Not Personas2.Personas1.Contains(Me) Then
                Personas2.Personas1.Add(Me)
            End If

            PER_ID_BAN = Personas2.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_BAN = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas2") AndAlso
                ChangeTracker.OriginalValues("Personas2") Is Personas2 Then
                ChangeTracker.OriginalValues.Remove("Personas2")
            Else
                ChangeTracker.RecordOriginalValue("Personas2", previousValue)
            End If
            If Personas2 IsNot Nothing AndAlso Not Personas2.ChangeTracker.ChangeTrackingEnabled Then
                Personas2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas3(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas11.Contains(Me) Then
            previousValue.Personas11.Remove(Me)
        End If

        If Personas3 IsNot Nothing Then
            If Not Personas3.Personas11.Contains(Me) Then
                Personas3.Personas11.Add(Me)
            End If

            PER_ID_COB = Personas3.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_COB = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas3") AndAlso
                ChangeTracker.OriginalValues("Personas3") Is Personas3 Then
                ChangeTracker.OriginalValues.Remove("Personas3")
            Else
                ChangeTracker.RecordOriginalValue("Personas3", previousValue)
            End If
            If Personas3 IsNot Nothing AndAlso Not Personas3.ChangeTracker.ChangeTrackingEnabled Then
                Personas3.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas4(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas12.Contains(Me) Then
            previousValue.Personas12.Remove(Me)
        End If

        If Personas4 IsNot Nothing Then
            If Not Personas4.Personas12.Contains(Me) Then
                Personas4.Personas12.Add(Me)
            End If

            PER_ID_GRU = Personas4.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_GRU = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas4") AndAlso
                ChangeTracker.OriginalValues("Personas4") Is Personas4 Then
                ChangeTracker.OriginalValues.Remove("Personas4")
            Else
                ChangeTracker.RecordOriginalValue("Personas4", previousValue)
            End If
            If Personas4 IsNot Nothing AndAlso Not Personas4.ChangeTracker.ChangeTrackingEnabled Then
                Personas4.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas5(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas13.Contains(Me) Then
            previousValue.Personas13.Remove(Me)
        End If

        If Personas5 IsNot Nothing Then
            If Not Personas5.Personas13.Contains(Me) Then
                Personas5.Personas13.Add(Me)
            End If

            PER_ID_TRA = Personas5.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_TRA = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas5") AndAlso
                ChangeTracker.OriginalValues("Personas5") Is Personas5 Then
                ChangeTracker.OriginalValues.Remove("Personas5")
            Else
                ChangeTracker.RecordOriginalValue("Personas5", previousValue)
            End If
            If Personas5 IsNot Nothing AndAlso Not Personas5.ChangeTracker.ChangeTrackingEnabled Then
                Personas5.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas6(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Personas14.Contains(Me) Then
            previousValue.Personas14.Remove(Me)
        End If

        If Personas6 IsNot Nothing Then
            If Not Personas6.Personas14.Contains(Me) Then
                Personas6.Personas14.Add(Me)
            End If

            PER_ID_VEN = Personas6.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_VEN = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas6") AndAlso
                ChangeTracker.OriginalValues("Personas6") Is Personas6 Then
                ChangeTracker.OriginalValues.Remove("Personas6")
            Else
                ChangeTracker.RecordOriginalValue("Personas6", previousValue)
            End If
            If Personas6 IsNot Nothing AndAlso Not Personas6.ChangeTracker.ChangeTrackingEnabled Then
                Personas6.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupUsuarios(ByVal previousValue As Usuarios)
        If IsDeserializing Then
            Return
        End If

        If Usuarios IsNot Nothing Then
            USU_ID = Usuarios.USU_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Usuarios") AndAlso
                ChangeTracker.OriginalValues("Usuarios") Is Usuarios Then
                ChangeTracker.OriginalValues.Remove("Usuarios")
            Else
                ChangeTracker.RecordOriginalValue("Usuarios", previousValue)
            End If
            If Usuarios IsNot Nothing AndAlso Not Usuarios.ChangeTracker.ChangeTrackingEnabled Then
                Usuarios.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupBloqueosCodigoPersona(ByVal previousValue As BloqueosCodigoPersona)
        If previousValue IsNot Nothing Then
            RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf previousValue.HandleCascadeDelete
        End If

        If BloqueosCodigoPersona IsNot Nothing Then
            AddHandler ChangeTracker.ObjectStateChanging, AddressOf BloqueosCodigoPersona.HandleCascadeDelete
        End If
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.Personas, Me) Then
            previousValue.Personas = Nothing
        End If

        If BloqueosCodigoPersona IsNot Nothing Then
            BloqueosCodigoPersona.Personas = Me
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("BloqueosCodigoPersona") AndAlso
                ChangeTracker.OriginalValues("BloqueosCodigoPersona") Is BloqueosCodigoPersona Then
                ChangeTracker.OriginalValues.Remove("BloqueosCodigoPersona")
            Else
                ChangeTracker.RecordOriginalValue("BloqueosCodigoPersona", previousValue)
                ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                If previousValue IsNot Nothing AndAlso previousValue.ChangeTracker.State <> ObjectState.Added Then
                    previousValue.MarkAsDeleted()
                End If
            End If
            If BloqueosCodigoPersona IsNot Nothing AndAlso Not BloqueosCodigoPersona.ChangeTracker.ChangeTrackingEnabled Then
                BloqueosCodigoPersona.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupBloqueoVendedor(ByVal previousValue As BloqueoVendedor)
        If previousValue IsNot Nothing Then
            RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf previousValue.HandleCascadeDelete
        End If

        If BloqueoVendedor IsNot Nothing Then
            AddHandler ChangeTracker.ObjectStateChanging, AddressOf BloqueoVendedor.HandleCascadeDelete
        End If
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.Personas, Me) Then
            previousValue.Personas = Nothing
        End If

        If BloqueoVendedor IsNot Nothing Then
            BloqueoVendedor.Personas = Me
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("BloqueoVendedor") AndAlso
                ChangeTracker.OriginalValues("BloqueoVendedor") Is BloqueoVendedor Then
                ChangeTracker.OriginalValues.Remove("BloqueoVendedor")
            Else
                ChangeTracker.RecordOriginalValue("BloqueoVendedor", previousValue)
                ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                If previousValue IsNot Nothing AndAlso previousValue.ChangeTracker.State <> ObjectState.Added Then
                    previousValue.MarkAsDeleted()
                End If
            End If
            If BloqueoVendedor IsNot Nothing AndAlso Not BloqueoVendedor.ChangeTracker.ChangeTrackingEnabled Then
                BloqueoVendedor.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupActivosFijos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ActivosFijos In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ActivosFijos In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ActivosFijos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupAsignaciones(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Asignaciones In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Asignaciones", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Asignaciones In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Asignaciones", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupComprobantes(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Comprobantes In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Comprobantes", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Comprobantes In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Comprobantes", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleAsientosManuales(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAsientosManuales In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAsientosManuales", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRestriccionArticulo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RestriccionArticulo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RestriccionArticulo", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RestriccionArticulo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RestriccionArticulo", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupCartaFianza(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CartaFianza In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CartaFianza", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CartaFianza In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CartaFianza", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDescuentoIncrementoTipoVentaPersonas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DescuentoIncrementoTipoVentaPersonas In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DescuentoIncrementoTipoVentaPersonas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DescuentoIncrementoTipoVentaPersonas In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DescuentoIncrementoTipoVentaPersonas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupListaPreciosArticulos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ListaPreciosArticulos In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ListaPreciosArticulos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ListaPreciosArticulos In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ListaPreciosArticulos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupContactoPersona(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ContactoPersona In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ContactoPersona", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ContactoPersona In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ContactoPersona", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDatosUsuarios(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DatosUsuarios In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DatosUsuarios", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DatosUsuarios In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DatosUsuarios", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDireccionesPersonas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DireccionesPersonas In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DireccionesPersonas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DireccionesPersonas In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DireccionesPersonas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocPersonas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocPersonas In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocPersonas", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocPersonas In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocPersonas", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupComedorPLL(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ComedorPLL In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ComedorPLL", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ComedorPLL In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ComedorPLL", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupComedorPLL1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ComedorPLL In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ComedorPLL1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ComedorPLL In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ComedorPLL1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleComedorPLL(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleComedorPLL In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleComedorPLL", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleComedorPLL In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleComedorPLL", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleReparoTrabajador(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleReparoTrabajador In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleReparoTrabajador", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleReparoTrabajador In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleReparoTrabajador", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCajaCtaCte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CajaCtaCte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CajaCtaCte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCajaCtaCte1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CajaCtaCte1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CajaCtaCte In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CajaCtaCte1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDatosLaborales(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DatosLaborales In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DatosLaborales", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DatosLaborales In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DatosLaborales", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDatosLaborales1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DatosLaborales In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DatosLaborales1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DatosLaborales In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DatosLaborales1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDatosTrabajadorJudicial(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DatosTrabajadorJudicial In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DatosTrabajadorJudicial", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DatosTrabajadorJudicial In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DatosTrabajadorJudicial", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDatosTrabajadorJudicial1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DatosTrabajadorJudicial In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DatosTrabajadorJudicial1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DatosTrabajadorJudicial In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DatosTrabajadorJudicial1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleGrupoTrabajo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleGrupoTrabajo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleGrupoTrabajo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleGrupoTrabajo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleGrupoTrabajo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTesoreria1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTesoreria1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTesoreria In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTesoreria1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMedioPagoTesoreria(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MedioPagoTesoreria In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MedioPagoTesoreria", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MedioPagoTesoreria In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MedioPagoTesoreria", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Personas In e.NewItems
                item.Personas2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Personas1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Personas In e.OldItems
                If ReferenceEquals(item.Personas2, Me) Then
                    item.Personas2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Personas1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPersonas11(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Personas In e.NewItems
                item.Personas3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Personas11", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Personas In e.OldItems
                If ReferenceEquals(item.Personas3, Me) Then
                    item.Personas3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Personas11", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPersonas12(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Personas In e.NewItems
                item.Personas4 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Personas12", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Personas In e.OldItems
                If ReferenceEquals(item.Personas4, Me) Then
                    item.Personas4 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Personas12", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPersonas13(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Personas In e.NewItems
                item.Personas5 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Personas13", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Personas In e.OldItems
                If ReferenceEquals(item.Personas5, Me) Then
                    item.Personas5 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Personas13", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPersonas14(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Personas In e.NewItems
                item.Personas6 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Personas14", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Personas In e.OldItems
                If ReferenceEquals(item.Personas6, Me) Then
                    item.Personas6 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Personas14", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPrestamosTrabajador(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PrestamosTrabajador In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PrestamosTrabajador", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PrestamosTrabajador In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PrestamosTrabajador", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPrestamosTrabajador1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PrestamosTrabajador In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PrestamosTrabajador1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PrestamosTrabajador In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PrestamosTrabajador1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupReparoTrabajador(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ReparoTrabajador In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ReparoTrabajador", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ReparoTrabajador In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ReparoTrabajador", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolPersonaTipoPersona(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolPersonaTipoPersona In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolPersonaTipoPersona", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolPersonaTipoPersona In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolPersonaTipoPersona", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupTesoreriaPlanillas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As TesoreriaPlanillas In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("TesoreriaPlanillas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As TesoreriaPlanillas In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("TesoreriaPlanillas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupTesoreria(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Tesoreria In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Tesoreria", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Tesoreria In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Tesoreria", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleTrabajadorHoras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleTrabajadorHoras In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleTrabajadorHoras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleTrabajadorHoras In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleTrabajadorHoras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPermisosTrabajador(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PermisosTrabajador In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PermisosTrabajador", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PermisosTrabajador In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PermisosTrabajador", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPermisosTrabajador1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PermisosTrabajador In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PermisosTrabajador1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PermisosTrabajador In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PermisosTrabajador1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupAsientosContables(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As AsientosContables In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("AsientosContables", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As AsientosContables In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("AsientosContables", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupAsientosContables1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As AsientosContables In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("AsientosContables1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As AsientosContables In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("AsientosContables1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupLeasing(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Leasing In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Leasing", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Leasing In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Leasing", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMarcaciones(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Marcaciones In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Marcaciones", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Marcaciones In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Marcaciones", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.Personas2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.Personas2, Me) Then
                    item.Personas2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupMovimientoCajaBanco3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.NewItems
                item.Personas3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("MovimientoCajaBanco3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As MovimientoCajaBanco In e.OldItems
                If ReferenceEquals(item.Personas3, Me) Then
                    item.Personas3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("MovimientoCajaBanco3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas2, Me) Then
                    item.Personas2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos3(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas3 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos3", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas3, Me) Then
                    item.Personas3 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos3", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos4(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas4 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos4", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas4, Me) Then
                    item.Personas4 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos4", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos5(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas5 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos5", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas5, Me) Then
                    item.Personas5 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos5", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentos6(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Documentos In e.NewItems
                item.Personas6 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Documentos6", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Documentos In e.OldItems
                If ReferenceEquals(item.Personas6, Me) Then
                    item.Personas6 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Documentos6", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupGrupoTrabajoDiasDescanso(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As GrupoTrabajoDiasDescanso In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("GrupoTrabajoDiasDescanso", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As GrupoTrabajoDiasDescanso In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("GrupoTrabajoDiasDescanso", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDespachos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Despachos In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Despachos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Despachos In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Despachos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleGrupoEmpleado(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleGrupoEmpleado In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleGrupoEmpleado", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleGrupoEmpleado In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleGrupoEmpleado", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupGrupoEmpleado(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As GrupoEmpleado In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("GrupoEmpleado", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As GrupoEmpleado In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("GrupoEmpleado", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCajeroAnexo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CajeroAnexo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CajeroAnexo", item)
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CajeroAnexo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CajeroAnexo", item)
                    ' Eliminar el extremo dependiente de esta asociaci칩n de identificaci칩n. Si el estado actual es agregado,
                    ' permite que la relaci칩n se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociaci칩n que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupReferenciaProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ReferenciaProvisionCompras In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ReferenciaProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ReferenciaProvisionCompras In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ReferenciaProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentosPromocion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocumentosPromocion In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocumentosPromocion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocumentosPromocion In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosPromocion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupProvisionCompras_1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ProvisionCompras_1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ProvisionCompras_1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRubroPersona(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RubroPersona In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RubroPersona", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RubroPersona In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RubroPersona", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuadroComparativo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuadroComparativo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuadroComparativo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuadroComparativo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuadroComparativo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRegistroEquipo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RegistroEquipo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RegistroEquipo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RegistroEquipo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RegistroEquipo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupFaltaSancion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As FaltaSancion In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("FaltaSancion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As FaltaSancion In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("FaltaSancion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSancion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Sancion In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Sancion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Sancion In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Sancion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSancion1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Sancion In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Sancion1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Sancion In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Sancion1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSancion2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Sancion In e.NewItems
                item.Personas2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Sancion2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Sancion In e.OldItems
                If ReferenceEquals(item.Personas2, Me) Then
                    item.Personas2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Sancion2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentoGuias(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocumentoGuias In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocumentoGuias", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocumentoGuias In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocumentoGuias", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPCDCotizacionDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PCDCotizacionDetalle In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PCDCotizacionDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PCDCotizacionDetalle In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PCDCotizacionDetalle", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupOrdenServicio(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenServicio In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenServicio", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenServicio In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenServicio", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSolicitudSoporte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SolicitudSoporte In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SolicitudSoporte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SolicitudSoporte In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SolicitudSoporte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSolicitudSoporte1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SolicitudSoporte In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SolicitudSoporte1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SolicitudSoporte In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SolicitudSoporte1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRecepcionDocumento(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RecepcionDocumento In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RecepcionDocumento", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RecepcionDocumento In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RecepcionDocumento", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRecepcionDocumento1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RecepcionDocumento In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RecepcionDocumento1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RecepcionDocumento In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RecepcionDocumento1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupFotoPersonas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As FotoPersonas In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("FotoPersonas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As FotoPersonas In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("FotoPersonas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRegistroMaquina(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RegistroMaquina In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RegistroMaquina", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RegistroMaquina In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RegistroMaquina", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupFichaInspeccion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As FichaInspeccion In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("FichaInspeccion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As FichaInspeccion In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("FichaInspeccion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocuIso(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuIso In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuIso", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuIso In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuIso", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocuIso1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuIso In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuIso1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuIso In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuIso1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocuIso2(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuIso In e.NewItems
                item.Personas2 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuIso2", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuIso In e.OldItems
                If ReferenceEquals(item.Personas2, Me) Then
                    item.Personas2 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuIso2", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupOrdenCompra(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As OrdenCompra In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("OrdenCompra", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As OrdenCompra In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("OrdenCompra", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSolicitudAjustePrecio(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SolicitudAjustePrecio", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SolicitudAjustePrecio", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSolicitudAjustePrecio1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SolicitudAjustePrecio1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SolicitudAjustePrecio1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCargaDescargaTransporte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CargaDescargaTransporte In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CargaDescargaTransporte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRendicionGastos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RendicionGastos In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RendicionGastos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RendicionGastos In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RendicionGastos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePrestamo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePrestamo1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.NewItems
                item.Personas1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePrestamo1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.OldItems
                If ReferenceEquals(item.Personas1, Me) Then
                    item.Personas1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePrestamo1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPrestamo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Prestamo In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Prestamo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Prestamo In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Prestamo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentaRendirDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentaRendirDetalle In e.NewItems
                item.Personas = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentaRendirDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentaRendirDetalle In e.OldItems
                If ReferenceEquals(item.Personas, Me) Then
                    item.Personas = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentaRendirDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
