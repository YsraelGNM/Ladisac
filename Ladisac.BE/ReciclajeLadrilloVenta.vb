'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Articulos))>
Partial Public Class ReciclajeLadrilloVenta
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared RCL_ID As string = "RCL_ID"
				public shared ART_ID As string = "ART_ID"
				public shared RCL_Fecha As string = "RCL_Fecha"
				public shared RCL_IN_SEGUNDA_HORNO As string = "RCL_IN_SEGUNDA_HORNO"
				public shared RCL_IN_SEGUNDA_SECADO As string = "RCL_IN_SEGUNDA_SECADO"
				public shared RCL_IN_SEGUNDA_DESPACHO As string = "RCL_IN_SEGUNDA_DESPACHO"
				public shared RCL_IN_ESCOMBRO_HORNO As string = "RCL_IN_ESCOMBRO_HORNO"
				public shared RCL_IN_ESCOMBRO_SECADO As string = "RCL_IN_ESCOMBRO_SECADO"
				public shared RCL_IN_ESCOMBRO_DESPACHO As string = "RCL_IN_ESCOMBRO_DESPACHO"
				public shared RCL_IN_SEGUNDA_TRANSPORTE As string = "RCL_IN_SEGUNDA_TRANSPORTE"
				public shared RCL_IN_ESCOMBRO_TRANSPORTE As string = "RCL_IN_ESCOMBRO_TRANSPORTE"
		    End Structure
	



    <DataMember()>
    Public Property RCL_ID() As Integer
        Get
            Return _rCL_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_rCL_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'RCL_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _rCL_ID = value
                OnPropertyChanged("RCL_ID")
            End If
        End Set
    End Property

    Private _rCL_ID As Integer

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property RCL_Fecha() As Nullable(Of Date)
        Get
            Return _rCL_Fecha
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_rCL_Fecha, value) Then
                _rCL_Fecha = value
                OnPropertyChanged("RCL_Fecha")
            End If
        End Set
    End Property

    Private _rCL_Fecha As Nullable(Of Date)

    <DataMember()>
    Public Property RCL_IN_SEGUNDA_HORNO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_SEGUNDA_HORNO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_SEGUNDA_HORNO, value) Then
                _rCL_IN_SEGUNDA_HORNO = value
                OnPropertyChanged("RCL_IN_SEGUNDA_HORNO")
            End If
        End Set
    End Property

    Private _rCL_IN_SEGUNDA_HORNO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_SEGUNDA_SECADO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_SEGUNDA_SECADO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_SEGUNDA_SECADO, value) Then
                _rCL_IN_SEGUNDA_SECADO = value
                OnPropertyChanged("RCL_IN_SEGUNDA_SECADO")
            End If
        End Set
    End Property

    Private _rCL_IN_SEGUNDA_SECADO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_SEGUNDA_DESPACHO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_SEGUNDA_DESPACHO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_SEGUNDA_DESPACHO, value) Then
                _rCL_IN_SEGUNDA_DESPACHO = value
                OnPropertyChanged("RCL_IN_SEGUNDA_DESPACHO")
            End If
        End Set
    End Property

    Private _rCL_IN_SEGUNDA_DESPACHO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_ESCOMBRO_HORNO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_ESCOMBRO_HORNO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_ESCOMBRO_HORNO, value) Then
                _rCL_IN_ESCOMBRO_HORNO = value
                OnPropertyChanged("RCL_IN_ESCOMBRO_HORNO")
            End If
        End Set
    End Property

    Private _rCL_IN_ESCOMBRO_HORNO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_ESCOMBRO_SECADO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_ESCOMBRO_SECADO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_ESCOMBRO_SECADO, value) Then
                _rCL_IN_ESCOMBRO_SECADO = value
                OnPropertyChanged("RCL_IN_ESCOMBRO_SECADO")
            End If
        End Set
    End Property

    Private _rCL_IN_ESCOMBRO_SECADO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_ESCOMBRO_DESPACHO() As Nullable(Of Integer)
        Get
            Return _rCL_IN_ESCOMBRO_DESPACHO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_ESCOMBRO_DESPACHO, value) Then
                _rCL_IN_ESCOMBRO_DESPACHO = value
                OnPropertyChanged("RCL_IN_ESCOMBRO_DESPACHO")
            End If
        End Set
    End Property

    Private _rCL_IN_ESCOMBRO_DESPACHO As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_SEGUNDA_TRANSPORTE() As Nullable(Of Integer)
        Get
            Return _rCL_IN_SEGUNDA_TRANSPORTE
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_SEGUNDA_TRANSPORTE, value) Then
                _rCL_IN_SEGUNDA_TRANSPORTE = value
                OnPropertyChanged("RCL_IN_SEGUNDA_TRANSPORTE")
            End If
        End Set
    End Property

    Private _rCL_IN_SEGUNDA_TRANSPORTE As Nullable(Of Integer)

    <DataMember()>
    Public Property RCL_IN_ESCOMBRO_TRANSPORTE() As Nullable(Of Integer)
        Get
            Return _rCL_IN_ESCOMBRO_TRANSPORTE
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_rCL_IN_ESCOMBRO_TRANSPORTE, value) Then
                _rCL_IN_ESCOMBRO_TRANSPORTE = value
                OnPropertyChanged("RCL_IN_ESCOMBRO_TRANSPORTE")
            End If
        End Set
    End Property

    Private _rCL_IN_ESCOMBRO_TRANSPORTE As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Articulos = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupArticulos(ByVal previousValue As Articulos)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID = Articulos.ART_ID
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
