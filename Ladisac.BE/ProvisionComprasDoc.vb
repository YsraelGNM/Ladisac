'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Periodo))>
Partial Public Class ProvisionComprasDoc
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared prd_Periodo_id As string = "prd_Periodo_id"
				public shared prc_Voucher As string = "prc_Voucher"
				public shared lib_Id As string = "lib_Id"
				public shared Item As string = "Item"
				public shared prc_FechaDocumento As string = "prc_FechaDocumento"
				public shared prc_FechaVencimiento As string = "prc_FechaVencimiento"
				public shared per_Id As string = "per_Id"
				public shared CCO_ID As string = "CCO_ID"
				public shared pve_Id As string = "pve_Id"
				public shared TIV_ID As string = "TIV_ID"
				public shared mon_Id As string = "mon_Id"
				public shared cct_Id As string = "cct_Id"
				public shared tdo_Id As string = "tdo_Id"
				public shared dtd_Id As string = "dtd_Id"
				public shared prc_Serie As string = "prc_Serie"
				public shared prc_Numero As string = "prc_Numero"
				public shared prc_Total As string = "prc_Total"
				public shared prc_Igv As string = "prc_Igv"
				public shared cct_IdRef As string = "cct_IdRef"
				public shared tdo_IdRef As string = "tdo_IdRef"
				public shared dtd_IdRef As string = "dtd_IdRef"
				public shared prc_SerieRef As string = "prc_SerieRef"
				public shared prc_NumeroRef As string = "prc_NumeroRef"
		    End Structure
	



    <DataMember()>
    Public Property prd_Periodo_id() As String
        Get
            Return _prd_Periodo_id
        End Get
        Set(ByVal value As String)
            If Not Equals(_prd_Periodo_id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prd_Periodo_id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                If Not IsDeserializing Then
                    If Periodo IsNot Nothing AndAlso Not Equals(Periodo.prd_Periodo_id, value) Then
                        Periodo = Nothing
                    End If
                End If
                _prd_Periodo_id = value
                OnPropertyChanged("prd_Periodo_id")
            End If
        End Set
    End Property

    Private _prd_Periodo_id As String

    <DataMember()>
    Public Property prc_Voucher() As String
        Get
            Return _prc_Voucher
        End Get
        Set(ByVal value As String)
            If Not Equals(_prc_Voucher, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prc_Voucher' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _prc_Voucher = value
                OnPropertyChanged("prc_Voucher")
            End If
        End Set
    End Property

    Private _prc_Voucher As String

    <DataMember()>
    Public Property lib_Id() As String
        Get
            Return _lib_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_lib_Id, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'lib_Id' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _lib_Id = value
                OnPropertyChanged("lib_Id")
            End If
        End Set
    End Property

    Private _lib_Id As String

    <DataMember()>
    Public Property Item() As String
        Get
            Return _item
        End Get
        Set(ByVal value As String)
            If Not Equals(_item, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'Item' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _item = value
                OnPropertyChanged("Item")
            End If
        End Set
    End Property

    Private _item As String

    <DataMember()>
    Public Property prc_FechaDocumento() As Nullable(Of Date)
        Get
            Return _prc_FechaDocumento
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_prc_FechaDocumento, value) Then
                _prc_FechaDocumento = value
                OnPropertyChanged("prc_FechaDocumento")
            End If
        End Set
    End Property

    Private _prc_FechaDocumento As Nullable(Of Date)

    <DataMember()>
    Public Property prc_FechaVencimiento() As Nullable(Of Date)
        Get
            Return _prc_FechaVencimiento
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_prc_FechaVencimiento, value) Then
                _prc_FechaVencimiento = value
                OnPropertyChanged("prc_FechaVencimiento")
            End If
        End Set
    End Property

    Private _prc_FechaVencimiento As Nullable(Of Date)

    <DataMember()>
    Public Property per_Id() As String
        Get
            Return _per_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_per_Id, value) Then
                _per_Id = value
                OnPropertyChanged("per_Id")
            End If
        End Set
    End Property

    Private _per_Id As String

    <DataMember()>
    Public Property CCO_ID() As String
        Get
            Return _cCO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCO_ID, value) Then
                _cCO_ID = value
                OnPropertyChanged("CCO_ID")
            End If
        End Set
    End Property

    Private _cCO_ID As String

    <DataMember()>
    Public Property pve_Id() As String
        Get
            Return _pve_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_pve_Id, value) Then
                _pve_Id = value
                OnPropertyChanged("pve_Id")
            End If
        End Set
    End Property

    Private _pve_Id As String

    <DataMember()>
    Public Property TIV_ID() As String
        Get
            Return _tIV_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tIV_ID, value) Then
                _tIV_ID = value
                OnPropertyChanged("TIV_ID")
            End If
        End Set
    End Property

    Private _tIV_ID As String

    <DataMember()>
    Public Property mon_Id() As String
        Get
            Return _mon_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_mon_Id, value) Then
                _mon_Id = value
                OnPropertyChanged("mon_Id")
            End If
        End Set
    End Property

    Private _mon_Id As String

    <DataMember()>
    Public Property cct_Id() As String
        Get
            Return _cct_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_cct_Id, value) Then
                _cct_Id = value
                OnPropertyChanged("cct_Id")
            End If
        End Set
    End Property

    Private _cct_Id As String

    <DataMember()>
    Public Property tdo_Id() As String
        Get
            Return _tdo_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_Id, value) Then
                _tdo_Id = value
                OnPropertyChanged("tdo_Id")
            End If
        End Set
    End Property

    Private _tdo_Id As String

    <DataMember()>
    Public Property dtd_Id() As String
        Get
            Return _dtd_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_dtd_Id, value) Then
                _dtd_Id = value
                OnPropertyChanged("dtd_Id")
            End If
        End Set
    End Property

    Private _dtd_Id As String

    <DataMember()>
    Public Property prc_Serie() As String
        Get
            Return _prc_Serie
        End Get
        Set(ByVal value As String)
            If Not Equals(_prc_Serie, value) Then
                _prc_Serie = value
                OnPropertyChanged("prc_Serie")
            End If
        End Set
    End Property

    Private _prc_Serie As String

    <DataMember()>
    Public Property prc_Numero() As String
        Get
            Return _prc_Numero
        End Get
        Set(ByVal value As String)
            If Not Equals(_prc_Numero, value) Then
                _prc_Numero = value
                OnPropertyChanged("prc_Numero")
            End If
        End Set
    End Property

    Private _prc_Numero As String

    <DataMember()>
    Public Property prc_Total() As Nullable(Of Decimal)
        Get
            Return _prc_Total
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_prc_Total, value) Then
                _prc_Total = value
                OnPropertyChanged("prc_Total")
            End If
        End Set
    End Property

    Private _prc_Total As Nullable(Of Decimal)

    <DataMember()>
    Public Property prc_Igv() As Nullable(Of Decimal)
        Get
            Return _prc_Igv
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_prc_Igv, value) Then
                _prc_Igv = value
                OnPropertyChanged("prc_Igv")
            End If
        End Set
    End Property

    Private _prc_Igv As Nullable(Of Decimal)

    <DataMember()>
    Public Property cct_IdRef() As String
        Get
            Return _cct_IdRef
        End Get
        Set(ByVal value As String)
            If Not Equals(_cct_IdRef, value) Then
                _cct_IdRef = value
                OnPropertyChanged("cct_IdRef")
            End If
        End Set
    End Property

    Private _cct_IdRef As String

    <DataMember()>
    Public Property tdo_IdRef() As String
        Get
            Return _tdo_IdRef
        End Get
        Set(ByVal value As String)
            If Not Equals(_tdo_IdRef, value) Then
                _tdo_IdRef = value
                OnPropertyChanged("tdo_IdRef")
            End If
        End Set
    End Property

    Private _tdo_IdRef As String

    <DataMember()>
    Public Property dtd_IdRef() As String
        Get
            Return _dtd_IdRef
        End Get
        Set(ByVal value As String)
            If Not Equals(_dtd_IdRef, value) Then
                _dtd_IdRef = value
                OnPropertyChanged("dtd_IdRef")
            End If
        End Set
    End Property

    Private _dtd_IdRef As String

    <DataMember()>
    Public Property prc_SerieRef() As String
        Get
            Return _prc_SerieRef
        End Get
        Set(ByVal value As String)
            If Not Equals(_prc_SerieRef, value) Then
                _prc_SerieRef = value
                OnPropertyChanged("prc_SerieRef")
            End If
        End Set
    End Property

    Private _prc_SerieRef As String

    <DataMember()>
    Public Property prc_NumeroRef() As String
        Get
            Return _prc_NumeroRef
        End Get
        Set(ByVal value As String)
            If Not Equals(_prc_NumeroRef, value) Then
                _prc_NumeroRef = value
                OnPropertyChanged("prc_NumeroRef")
            End If
        End Set
    End Property

    Private _prc_NumeroRef As String

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property Periodo() As Periodo
        Get
            Return _periodo
        End Get
        Set(ByVal value As Periodo)
            If _periodo IsNot value Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added AndAlso value IsNot Nothing Then
                    ' Este es el extremo dependiente de una relaci칩n de identificaci칩n por lo que el extremo principal no se puede cambiar si ya est치 establecido;
                    ' de lo contrario, solo se puede establecer en una entidad con una clave primaria que tenga el mismo valor que la clave externa del extremo dependiente.
                    If Not Equals(prd_Periodo_id, value.prd_Periodo_id) Then
                        Throw New InvalidOperationException("El extremo principal de una relaci칩n de identificaci칩n solo se puede modificar cuando el extremo dependiente se encuentra en el estado agregado.")
                    End If
                End If
                Dim previousValue As Periodo = _periodo
                _periodo = value
                FixupPeriodo(previousValue)
                OnNavigationPropertyChanged("Periodo")
            End If
        End Set
    End Property

    Private _periodo As Periodo


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociaci칩n que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesar치 notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Periodo = Nothing
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupPeriodo(ByVal previousValue As Periodo)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.ProvisionComprasDoc.Contains(Me) Then
            previousValue.ProvisionComprasDoc.Remove(Me)
        End If

        If Periodo IsNot Nothing Then
            If Not Periodo.ProvisionComprasDoc.Contains(Me) Then
                Periodo.ProvisionComprasDoc.Add(Me)
            End If

            prd_Periodo_id = Periodo.prd_Periodo_id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Periodo") AndAlso
                ChangeTracker.OriginalValues("Periodo") Is Periodo Then
                ChangeTracker.OriginalValues.Remove("Periodo")
            Else
                ChangeTracker.RecordOriginalValue("Periodo", previousValue)
            End If
            If Periodo IsNot Nothing AndAlso Not Periodo.ChangeTracker.ChangeTrackingEnabled Then
                Periodo.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
