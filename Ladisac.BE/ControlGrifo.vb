'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
Partial Public Class ControlGrifo
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared MessageID As string = "MessageID"
				public shared CardNumber As string = "CardNumber"
				public shared FirstName As string = "FirstName"
				public shared MiddleName As string = "MiddleName"
				public shared LastName As string = "LastName"
				public shared Estado As string = "Estado"
				public shared Fecha As string = "Fecha"
		    End Structure
	



    <DataMember()>
    Public Property MessageID() As String
        Get
            Return _messageID
        End Get
        Set(ByVal value As String)
            If Not Equals(_messageID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'MessageID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _messageID = value
                OnPropertyChanged("MessageID")
            End If
        End Set
    End Property

    Private _messageID As String

    <DataMember()>
    Public Property CardNumber() As Nullable(Of Long)
        Get
            Return _cardNumber
        End Get
        Set(ByVal value As Nullable(Of Long))
            If Not Equals(_cardNumber, value) Then
                _cardNumber = value
                OnPropertyChanged("CardNumber")
            End If
        End Set
    End Property

    Private _cardNumber As Nullable(Of Long)

    <DataMember()>
    Public Property FirstName() As String
        Get
            Return _firstName
        End Get
        Set(ByVal value As String)
            If Not Equals(_firstName, value) Then
                _firstName = value
                OnPropertyChanged("FirstName")
            End If
        End Set
    End Property

    Private _firstName As String

    <DataMember()>
    Public Property MiddleName() As String
        Get
            Return _middleName
        End Get
        Set(ByVal value As String)
            If Not Equals(_middleName, value) Then
                _middleName = value
                OnPropertyChanged("MiddleName")
            End If
        End Set
    End Property

    Private _middleName As String

    <DataMember()>
    Public Property LastName() As String
        Get
            Return _lastName
        End Get
        Set(ByVal value As String)
            If Not Equals(_lastName, value) Then
                _lastName = value
                OnPropertyChanged("LastName")
            End If
        End Set
    End Property

    Private _lastName As String

    <DataMember()>
    Public Property Estado() As Nullable(Of Integer)
        Get
            Return _estado
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_estado, value) Then
                _estado = value
                OnPropertyChanged("Estado")
            End If
        End Set
    End Property

    Private _estado As Nullable(Of Integer)

    <DataMember()>
    Public Property Fecha() As Nullable(Of Date)
        Get
            Return _fecha
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_fecha, value) Then
                _fecha = value
                OnPropertyChanged("Fecha")
            End If
        End Set
    End Property

    Private _fecha As Nullable(Of Date)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
    End Sub

#End Region
End Class
