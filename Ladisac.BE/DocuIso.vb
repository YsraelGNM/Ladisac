'------------------------------------------------------------------------------
' <auto-generated>
'     Este c칩digo se gener칩 a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perder치n si
'     el c칩digo se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(AreaTrabajos))>
<KnownType(GetType(DetalleTipoDocumentos))>
<KnownType(GetType(Personas))>
<KnownType(GetType(PlantillaDocuIso))>
<KnownType(GetType(DocuIsoDetalle))>
Partial Public Class DocuIso
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DIS_ID As string = "DIS_ID"
				public shared ARE_ID As string = "ARE_ID"
				public shared DTD_ID As string = "DTD_ID"
				public shared DIS_ADJUNTO As string = "DIS_ADJUNTO"
				public shared DIS_ADJUNTO_DESCRI As string = "DIS_ADJUNTO_DESCRI"
				public shared DIS_VIGENTE As string = "DIS_VIGENTE"
				public shared DIS_VERSION As string = "DIS_VERSION"
				public shared PER_ID_ELABORACION As string = "PER_ID_ELABORACION"
				public shared DIS_FECHA_ELABORACION As string = "DIS_FECHA_ELABORACION"
				public shared PER_ID_REVISION As string = "PER_ID_REVISION"
				public shared DIS_FECHA_REVISION As string = "DIS_FECHA_REVISION"
				public shared PER_ID_APROBACION As string = "PER_ID_APROBACION"
				public shared DIS_FECHA_APROBACION As string = "DIS_FECHA_APROBACION"
				public shared USU_ID As string = "USU_ID"
				public shared DIS_FEC_GRAB As string = "DIS_FEC_GRAB"
				public shared DIS_ESTADO As string = "DIS_ESTADO"
				public shared PDI_ID As string = "PDI_ID"
				public shared DIS_CODIGO As string = "DIS_CODIGO"
				public shared DIS_ADJUNTO2 As string = "DIS_ADJUNTO2"
				public shared DIS_DESCARGA As string = "DIS_DESCARGA"
				public shared DIS_PU_AR_PR As string = "DIS_PU_AR_PR"
		    End Structure
	



    <DataMember()>
    Public Property DIS_ID() As Integer
        Get
            Return _dIS_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dIS_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DIS_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dIS_ID = value
                OnPropertyChanged("DIS_ID")
            End If
        End Set
    End Property

    Private _dIS_ID As Integer

    <DataMember()>
    Public Property ARE_ID() As String
        Get
            Return _aRE_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRE_ID, value) Then
                ChangeTracker.RecordOriginalValue("ARE_ID", _aRE_ID)
                If Not IsDeserializing Then
                    If AreaTrabajos IsNot Nothing AndAlso Not Equals(AreaTrabajos.art_AreaTrab_Id, value) Then
                        AreaTrabajos = Nothing
                    End If
                End If
                _aRE_ID = value
                OnPropertyChanged("ARE_ID")
            End If
        End Set
    End Property

    Private _aRE_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                ChangeTracker.RecordOriginalValue("DTD_ID", _dTD_ID)
                If Not IsDeserializing Then
                    If DetalleTipoDocumentos IsNot Nothing AndAlso Not Equals(DetalleTipoDocumentos.DTD_ID, value) Then
                        DetalleTipoDocumentos = Nothing
                    End If
                End If
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

    <DataMember()>
    Public Property DIS_ADJUNTO() As Byte()
        Get
            Return _dIS_ADJUNTO
        End Get
        Set(ByVal value As Byte())
            If _dIS_ADJUNTO IsNot value Then
                _dIS_ADJUNTO = value
                OnPropertyChanged("DIS_ADJUNTO")
            End If
        End Set
    End Property

    Private _dIS_ADJUNTO As Byte()

    <DataMember()>
    Public Property DIS_ADJUNTO_DESCRI() As String
        Get
            Return _dIS_ADJUNTO_DESCRI
        End Get
        Set(ByVal value As String)
            If Not Equals(_dIS_ADJUNTO_DESCRI, value) Then
                _dIS_ADJUNTO_DESCRI = value
                OnPropertyChanged("DIS_ADJUNTO_DESCRI")
            End If
        End Set
    End Property

    Private _dIS_ADJUNTO_DESCRI As String

    <DataMember()>
    Public Property DIS_VIGENTE() As Nullable(Of Integer)
        Get
            Return _dIS_VIGENTE
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dIS_VIGENTE, value) Then
                _dIS_VIGENTE = value
                OnPropertyChanged("DIS_VIGENTE")
            End If
        End Set
    End Property

    Private _dIS_VIGENTE As Nullable(Of Integer)

    <DataMember()>
    Public Property DIS_VERSION() As String
        Get
            Return _dIS_VERSION
        End Get
        Set(ByVal value As String)
            If Not Equals(_dIS_VERSION, value) Then
                _dIS_VERSION = value
                OnPropertyChanged("DIS_VERSION")
            End If
        End Set
    End Property

    Private _dIS_VERSION As String

    <DataMember()>
    Public Property PER_ID_ELABORACION() As String
        Get
            Return _pER_ID_ELABORACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_ELABORACION, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_ELABORACION", _pER_ID_ELABORACION)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_ELABORACION = value
                OnPropertyChanged("PER_ID_ELABORACION")
            End If
        End Set
    End Property

    Private _pER_ID_ELABORACION As String

    <DataMember()>
    Public Property DIS_FECHA_ELABORACION() As Nullable(Of Date)
        Get
            Return _dIS_FECHA_ELABORACION
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dIS_FECHA_ELABORACION, value) Then
                _dIS_FECHA_ELABORACION = value
                OnPropertyChanged("DIS_FECHA_ELABORACION")
            End If
        End Set
    End Property

    Private _dIS_FECHA_ELABORACION As Nullable(Of Date)

    <DataMember()>
    Public Property PER_ID_REVISION() As String
        Get
            Return _pER_ID_REVISION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_REVISION, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_REVISION", _pER_ID_REVISION)
                If Not IsDeserializing Then
                    If Personas1 IsNot Nothing AndAlso Not Equals(Personas1.PER_ID, value) Then
                        Personas1 = Nothing
                    End If
                End If
                _pER_ID_REVISION = value
                OnPropertyChanged("PER_ID_REVISION")
            End If
        End Set
    End Property

    Private _pER_ID_REVISION As String

    <DataMember()>
    Public Property DIS_FECHA_REVISION() As Nullable(Of Date)
        Get
            Return _dIS_FECHA_REVISION
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dIS_FECHA_REVISION, value) Then
                _dIS_FECHA_REVISION = value
                OnPropertyChanged("DIS_FECHA_REVISION")
            End If
        End Set
    End Property

    Private _dIS_FECHA_REVISION As Nullable(Of Date)

    <DataMember()>
    Public Property PER_ID_APROBACION() As String
        Get
            Return _pER_ID_APROBACION
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_APROBACION, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_APROBACION", _pER_ID_APROBACION)
                If Not IsDeserializing Then
                    If Personas2 IsNot Nothing AndAlso Not Equals(Personas2.PER_ID, value) Then
                        Personas2 = Nothing
                    End If
                End If
                _pER_ID_APROBACION = value
                OnPropertyChanged("PER_ID_APROBACION")
            End If
        End Set
    End Property

    Private _pER_ID_APROBACION As String

    <DataMember()>
    Public Property DIS_FECHA_APROBACION() As Nullable(Of Date)
        Get
            Return _dIS_FECHA_APROBACION
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dIS_FECHA_APROBACION, value) Then
                _dIS_FECHA_APROBACION = value
                OnPropertyChanged("DIS_FECHA_APROBACION")
            End If
        End Set
    End Property

    Private _dIS_FECHA_APROBACION As Nullable(Of Date)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property DIS_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _dIS_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dIS_FEC_GRAB, value) Then
                _dIS_FEC_GRAB = value
                OnPropertyChanged("DIS_FEC_GRAB")
            End If
        End Set
    End Property

    Private _dIS_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property DIS_ESTADO() As Nullable(Of Boolean)
        Get
            Return _dIS_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dIS_ESTADO, value) Then
                _dIS_ESTADO = value
                OnPropertyChanged("DIS_ESTADO")
            End If
        End Set
    End Property

    Private _dIS_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property PDI_ID() As Nullable(Of Integer)
        Get
            Return _pDI_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pDI_ID, value) Then
                ChangeTracker.RecordOriginalValue("PDI_ID", _pDI_ID)
                If Not IsDeserializing Then
                    If PlantillaDocuIso IsNot Nothing AndAlso Not Equals(PlantillaDocuIso.PDI_ID, value) Then
                        PlantillaDocuIso = Nothing
                    End If
                End If
                _pDI_ID = value
                OnPropertyChanged("PDI_ID")
            End If
        End Set
    End Property

    Private _pDI_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property DIS_CODIGO() As String
        Get
            Return _dIS_CODIGO
        End Get
        Set(ByVal value As String)
            If Not Equals(_dIS_CODIGO, value) Then
                _dIS_CODIGO = value
                OnPropertyChanged("DIS_CODIGO")
            End If
        End Set
    End Property

    Private _dIS_CODIGO As String

    <DataMember()>
    Public Property DIS_ADJUNTO2() As Byte()
        Get
            Return _dIS_ADJUNTO2
        End Get
        Set(ByVal value As Byte())
            If _dIS_ADJUNTO2 IsNot value Then
                _dIS_ADJUNTO2 = value
                OnPropertyChanged("DIS_ADJUNTO2")
            End If
        End Set
    End Property

    Private _dIS_ADJUNTO2 As Byte()

    <DataMember()>
    Public Property DIS_DESCARGA() As Nullable(Of Integer)
        Get
            Return _dIS_DESCARGA
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dIS_DESCARGA, value) Then
                _dIS_DESCARGA = value
                OnPropertyChanged("DIS_DESCARGA")
            End If
        End Set
    End Property

    Private _dIS_DESCARGA As Nullable(Of Integer)

    <DataMember()>
    Public Property DIS_PU_AR_PR() As Nullable(Of Integer)
        Get
            Return _dIS_PU_AR_PR
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dIS_PU_AR_PR, value) Then
                _dIS_PU_AR_PR = value
                OnPropertyChanged("DIS_PU_AR_PR")
            End If
        End Set
    End Property

    Private _dIS_PU_AR_PR As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegaci칩n"

    <DataMember()>
    Public Property AreaTrabajos() As AreaTrabajos
        Get
            Return _areaTrabajos
        End Get
        Set(ByVal value As AreaTrabajos)
            If _areaTrabajos IsNot value Then
                Dim previousValue As AreaTrabajos = _areaTrabajos
                _areaTrabajos = value
                FixupAreaTrabajos(previousValue)
                OnNavigationPropertyChanged("AreaTrabajos")
            End If
        End Set
    End Property

    Private _areaTrabajos As AreaTrabajos


    <DataMember()>
    Public Property DetalleTipoDocumentos() As DetalleTipoDocumentos
        Get
            Return _detalleTipoDocumentos
        End Get
        Set(ByVal value As DetalleTipoDocumentos)
            If _detalleTipoDocumentos IsNot value Then
                Dim previousValue As DetalleTipoDocumentos = _detalleTipoDocumentos
                _detalleTipoDocumentos = value
                FixupDetalleTipoDocumentos(previousValue)
                OnNavigationPropertyChanged("DetalleTipoDocumentos")
            End If
        End Set
    End Property

    Private _detalleTipoDocumentos As DetalleTipoDocumentos


    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


    <DataMember()>
    Public Property Personas1() As Personas
        Get
            Return _personas1
        End Get
        Set(ByVal value As Personas)
            If _personas1 IsNot value Then
                Dim previousValue As Personas = _personas1
                _personas1 = value
                FixupPersonas1(previousValue)
                OnNavigationPropertyChanged("Personas1")
            End If
        End Set
    End Property

    Private _personas1 As Personas


    <DataMember()>
    Public Property Personas2() As Personas
        Get
            Return _personas2
        End Get
        Set(ByVal value As Personas)
            If _personas2 IsNot value Then
                Dim previousValue As Personas = _personas2
                _personas2 = value
                FixupPersonas2(previousValue)
                OnNavigationPropertyChanged("Personas2")
            End If
        End Set
    End Property

    Private _personas2 As Personas


    <DataMember()>
    Public Property PlantillaDocuIso() As PlantillaDocuIso
        Get
            Return _plantillaDocuIso
        End Get
        Set(ByVal value As PlantillaDocuIso)
            If _plantillaDocuIso IsNot value Then
                Dim previousValue As PlantillaDocuIso = _plantillaDocuIso
                _plantillaDocuIso = value
                FixupPlantillaDocuIso(previousValue)
                OnNavigationPropertyChanged("PlantillaDocuIso")
            End If
        End Set
    End Property

    Private _plantillaDocuIso As PlantillaDocuIso


    <DataMember()>
    Public Property DocuIsoDetalle() As TrackableCollection(Of DocuIsoDetalle)
        Get
            If _docuIsoDetalle Is Nothing Then
                _docuIsoDetalle = New TrackableCollection(Of DocuIsoDetalle)
                AddHandler _docuIsoDetalle.CollectionChanged, AddressOf FixupDocuIsoDetalle
            End If
            Return _docuIsoDetalle
        End Get
        Set(ByVal value As TrackableCollection(Of DocuIsoDetalle))
            If Not Object.ReferenceEquals(_docuIsoDetalle, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _docuIsoDetalle IsNot Nothing Then
                    RemoveHandler _docuIsoDetalle.CollectionChanged, AddressOf FixupDocuIsoDetalle
                End If
                _docuIsoDetalle = value
                If _docuIsoDetalle IsNot Nothing Then
                    AddHandler _docuIsoDetalle.CollectionChanged, AddressOf FixupDocuIsoDetalle
                End If
                OnNavigationPropertyChanged("DocuIsoDetalle")
            End If
        End Set
    End Property

    Private _docuIsoDetalle As TrackableCollection(Of DocuIsoDetalle)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        AreaTrabajos = Nothing
        DetalleTipoDocumentos = Nothing
        Personas = Nothing
        Personas1 = Nothing
        Personas2 = Nothing
        PlantillaDocuIso = Nothing
        DocuIsoDetalle.Clear()
    End Sub

#End Region
#Region "Correcci칩n de asociaci칩n"

    Private Sub FixupAreaTrabajos(ByVal previousValue As AreaTrabajos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso.Contains(Me) Then
            previousValue.DocuIso.Remove(Me)
        End If

        If AreaTrabajos IsNot Nothing Then
            If Not AreaTrabajos.DocuIso.Contains(Me) Then
                AreaTrabajos.DocuIso.Add(Me)
            End If

            ARE_ID = AreaTrabajos.art_AreaTrab_Id
        ElseIf Not skipKeys Then
            ARE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("AreaTrabajos") AndAlso
                ChangeTracker.OriginalValues("AreaTrabajos") Is AreaTrabajos Then
                ChangeTracker.OriginalValues.Remove("AreaTrabajos")
            Else
                ChangeTracker.RecordOriginalValue("AreaTrabajos", previousValue)
            End If
            If AreaTrabajos IsNot Nothing AndAlso Not AreaTrabajos.ChangeTracker.ChangeTrackingEnabled Then
                AreaTrabajos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDetalleTipoDocumentos(ByVal previousValue As DetalleTipoDocumentos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso.Contains(Me) Then
            previousValue.DocuIso.Remove(Me)
        End If

        If DetalleTipoDocumentos IsNot Nothing Then
            If Not DetalleTipoDocumentos.DocuIso.Contains(Me) Then
                DetalleTipoDocumentos.DocuIso.Add(Me)
            End If

            DTD_ID = DetalleTipoDocumentos.DTD_ID
        ElseIf Not skipKeys Then
            DTD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("DetalleTipoDocumentos") AndAlso
                ChangeTracker.OriginalValues("DetalleTipoDocumentos") Is DetalleTipoDocumentos Then
                ChangeTracker.OriginalValues.Remove("DetalleTipoDocumentos")
            Else
                ChangeTracker.RecordOriginalValue("DetalleTipoDocumentos", previousValue)
            End If
            If DetalleTipoDocumentos IsNot Nothing AndAlso Not DetalleTipoDocumentos.ChangeTracker.ChangeTrackingEnabled Then
                DetalleTipoDocumentos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso.Contains(Me) Then
            previousValue.DocuIso.Remove(Me)
        End If

        If Personas IsNot Nothing Then
            If Not Personas.DocuIso.Contains(Me) Then
                Personas.DocuIso.Add(Me)
            End If

            PER_ID_ELABORACION = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_ELABORACION = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas1(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso1.Contains(Me) Then
            previousValue.DocuIso1.Remove(Me)
        End If

        If Personas1 IsNot Nothing Then
            If Not Personas1.DocuIso1.Contains(Me) Then
                Personas1.DocuIso1.Add(Me)
            End If

            PER_ID_REVISION = Personas1.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_REVISION = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas1") AndAlso
                ChangeTracker.OriginalValues("Personas1") Is Personas1 Then
                ChangeTracker.OriginalValues.Remove("Personas1")
            Else
                ChangeTracker.RecordOriginalValue("Personas1", previousValue)
            End If
            If Personas1 IsNot Nothing AndAlso Not Personas1.ChangeTracker.ChangeTrackingEnabled Then
                Personas1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPersonas2(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso2.Contains(Me) Then
            previousValue.DocuIso2.Remove(Me)
        End If

        If Personas2 IsNot Nothing Then
            If Not Personas2.DocuIso2.Contains(Me) Then
                Personas2.DocuIso2.Add(Me)
            End If

            PER_ID_APROBACION = Personas2.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_APROBACION = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas2") AndAlso
                ChangeTracker.OriginalValues("Personas2") Is Personas2 Then
                ChangeTracker.OriginalValues.Remove("Personas2")
            Else
                ChangeTracker.RecordOriginalValue("Personas2", previousValue)
            End If
            If Personas2 IsNot Nothing AndAlso Not Personas2.ChangeTracker.ChangeTrackingEnabled Then
                Personas2.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPlantillaDocuIso(ByVal previousValue As PlantillaDocuIso, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DocuIso.Contains(Me) Then
            previousValue.DocuIso.Remove(Me)
        End If

        If PlantillaDocuIso IsNot Nothing Then
            If Not PlantillaDocuIso.DocuIso.Contains(Me) Then
                PlantillaDocuIso.DocuIso.Add(Me)
            End If

            PDI_ID = PlantillaDocuIso.PDI_ID
        ElseIf Not skipKeys Then
            PDI_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("PlantillaDocuIso") AndAlso
                ChangeTracker.OriginalValues("PlantillaDocuIso") Is PlantillaDocuIso Then
                ChangeTracker.OriginalValues.Remove("PlantillaDocuIso")
            Else
                ChangeTracker.RecordOriginalValue("PlantillaDocuIso", previousValue)
            End If
            If PlantillaDocuIso IsNot Nothing AndAlso Not PlantillaDocuIso.ChangeTracker.ChangeTrackingEnabled Then
                PlantillaDocuIso.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupDocuIsoDetalle(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocuIsoDetalle In e.NewItems
                item.DocuIso = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocuIsoDetalle", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocuIsoDetalle In e.OldItems
                If ReferenceEquals(item.DocuIso, Me) Then
                    item.DocuIso = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocuIsoDetalle", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
