'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(PermisoUsuario))>
<KnownType(GetType(CuentasComprobantesLogistica))>
<KnownType(GetType(Despachos))>
<KnownType(GetType(DetalleGrupoEmpleado))>
<KnownType(GetType(GrupoEmpleado))>
<KnownType(GetType(DetallePermisoUsuario))>
<KnownType(GetType(DetalleConceptosPlanillas))>
<KnownType(GetType(RolOpeCtaCte))>
<KnownType(GetType(DetalleProvisionCompras))>
<KnownType(GetType(ProvisionCompras))>
<KnownType(GetType(ReferenciaProvisionCompras))>
<KnownType(GetType(DetalleAfectaDocumentos))>
<KnownType(GetType(DetalleAfectaProductoDocumentos))>
<KnownType(GetType(DetallePermisoCuentaCorriente))>
<KnownType(GetType(DetalleDocumentosPromocion))>
<KnownType(GetType(DocumentosPromocion))>
<KnownType(GetType(PermisoCuentaCorriente))>
<KnownType(GetType(BloqueosCodigoPersona))>
<KnownType(GetType(KardexCtaCteLetras))>
<KnownType(GetType(TesoreriaEditar))>
<KnownType(GetType(CajeroAnexo))>
<KnownType(GetType(TiposReparables))>
<KnownType(GetType(BloqueoVendedor))>
<KnownType(GetType(SolicitudAjustePrecio))>
<KnownType(GetType(DetallePrestamo))>
<KnownType(GetType(Prestamo))>
Partial Public Class Usuarios
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared USU_ID As string = "USU_ID"
				public shared USU_DESCRIPCION As string = "USU_DESCRIPCION"
				public shared USU_CONTRASENA As string = "USU_CONTRASENA"
				public shared USU_TIPO As string = "USU_TIPO"
				public shared USU_ID_CODIGO As string = "USU_ID_CODIGO"
				public shared USU_FEC_GRAB As string = "USU_FEC_GRAB"
				public shared USU_ESTADO As string = "USU_ESTADO"
				public shared PER_ID As string = "PER_ID"
				public shared Usuario As string = "Usuario"
		    End Structure
	



    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'USU_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property USU_DESCRIPCION() As String
        Get
            Return _uSU_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_DESCRIPCION, value) Then
                _uSU_DESCRIPCION = value
                OnPropertyChanged("USU_DESCRIPCION")
            End If
        End Set
    End Property

    Private _uSU_DESCRIPCION As String

    <DataMember()>
    Public Property USU_CONTRASENA() As String
        Get
            Return _uSU_CONTRASENA
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_CONTRASENA, value) Then
                _uSU_CONTRASENA = value
                OnPropertyChanged("USU_CONTRASENA")
            End If
        End Set
    End Property

    Private _uSU_CONTRASENA As String

    <DataMember()>
    Public Property USU_TIPO() As String
        Get
            Return _uSU_TIPO
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_TIPO, value) Then
                _uSU_TIPO = value
                OnPropertyChanged("USU_TIPO")
            End If
        End Set
    End Property

    Private _uSU_TIPO As String

    <DataMember()>
    Public Property USU_ID_CODIGO() As String
        Get
            Return _uSU_ID_CODIGO
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID_CODIGO, value) Then
                _uSU_ID_CODIGO = value
                OnPropertyChanged("USU_ID_CODIGO")
            End If
        End Set
    End Property

    Private _uSU_ID_CODIGO As String

    <DataMember()>
    Public Property USU_FEC_GRAB() As Date
        Get
            Return _uSU_FEC_GRAB
        End Get
        Set(ByVal value As Date)
            If Not Equals(_uSU_FEC_GRAB, value) Then
                _uSU_FEC_GRAB = value
                OnPropertyChanged("USU_FEC_GRAB")
            End If
        End Set
    End Property

    Private _uSU_FEC_GRAB As Date

    <DataMember()>
    Public Property USU_ESTADO() As Boolean
        Get
            Return _uSU_ESTADO
        End Get
        Set(ByVal value As Boolean)
            If Not Equals(_uSU_ESTADO, value) Then
                _uSU_ESTADO = value
                OnPropertyChanged("USU_ESTADO")
            End If
        End Set
    End Property

    Private _uSU_ESTADO As Boolean

    <DataMember()>
    Public Property PER_ID() As String
        Get
            Return _pER_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID, value) Then
                _pER_ID = value
                OnPropertyChanged("PER_ID")
            End If
        End Set
    End Property

    Private _pER_ID As String

    <DataMember()>
    Public Property Usuario() As String
        Get
            Return _usuario
        End Get
        Set(ByVal value As String)
            If Not Equals(_usuario, value) Then
                _usuario = value
                OnPropertyChanged("Usuario")
            End If
        End Set
    End Property

    Private _usuario As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property PermisoUsuario() As TrackableCollection(Of PermisoUsuario)
        Get
            If _permisoUsuario Is Nothing Then
                _permisoUsuario = New TrackableCollection(Of PermisoUsuario)
                AddHandler _permisoUsuario.CollectionChanged, AddressOf FixupPermisoUsuario
            End If
            Return _permisoUsuario
        End Get
        Set(ByVal value As TrackableCollection(Of PermisoUsuario))
            If Not Object.ReferenceEquals(_permisoUsuario, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _permisoUsuario IsNot Nothing Then
                    RemoveHandler _permisoUsuario.CollectionChanged, AddressOf FixupPermisoUsuario
                End If
                _permisoUsuario = value
                If _permisoUsuario IsNot Nothing Then
                    AddHandler _permisoUsuario.CollectionChanged, AddressOf FixupPermisoUsuario
                End If
                OnNavigationPropertyChanged("PermisoUsuario")
            End If
        End Set
    End Property

    Private _permisoUsuario As TrackableCollection(Of PermisoUsuario)

    <DataMember()>
    Public Property CuentasComprobantesLogistica() As TrackableCollection(Of CuentasComprobantesLogistica)
        Get
            If _cuentasComprobantesLogistica Is Nothing Then
                _cuentasComprobantesLogistica = New TrackableCollection(Of CuentasComprobantesLogistica)
                AddHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
            End If
            Return _cuentasComprobantesLogistica
        End Get
        Set(ByVal value As TrackableCollection(Of CuentasComprobantesLogistica))
            If Not Object.ReferenceEquals(_cuentasComprobantesLogistica, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cuentasComprobantesLogistica IsNot Nothing Then
                    RemoveHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Quitar el controlador de eventos de la eliminación en cascada para aquellas entidades de la colección actual.
                    For Each item As CuentasComprobantesLogistica In _cuentasComprobantesLogistica
                        RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                _cuentasComprobantesLogistica = value
                If _cuentasComprobantesLogistica IsNot Nothing Then
                    AddHandler _cuentasComprobantesLogistica.CollectionChanged, AddressOf FixupCuentasComprobantesLogistica
                    ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                    ' Agrega el controlador de eventos de eliminación en cascada para aquellas entidades que ya se encuentran en la nueva colección.
                    For Each item As CuentasComprobantesLogistica In _cuentasComprobantesLogistica
                        AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
                    Next
                End If
                OnNavigationPropertyChanged("CuentasComprobantesLogistica")
            End If
        End Set
    End Property

    Private _cuentasComprobantesLogistica As TrackableCollection(Of CuentasComprobantesLogistica)

    <DataMember()>
    Public Property Despachos() As TrackableCollection(Of Despachos)
        Get
            If _despachos Is Nothing Then
                _despachos = New TrackableCollection(Of Despachos)
                AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
            End If
            Return _despachos
        End Get
        Set(ByVal value As TrackableCollection(Of Despachos))
            If Not Object.ReferenceEquals(_despachos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _despachos IsNot Nothing Then
                    RemoveHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                _despachos = value
                If _despachos IsNot Nothing Then
                    AddHandler _despachos.CollectionChanged, AddressOf FixupDespachos
                End If
                OnNavigationPropertyChanged("Despachos")
            End If
        End Set
    End Property

    Private _despachos As TrackableCollection(Of Despachos)

    <DataMember()>
    Public Property DetalleGrupoEmpleado() As TrackableCollection(Of DetalleGrupoEmpleado)
        Get
            If _detalleGrupoEmpleado Is Nothing Then
                _detalleGrupoEmpleado = New TrackableCollection(Of DetalleGrupoEmpleado)
                AddHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
            End If
            Return _detalleGrupoEmpleado
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleGrupoEmpleado))
            If Not Object.ReferenceEquals(_detalleGrupoEmpleado, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleGrupoEmpleado IsNot Nothing Then
                    RemoveHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
                End If
                _detalleGrupoEmpleado = value
                If _detalleGrupoEmpleado IsNot Nothing Then
                    AddHandler _detalleGrupoEmpleado.CollectionChanged, AddressOf FixupDetalleGrupoEmpleado
                End If
                OnNavigationPropertyChanged("DetalleGrupoEmpleado")
            End If
        End Set
    End Property

    Private _detalleGrupoEmpleado As TrackableCollection(Of DetalleGrupoEmpleado)

    <DataMember()>
    Public Property GrupoEmpleado() As TrackableCollection(Of GrupoEmpleado)
        Get
            If _grupoEmpleado Is Nothing Then
                _grupoEmpleado = New TrackableCollection(Of GrupoEmpleado)
                AddHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
            End If
            Return _grupoEmpleado
        End Get
        Set(ByVal value As TrackableCollection(Of GrupoEmpleado))
            If Not Object.ReferenceEquals(_grupoEmpleado, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _grupoEmpleado IsNot Nothing Then
                    RemoveHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
                End If
                _grupoEmpleado = value
                If _grupoEmpleado IsNot Nothing Then
                    AddHandler _grupoEmpleado.CollectionChanged, AddressOf FixupGrupoEmpleado
                End If
                OnNavigationPropertyChanged("GrupoEmpleado")
            End If
        End Set
    End Property

    Private _grupoEmpleado As TrackableCollection(Of GrupoEmpleado)

    <DataMember()>
    Public Property DetallePermisoUsuario() As TrackableCollection(Of DetallePermisoUsuario)
        Get
            If _detallePermisoUsuario Is Nothing Then
                _detallePermisoUsuario = New TrackableCollection(Of DetallePermisoUsuario)
                AddHandler _detallePermisoUsuario.CollectionChanged, AddressOf FixupDetallePermisoUsuario
            End If
            Return _detallePermisoUsuario
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePermisoUsuario))
            If Not Object.ReferenceEquals(_detallePermisoUsuario, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePermisoUsuario IsNot Nothing Then
                    RemoveHandler _detallePermisoUsuario.CollectionChanged, AddressOf FixupDetallePermisoUsuario
                End If
                _detallePermisoUsuario = value
                If _detallePermisoUsuario IsNot Nothing Then
                    AddHandler _detallePermisoUsuario.CollectionChanged, AddressOf FixupDetallePermisoUsuario
                End If
                OnNavigationPropertyChanged("DetallePermisoUsuario")
            End If
        End Set
    End Property

    Private _detallePermisoUsuario As TrackableCollection(Of DetallePermisoUsuario)

    <DataMember()>
    Public Property DetalleConceptosPlanillas() As TrackableCollection(Of DetalleConceptosPlanillas)
        Get
            If _detalleConceptosPlanillas Is Nothing Then
                _detalleConceptosPlanillas = New TrackableCollection(Of DetalleConceptosPlanillas)
                AddHandler _detalleConceptosPlanillas.CollectionChanged, AddressOf FixupDetalleConceptosPlanillas
            End If
            Return _detalleConceptosPlanillas
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleConceptosPlanillas))
            If Not Object.ReferenceEquals(_detalleConceptosPlanillas, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleConceptosPlanillas IsNot Nothing Then
                    RemoveHandler _detalleConceptosPlanillas.CollectionChanged, AddressOf FixupDetalleConceptosPlanillas
                End If
                _detalleConceptosPlanillas = value
                If _detalleConceptosPlanillas IsNot Nothing Then
                    AddHandler _detalleConceptosPlanillas.CollectionChanged, AddressOf FixupDetalleConceptosPlanillas
                End If
                OnNavigationPropertyChanged("DetalleConceptosPlanillas")
            End If
        End Set
    End Property

    Private _detalleConceptosPlanillas As TrackableCollection(Of DetalleConceptosPlanillas)

    <DataMember()>
    Public Property RolOpeCtaCte() As TrackableCollection(Of RolOpeCtaCte)
        Get
            If _rolOpeCtaCte Is Nothing Then
                _rolOpeCtaCte = New TrackableCollection(Of RolOpeCtaCte)
                AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
            End If
            Return _rolOpeCtaCte
        End Get
        Set(ByVal value As TrackableCollection(Of RolOpeCtaCte))
            If Not Object.ReferenceEquals(_rolOpeCtaCte, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _rolOpeCtaCte IsNot Nothing Then
                    RemoveHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                End If
                _rolOpeCtaCte = value
                If _rolOpeCtaCte IsNot Nothing Then
                    AddHandler _rolOpeCtaCte.CollectionChanged, AddressOf FixupRolOpeCtaCte
                End If
                OnNavigationPropertyChanged("RolOpeCtaCte")
            End If
        End Set
    End Property

    Private _rolOpeCtaCte As TrackableCollection(Of RolOpeCtaCte)

    <DataMember()>
    Public Property DetalleProvisionCompras() As TrackableCollection(Of DetalleProvisionCompras)
        Get
            If _detalleProvisionCompras Is Nothing Then
                _detalleProvisionCompras = New TrackableCollection(Of DetalleProvisionCompras)
                AddHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
            End If
            Return _detalleProvisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleProvisionCompras))
            If Not Object.ReferenceEquals(_detalleProvisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleProvisionCompras IsNot Nothing Then
                    RemoveHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
                End If
                _detalleProvisionCompras = value
                If _detalleProvisionCompras IsNot Nothing Then
                    AddHandler _detalleProvisionCompras.CollectionChanged, AddressOf FixupDetalleProvisionCompras
                End If
                OnNavigationPropertyChanged("DetalleProvisionCompras")
            End If
        End Set
    End Property

    Private _detalleProvisionCompras As TrackableCollection(Of DetalleProvisionCompras)

    <DataMember()>
    Public Property ProvisionCompras() As TrackableCollection(Of ProvisionCompras)
        Get
            If _provisionCompras Is Nothing Then
                _provisionCompras = New TrackableCollection(Of ProvisionCompras)
                AddHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
            End If
            Return _provisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of ProvisionCompras))
            If Not Object.ReferenceEquals(_provisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _provisionCompras IsNot Nothing Then
                    RemoveHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
                End If
                _provisionCompras = value
                If _provisionCompras IsNot Nothing Then
                    AddHandler _provisionCompras.CollectionChanged, AddressOf FixupProvisionCompras
                End If
                OnNavigationPropertyChanged("ProvisionCompras")
            End If
        End Set
    End Property

    Private _provisionCompras As TrackableCollection(Of ProvisionCompras)

    <DataMember()>
    Public Property ReferenciaProvisionCompras() As TrackableCollection(Of ReferenciaProvisionCompras)
        Get
            If _referenciaProvisionCompras Is Nothing Then
                _referenciaProvisionCompras = New TrackableCollection(Of ReferenciaProvisionCompras)
                AddHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
            End If
            Return _referenciaProvisionCompras
        End Get
        Set(ByVal value As TrackableCollection(Of ReferenciaProvisionCompras))
            If Not Object.ReferenceEquals(_referenciaProvisionCompras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _referenciaProvisionCompras IsNot Nothing Then
                    RemoveHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
                End If
                _referenciaProvisionCompras = value
                If _referenciaProvisionCompras IsNot Nothing Then
                    AddHandler _referenciaProvisionCompras.CollectionChanged, AddressOf FixupReferenciaProvisionCompras
                End If
                OnNavigationPropertyChanged("ReferenciaProvisionCompras")
            End If
        End Set
    End Property

    Private _referenciaProvisionCompras As TrackableCollection(Of ReferenciaProvisionCompras)

    <DataMember()>
    Public Property DetalleAfectaDocumentos() As TrackableCollection(Of DetalleAfectaDocumentos)
        Get
            If _detalleAfectaDocumentos Is Nothing Then
                _detalleAfectaDocumentos = New TrackableCollection(Of DetalleAfectaDocumentos)
                AddHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
            End If
            Return _detalleAfectaDocumentos
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAfectaDocumentos))
            If Not Object.ReferenceEquals(_detalleAfectaDocumentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAfectaDocumentos IsNot Nothing Then
                    RemoveHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
                End If
                _detalleAfectaDocumentos = value
                If _detalleAfectaDocumentos IsNot Nothing Then
                    AddHandler _detalleAfectaDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaDocumentos
                End If
                OnNavigationPropertyChanged("DetalleAfectaDocumentos")
            End If
        End Set
    End Property

    Private _detalleAfectaDocumentos As TrackableCollection(Of DetalleAfectaDocumentos)

    <DataMember()>
    Public Property DetalleAfectaProductoDocumentos() As TrackableCollection(Of DetalleAfectaProductoDocumentos)
        Get
            If _detalleAfectaProductoDocumentos Is Nothing Then
                _detalleAfectaProductoDocumentos = New TrackableCollection(Of DetalleAfectaProductoDocumentos)
                AddHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
            End If
            Return _detalleAfectaProductoDocumentos
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleAfectaProductoDocumentos))
            If Not Object.ReferenceEquals(_detalleAfectaProductoDocumentos, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleAfectaProductoDocumentos IsNot Nothing Then
                    RemoveHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
                End If
                _detalleAfectaProductoDocumentos = value
                If _detalleAfectaProductoDocumentos IsNot Nothing Then
                    AddHandler _detalleAfectaProductoDocumentos.CollectionChanged, AddressOf FixupDetalleAfectaProductoDocumentos
                End If
                OnNavigationPropertyChanged("DetalleAfectaProductoDocumentos")
            End If
        End Set
    End Property

    Private _detalleAfectaProductoDocumentos As TrackableCollection(Of DetalleAfectaProductoDocumentos)

    <DataMember()>
    Public Property DetallePermisoCuentaCorriente() As TrackableCollection(Of DetallePermisoCuentaCorriente)
        Get
            If _detallePermisoCuentaCorriente Is Nothing Then
                _detallePermisoCuentaCorriente = New TrackableCollection(Of DetallePermisoCuentaCorriente)
                AddHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
            End If
            Return _detallePermisoCuentaCorriente
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePermisoCuentaCorriente))
            If Not Object.ReferenceEquals(_detallePermisoCuentaCorriente, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePermisoCuentaCorriente IsNot Nothing Then
                    RemoveHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
                End If
                _detallePermisoCuentaCorriente = value
                If _detallePermisoCuentaCorriente IsNot Nothing Then
                    AddHandler _detallePermisoCuentaCorriente.CollectionChanged, AddressOf FixupDetallePermisoCuentaCorriente
                End If
                OnNavigationPropertyChanged("DetallePermisoCuentaCorriente")
            End If
        End Set
    End Property

    Private _detallePermisoCuentaCorriente As TrackableCollection(Of DetallePermisoCuentaCorriente)

    <DataMember()>
    Public Property DetalleDocumentosPromocion() As TrackableCollection(Of DetalleDocumentosPromocion)
        Get
            If _detalleDocumentosPromocion Is Nothing Then
                _detalleDocumentosPromocion = New TrackableCollection(Of DetalleDocumentosPromocion)
                AddHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
            End If
            Return _detalleDocumentosPromocion
        End Get
        Set(ByVal value As TrackableCollection(Of DetalleDocumentosPromocion))
            If Not Object.ReferenceEquals(_detalleDocumentosPromocion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detalleDocumentosPromocion IsNot Nothing Then
                    RemoveHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
                End If
                _detalleDocumentosPromocion = value
                If _detalleDocumentosPromocion IsNot Nothing Then
                    AddHandler _detalleDocumentosPromocion.CollectionChanged, AddressOf FixupDetalleDocumentosPromocion
                End If
                OnNavigationPropertyChanged("DetalleDocumentosPromocion")
            End If
        End Set
    End Property

    Private _detalleDocumentosPromocion As TrackableCollection(Of DetalleDocumentosPromocion)

    <DataMember()>
    Public Property DocumentosPromocion() As TrackableCollection(Of DocumentosPromocion)
        Get
            If _documentosPromocion Is Nothing Then
                _documentosPromocion = New TrackableCollection(Of DocumentosPromocion)
                AddHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
            End If
            Return _documentosPromocion
        End Get
        Set(ByVal value As TrackableCollection(Of DocumentosPromocion))
            If Not Object.ReferenceEquals(_documentosPromocion, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _documentosPromocion IsNot Nothing Then
                    RemoveHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
                End If
                _documentosPromocion = value
                If _documentosPromocion IsNot Nothing Then
                    AddHandler _documentosPromocion.CollectionChanged, AddressOf FixupDocumentosPromocion
                End If
                OnNavigationPropertyChanged("DocumentosPromocion")
            End If
        End Set
    End Property

    Private _documentosPromocion As TrackableCollection(Of DocumentosPromocion)

    <DataMember()>
    Public Property PermisoCuentaCorriente() As TrackableCollection(Of PermisoCuentaCorriente)
        Get
            If _permisoCuentaCorriente Is Nothing Then
                _permisoCuentaCorriente = New TrackableCollection(Of PermisoCuentaCorriente)
                AddHandler _permisoCuentaCorriente.CollectionChanged, AddressOf FixupPermisoCuentaCorriente
            End If
            Return _permisoCuentaCorriente
        End Get
        Set(ByVal value As TrackableCollection(Of PermisoCuentaCorriente))
            If Not Object.ReferenceEquals(_permisoCuentaCorriente, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _permisoCuentaCorriente IsNot Nothing Then
                    RemoveHandler _permisoCuentaCorriente.CollectionChanged, AddressOf FixupPermisoCuentaCorriente
                End If
                _permisoCuentaCorriente = value
                If _permisoCuentaCorriente IsNot Nothing Then
                    AddHandler _permisoCuentaCorriente.CollectionChanged, AddressOf FixupPermisoCuentaCorriente
                End If
                OnNavigationPropertyChanged("PermisoCuentaCorriente")
            End If
        End Set
    End Property

    Private _permisoCuentaCorriente As TrackableCollection(Of PermisoCuentaCorriente)

    <DataMember()>
    Public Property BloqueosCodigoPersona() As TrackableCollection(Of BloqueosCodigoPersona)
        Get
            If _bloqueosCodigoPersona Is Nothing Then
                _bloqueosCodigoPersona = New TrackableCollection(Of BloqueosCodigoPersona)
                AddHandler _bloqueosCodigoPersona.CollectionChanged, AddressOf FixupBloqueosCodigoPersona
            End If
            Return _bloqueosCodigoPersona
        End Get
        Set(ByVal value As TrackableCollection(Of BloqueosCodigoPersona))
            If Not Object.ReferenceEquals(_bloqueosCodigoPersona, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _bloqueosCodigoPersona IsNot Nothing Then
                    RemoveHandler _bloqueosCodigoPersona.CollectionChanged, AddressOf FixupBloqueosCodigoPersona
                End If
                _bloqueosCodigoPersona = value
                If _bloqueosCodigoPersona IsNot Nothing Then
                    AddHandler _bloqueosCodigoPersona.CollectionChanged, AddressOf FixupBloqueosCodigoPersona
                End If
                OnNavigationPropertyChanged("BloqueosCodigoPersona")
            End If
        End Set
    End Property

    Private _bloqueosCodigoPersona As TrackableCollection(Of BloqueosCodigoPersona)

    <DataMember()>
    Public Property KardexCtaCteLetras() As TrackableCollection(Of KardexCtaCteLetras)
        Get
            If _kardexCtaCteLetras Is Nothing Then
                _kardexCtaCteLetras = New TrackableCollection(Of KardexCtaCteLetras)
                AddHandler _kardexCtaCteLetras.CollectionChanged, AddressOf FixupKardexCtaCteLetras
            End If
            Return _kardexCtaCteLetras
        End Get
        Set(ByVal value As TrackableCollection(Of KardexCtaCteLetras))
            If Not Object.ReferenceEquals(_kardexCtaCteLetras, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _kardexCtaCteLetras IsNot Nothing Then
                    RemoveHandler _kardexCtaCteLetras.CollectionChanged, AddressOf FixupKardexCtaCteLetras
                End If
                _kardexCtaCteLetras = value
                If _kardexCtaCteLetras IsNot Nothing Then
                    AddHandler _kardexCtaCteLetras.CollectionChanged, AddressOf FixupKardexCtaCteLetras
                End If
                OnNavigationPropertyChanged("KardexCtaCteLetras")
            End If
        End Set
    End Property

    Private _kardexCtaCteLetras As TrackableCollection(Of KardexCtaCteLetras)

    <DataMember()>
    Public Property PermisoCuentaCorriente1() As TrackableCollection(Of PermisoCuentaCorriente)
        Get
            If _permisoCuentaCorriente1 Is Nothing Then
                _permisoCuentaCorriente1 = New TrackableCollection(Of PermisoCuentaCorriente)
                AddHandler _permisoCuentaCorriente1.CollectionChanged, AddressOf FixupPermisoCuentaCorriente1
            End If
            Return _permisoCuentaCorriente1
        End Get
        Set(ByVal value As TrackableCollection(Of PermisoCuentaCorriente))
            If Not Object.ReferenceEquals(_permisoCuentaCorriente1, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _permisoCuentaCorriente1 IsNot Nothing Then
                    RemoveHandler _permisoCuentaCorriente1.CollectionChanged, AddressOf FixupPermisoCuentaCorriente1
                End If
                _permisoCuentaCorriente1 = value
                If _permisoCuentaCorriente1 IsNot Nothing Then
                    AddHandler _permisoCuentaCorriente1.CollectionChanged, AddressOf FixupPermisoCuentaCorriente1
                End If
                OnNavigationPropertyChanged("PermisoCuentaCorriente1")
            End If
        End Set
    End Property

    Private _permisoCuentaCorriente1 As TrackableCollection(Of PermisoCuentaCorriente)

    <DataMember()>
    Public Property TesoreriaEditar() As TrackableCollection(Of TesoreriaEditar)
        Get
            If _tesoreriaEditar Is Nothing Then
                _tesoreriaEditar = New TrackableCollection(Of TesoreriaEditar)
                AddHandler _tesoreriaEditar.CollectionChanged, AddressOf FixupTesoreriaEditar
            End If
            Return _tesoreriaEditar
        End Get
        Set(ByVal value As TrackableCollection(Of TesoreriaEditar))
            If Not Object.ReferenceEquals(_tesoreriaEditar, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _tesoreriaEditar IsNot Nothing Then
                    RemoveHandler _tesoreriaEditar.CollectionChanged, AddressOf FixupTesoreriaEditar
                End If
                _tesoreriaEditar = value
                If _tesoreriaEditar IsNot Nothing Then
                    AddHandler _tesoreriaEditar.CollectionChanged, AddressOf FixupTesoreriaEditar
                End If
                OnNavigationPropertyChanged("TesoreriaEditar")
            End If
        End Set
    End Property

    Private _tesoreriaEditar As TrackableCollection(Of TesoreriaEditar)

    <DataMember()>
    Public Property CajeroAnexo() As TrackableCollection(Of CajeroAnexo)
        Get
            If _cajeroAnexo Is Nothing Then
                _cajeroAnexo = New TrackableCollection(Of CajeroAnexo)
                AddHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
            End If
            Return _cajeroAnexo
        End Get
        Set(ByVal value As TrackableCollection(Of CajeroAnexo))
            If Not Object.ReferenceEquals(_cajeroAnexo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _cajeroAnexo IsNot Nothing Then
                    RemoveHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
                End If
                _cajeroAnexo = value
                If _cajeroAnexo IsNot Nothing Then
                    AddHandler _cajeroAnexo.CollectionChanged, AddressOf FixupCajeroAnexo
                End If
                OnNavigationPropertyChanged("CajeroAnexo")
            End If
        End Set
    End Property

    Private _cajeroAnexo As TrackableCollection(Of CajeroAnexo)

    <DataMember()>
    Public Property TesoreriaEditar1() As TesoreriaEditar
        Get
            Return _tesoreriaEditar1
        End Get
        Set(ByVal value As TesoreriaEditar)
            If _tesoreriaEditar1 IsNot value Then
                Dim previousValue As TesoreriaEditar = _tesoreriaEditar1
                _tesoreriaEditar1 = value
                FixupTesoreriaEditar1(previousValue)
                OnNavigationPropertyChanged("TesoreriaEditar1")
            End If
        End Set
    End Property

    Private _tesoreriaEditar1 As TesoreriaEditar


    <DataMember()>
    Public Property TiposReparables() As TrackableCollection(Of TiposReparables)
        Get
            If _tiposReparables Is Nothing Then
                _tiposReparables = New TrackableCollection(Of TiposReparables)
                AddHandler _tiposReparables.CollectionChanged, AddressOf FixupTiposReparables
            End If
            Return _tiposReparables
        End Get
        Set(ByVal value As TrackableCollection(Of TiposReparables))
            If Not Object.ReferenceEquals(_tiposReparables, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _tiposReparables IsNot Nothing Then
                    RemoveHandler _tiposReparables.CollectionChanged, AddressOf FixupTiposReparables
                End If
                _tiposReparables = value
                If _tiposReparables IsNot Nothing Then
                    AddHandler _tiposReparables.CollectionChanged, AddressOf FixupTiposReparables
                End If
                OnNavigationPropertyChanged("TiposReparables")
            End If
        End Set
    End Property

    Private _tiposReparables As TrackableCollection(Of TiposReparables)

    <DataMember()>
    Public Property BloqueoVendedor() As TrackableCollection(Of BloqueoVendedor)
        Get
            If _bloqueoVendedor Is Nothing Then
                _bloqueoVendedor = New TrackableCollection(Of BloqueoVendedor)
                AddHandler _bloqueoVendedor.CollectionChanged, AddressOf FixupBloqueoVendedor
            End If
            Return _bloqueoVendedor
        End Get
        Set(ByVal value As TrackableCollection(Of BloqueoVendedor))
            If Not Object.ReferenceEquals(_bloqueoVendedor, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _bloqueoVendedor IsNot Nothing Then
                    RemoveHandler _bloqueoVendedor.CollectionChanged, AddressOf FixupBloqueoVendedor
                End If
                _bloqueoVendedor = value
                If _bloqueoVendedor IsNot Nothing Then
                    AddHandler _bloqueoVendedor.CollectionChanged, AddressOf FixupBloqueoVendedor
                End If
                OnNavigationPropertyChanged("BloqueoVendedor")
            End If
        End Set
    End Property

    Private _bloqueoVendedor As TrackableCollection(Of BloqueoVendedor)

    <DataMember()>
    Public Property SolicitudAjustePrecio() As TrackableCollection(Of SolicitudAjustePrecio)
        Get
            If _solicitudAjustePrecio Is Nothing Then
                _solicitudAjustePrecio = New TrackableCollection(Of SolicitudAjustePrecio)
                AddHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
            End If
            Return _solicitudAjustePrecio
        End Get
        Set(ByVal value As TrackableCollection(Of SolicitudAjustePrecio))
            If Not Object.ReferenceEquals(_solicitudAjustePrecio, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _solicitudAjustePrecio IsNot Nothing Then
                    RemoveHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
                End If
                _solicitudAjustePrecio = value
                If _solicitudAjustePrecio IsNot Nothing Then
                    AddHandler _solicitudAjustePrecio.CollectionChanged, AddressOf FixupSolicitudAjustePrecio
                End If
                OnNavigationPropertyChanged("SolicitudAjustePrecio")
            End If
        End Set
    End Property

    Private _solicitudAjustePrecio As TrackableCollection(Of SolicitudAjustePrecio)

    <DataMember()>
    Public Property DetallePrestamo() As TrackableCollection(Of DetallePrestamo)
        Get
            If _detallePrestamo Is Nothing Then
                _detallePrestamo = New TrackableCollection(Of DetallePrestamo)
                AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
            End If
            Return _detallePrestamo
        End Get
        Set(ByVal value As TrackableCollection(Of DetallePrestamo))
            If Not Object.ReferenceEquals(_detallePrestamo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _detallePrestamo IsNot Nothing Then
                    RemoveHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                _detallePrestamo = value
                If _detallePrestamo IsNot Nothing Then
                    AddHandler _detallePrestamo.CollectionChanged, AddressOf FixupDetallePrestamo
                End If
                OnNavigationPropertyChanged("DetallePrestamo")
            End If
        End Set
    End Property

    Private _detallePrestamo As TrackableCollection(Of DetallePrestamo)

    <DataMember()>
    Public Property Prestamo() As TrackableCollection(Of Prestamo)
        Get
            If _prestamo Is Nothing Then
                _prestamo = New TrackableCollection(Of Prestamo)
                AddHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
            End If
            Return _prestamo
        End Get
        Set(ByVal value As TrackableCollection(Of Prestamo))
            If Not Object.ReferenceEquals(_prestamo, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _prestamo IsNot Nothing Then
                    RemoveHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
                End If
                _prestamo = value
                If _prestamo IsNot Nothing Then
                    AddHandler _prestamo.CollectionChanged, AddressOf FixupPrestamo
                End If
                OnNavigationPropertyChanged("Prestamo")
            End If
        End Set
    End Property

    Private _prestamo As TrackableCollection(Of Prestamo)

#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        PermisoUsuario.Clear()
        CuentasComprobantesLogistica.Clear()
        Despachos.Clear()
        DetalleGrupoEmpleado.Clear()
        GrupoEmpleado.Clear()
        DetallePermisoUsuario.Clear()
        DetalleConceptosPlanillas.Clear()
        RolOpeCtaCte.Clear()
        DetalleProvisionCompras.Clear()
        ProvisionCompras.Clear()
        ReferenciaProvisionCompras.Clear()
        DetalleAfectaDocumentos.Clear()
        DetalleAfectaProductoDocumentos.Clear()
        DetallePermisoCuentaCorriente.Clear()
        DetalleDocumentosPromocion.Clear()
        DocumentosPromocion.Clear()
        PermisoCuentaCorriente.Clear()
        BloqueosCodigoPersona.Clear()
        KardexCtaCteLetras.Clear()
        PermisoCuentaCorriente1.Clear()
        TesoreriaEditar.Clear()
        CajeroAnexo.Clear()
        TesoreriaEditar1 = Nothing
        TiposReparables.Clear()
        BloqueoVendedor.Clear()
        SolicitudAjustePrecio.Clear()
        DetallePrestamo.Clear()
        Prestamo.Clear()
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupTesoreriaEditar1(ByVal previousValue As TesoreriaEditar)
        If previousValue IsNot Nothing Then
            RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf previousValue.HandleCascadeDelete
        End If

        If TesoreriaEditar1 IsNot Nothing Then
            AddHandler ChangeTracker.ObjectStateChanging, AddressOf TesoreriaEditar1.HandleCascadeDelete
        End If
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso ReferenceEquals(previousValue.Usuarios1, Me) Then
            previousValue.Usuarios1 = Nothing
        End If

        If TesoreriaEditar1 IsNot Nothing Then
            TesoreriaEditar1.Usuarios1 = Me
        End If

        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("TesoreriaEditar1") AndAlso
                ChangeTracker.OriginalValues("TesoreriaEditar1") Is TesoreriaEditar1 Then
                ChangeTracker.OriginalValues.Remove("TesoreriaEditar1")
            Else
                ChangeTracker.RecordOriginalValue("TesoreriaEditar1", previousValue)
                ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                ' permite que la relación se modifique sin eliminar el elemento dependiente.
                If previousValue IsNot Nothing AndAlso previousValue.ChangeTracker.State <> ObjectState.Added Then
                    previousValue.MarkAsDeleted()
                End If
            End If
            If TesoreriaEditar1 IsNot Nothing AndAlso Not TesoreriaEditar1.ChangeTracker.ChangeTrackingEnabled Then
                TesoreriaEditar1.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupPermisoUsuario(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PermisoUsuario In e.NewItems
                item.USU_ID = USU_ID
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PermisoUsuario", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PermisoUsuario In e.OldItems
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PermisoUsuario", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCuentasComprobantesLogistica(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CuentasComprobantesLogistica In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CuentasComprobantesLogistica", item)
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Actualizar la escucha de eventos para que se refiera al nuevo extremo dependiente.
                AddHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CuentasComprobantesLogistica In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CuentasComprobantesLogistica", item)
                    ' Eliminar el extremo dependiente de esta asociación de identificación. Si el estado actual es agregado,
                    ' permite que la relación se modifique sin eliminar el elemento dependiente.
                    If item.ChangeTracker.State <> ObjectState.Added Then
                        item.MarkAsDeleted()
                    End If
                End If
                ' Este es el extremo principal en una asociación que realiza eliminaciones en cascada.
                ' Quitar el extremo dependiente anterior de la escucha de eventos.
                RemoveHandler ChangeTracker.ObjectStateChanging, AddressOf item.HandleCascadeDelete
            Next
        End If
    End Sub

    Private Sub FixupDespachos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Despachos In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Despachos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Despachos In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Despachos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleGrupoEmpleado(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleGrupoEmpleado In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleGrupoEmpleado", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleGrupoEmpleado In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleGrupoEmpleado", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupGrupoEmpleado(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As GrupoEmpleado In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("GrupoEmpleado", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As GrupoEmpleado In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("GrupoEmpleado", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePermisoUsuario(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePermisoUsuario In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePermisoUsuario", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePermisoUsuario In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePermisoUsuario", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleConceptosPlanillas(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleConceptosPlanillas In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleConceptosPlanillas", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleConceptosPlanillas In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleConceptosPlanillas", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupRolOpeCtaCte(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("RolOpeCtaCte", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As RolOpeCtaCte In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("RolOpeCtaCte", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleProvisionCompras In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleProvisionCompras In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ProvisionCompras In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupReferenciaProvisionCompras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ReferenciaProvisionCompras In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ReferenciaProvisionCompras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ReferenciaProvisionCompras In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ReferenciaProvisionCompras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleAfectaDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAfectaDocumentos In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAfectaDocumentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAfectaDocumentos In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAfectaDocumentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleAfectaProductoDocumentos(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleAfectaProductoDocumentos In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleAfectaProductoDocumentos", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleAfectaProductoDocumentos In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleAfectaProductoDocumentos", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePermisoCuentaCorriente(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePermisoCuentaCorriente In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePermisoCuentaCorriente", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePermisoCuentaCorriente In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePermisoCuentaCorriente", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetalleDocumentosPromocion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetalleDocumentosPromocion In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetalleDocumentosPromocion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetalleDocumentosPromocion In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetalleDocumentosPromocion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDocumentosPromocion(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DocumentosPromocion In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DocumentosPromocion", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DocumentosPromocion In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DocumentosPromocion", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPermisoCuentaCorriente(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PermisoCuentaCorriente In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PermisoCuentaCorriente", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PermisoCuentaCorriente In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PermisoCuentaCorriente", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupBloqueosCodigoPersona(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As BloqueosCodigoPersona In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("BloqueosCodigoPersona", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As BloqueosCodigoPersona In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("BloqueosCodigoPersona", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupKardexCtaCteLetras(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As KardexCtaCteLetras In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("KardexCtaCteLetras", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As KardexCtaCteLetras In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("KardexCtaCteLetras", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPermisoCuentaCorriente1(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As PermisoCuentaCorriente In e.NewItems
                item.Usuarios1 = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("PermisoCuentaCorriente1", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As PermisoCuentaCorriente In e.OldItems
                If ReferenceEquals(item.Usuarios1, Me) Then
                    item.Usuarios1 = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("PermisoCuentaCorriente1", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupTesoreriaEditar(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As TesoreriaEditar In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("TesoreriaEditar", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As TesoreriaEditar In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("TesoreriaEditar", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupCajeroAnexo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As CajeroAnexo In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("CajeroAnexo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As CajeroAnexo In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("CajeroAnexo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupTiposReparables(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As TiposReparables In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("TiposReparables", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As TiposReparables In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("TiposReparables", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupBloqueoVendedor(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As BloqueoVendedor In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("BloqueoVendedor", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As BloqueoVendedor In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("BloqueoVendedor", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupSolicitudAjustePrecio(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SolicitudAjustePrecio", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SolicitudAjustePrecio In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SolicitudAjustePrecio", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupDetallePrestamo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As DetallePrestamo In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("DetallePrestamo", item)
                End If
            Next
        End If
    End Sub

    Private Sub FixupPrestamo(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As Prestamo In e.NewItems
                item.Usuarios = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("Prestamo", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As Prestamo In e.OldItems
                If ReferenceEquals(item.Usuarios, Me) Then
                    item.Usuarios = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("Prestamo", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
