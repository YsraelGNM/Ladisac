'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(ControlDescargaRuma))>
<KnownType(GetType(Personas))>
Partial Public Class ControlDescarga
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared DES_ID As string = "DES_ID"
				public shared HOR_ID As string = "HOR_ID"
				public shared PUE_ID As string = "PUE_ID"
				public shared PER_ID_OPERADOR As string = "PER_ID_OPERADOR"
				public shared DES_FECHA As string = "DES_FECHA"
				public shared DES_HI As string = "DES_HI"
				public shared DES_HF As string = "DES_HF"
				public shared DES_MI As string = "DES_MI"
				public shared DES_MF As string = "DES_MF"
				public shared USU_ID As string = "USU_ID"
				public shared DES_FEC_GRAB As string = "DES_FEC_GRAB"
				public shared DES_ESTADO As string = "DES_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property DES_ID() As Integer
        Get
            Return _dES_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_dES_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DES_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dES_ID = value
                OnPropertyChanged("DES_ID")
            End If
        End Set
    End Property

    Private _dES_ID As Integer

    <DataMember()>
    Public Property HOR_ID() As Nullable(Of Integer)
        Get
            Return _hOR_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_hOR_ID, value) Then
                _hOR_ID = value
                OnPropertyChanged("HOR_ID")
            End If
        End Set
    End Property

    Private _hOR_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PUE_ID() As Nullable(Of Integer)
        Get
            Return _pUE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pUE_ID, value) Then
                _pUE_ID = value
                OnPropertyChanged("PUE_ID")
            End If
        End Set
    End Property

    Private _pUE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PER_ID_OPERADOR() As String
        Get
            Return _pER_ID_OPERADOR
        End Get
        Set(ByVal value As String)
            If Not Equals(_pER_ID_OPERADOR, value) Then
                ChangeTracker.RecordOriginalValue("PER_ID_OPERADOR", _pER_ID_OPERADOR)
                If Not IsDeserializing Then
                    If Personas IsNot Nothing AndAlso Not Equals(Personas.PER_ID, value) Then
                        Personas = Nothing
                    End If
                End If
                _pER_ID_OPERADOR = value
                OnPropertyChanged("PER_ID_OPERADOR")
            End If
        End Set
    End Property

    Private _pER_ID_OPERADOR As String

    <DataMember()>
    Public Property DES_FECHA() As Nullable(Of Date)
        Get
            Return _dES_FECHA
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dES_FECHA, value) Then
                _dES_FECHA = value
                OnPropertyChanged("DES_FECHA")
            End If
        End Set
    End Property

    Private _dES_FECHA As Nullable(Of Date)

    <DataMember()>
    Public Property DES_HI() As Nullable(Of Decimal)
        Get
            Return _dES_HI
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dES_HI, value) Then
                _dES_HI = value
                OnPropertyChanged("DES_HI")
            End If
        End Set
    End Property

    Private _dES_HI As Nullable(Of Decimal)

    <DataMember()>
    Public Property DES_HF() As Nullable(Of Decimal)
        Get
            Return _dES_HF
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_dES_HF, value) Then
                _dES_HF = value
                OnPropertyChanged("DES_HF")
            End If
        End Set
    End Property

    Private _dES_HF As Nullable(Of Decimal)

    <DataMember()>
    Public Property DES_MI() As Nullable(Of Integer)
        Get
            Return _dES_MI
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dES_MI, value) Then
                _dES_MI = value
                OnPropertyChanged("DES_MI")
            End If
        End Set
    End Property

    Private _dES_MI As Nullable(Of Integer)

    <DataMember()>
    Public Property DES_MF() As Nullable(Of Integer)
        Get
            Return _dES_MF
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_dES_MF, value) Then
                _dES_MF = value
                OnPropertyChanged("DES_MF")
            End If
        End Set
    End Property

    Private _dES_MF As Nullable(Of Integer)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property DES_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _dES_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_dES_FEC_GRAB, value) Then
                _dES_FEC_GRAB = value
                OnPropertyChanged("DES_FEC_GRAB")
            End If
        End Set
    End Property

    Private _dES_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property DES_ESTADO() As Nullable(Of Boolean)
        Get
            Return _dES_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_dES_ESTADO, value) Then
                _dES_ESTADO = value
                OnPropertyChanged("DES_ESTADO")
            End If
        End Set
    End Property

    Private _dES_ESTADO As Nullable(Of Boolean)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property ControlDescargaRuma() As TrackableCollection(Of ControlDescargaRuma)
        Get
            If _controlDescargaRuma Is Nothing Then
                _controlDescargaRuma = New TrackableCollection(Of ControlDescargaRuma)
                AddHandler _controlDescargaRuma.CollectionChanged, AddressOf FixupControlDescargaRuma
            End If
            Return _controlDescargaRuma
        End Get
        Set(ByVal value As TrackableCollection(Of ControlDescargaRuma))
            If Not Object.ReferenceEquals(_controlDescargaRuma, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _controlDescargaRuma IsNot Nothing Then
                    RemoveHandler _controlDescargaRuma.CollectionChanged, AddressOf FixupControlDescargaRuma
                End If
                _controlDescargaRuma = value
                If _controlDescargaRuma IsNot Nothing Then
                    AddHandler _controlDescargaRuma.CollectionChanged, AddressOf FixupControlDescargaRuma
                End If
                OnNavigationPropertyChanged("ControlDescargaRuma")
            End If
        End Set
    End Property

    Private _controlDescargaRuma As TrackableCollection(Of ControlDescargaRuma)

    <DataMember()>
    Public Property Personas() As Personas
        Get
            Return _personas
        End Get
        Set(ByVal value As Personas)
            If _personas IsNot value Then
                Dim previousValue As Personas = _personas
                _personas = value
                FixupPersonas(previousValue)
                OnNavigationPropertyChanged("Personas")
            End If
        End Set
    End Property

    Private _personas As Personas


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        ControlDescargaRuma.Clear()
        Personas = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupPersonas(ByVal previousValue As Personas, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Personas IsNot Nothing Then
            PER_ID_OPERADOR = Personas.PER_ID
        ElseIf Not skipKeys Then
            PER_ID_OPERADOR = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Personas") AndAlso
                ChangeTracker.OriginalValues("Personas") Is Personas Then
                ChangeTracker.OriginalValues.Remove("Personas")
            Else
                ChangeTracker.RecordOriginalValue("Personas", previousValue)
            End If
            If Personas IsNot Nothing AndAlso Not Personas.ChangeTracker.ChangeTrackingEnabled Then
                Personas.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupControlDescargaRuma(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As ControlDescargaRuma In e.NewItems
                item.ControlDescarga = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("ControlDescargaRuma", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As ControlDescargaRuma In e.OldItems
                If ReferenceEquals(item.ControlDescarga, Me) Then
                    item.ControlDescarga = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("ControlDescargaRuma", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
