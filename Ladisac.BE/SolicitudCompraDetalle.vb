'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(SolicitudCompra))>
<KnownType(GetType(Articulos))>
<KnownType(GetType(OrdenRequerimientoDetalle))>
Partial Public Class SolicitudCompraDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared SCD_ID As string = "SCD_ID"
				public shared SOC_ID As string = "SOC_ID"
				public shared ORD_ID As string = "ORD_ID"
				public shared ART_ID As string = "ART_ID"
				public shared SCD_CANTIDAD As string = "SCD_CANTIDAD"
				public shared SCD_CANTIDAD_INGRESADA As string = "SCD_CANTIDAD_INGRESADA"
				public shared SCD_DESCUENTO As string = "SCD_DESCUENTO"
				public shared SCD_PRECIO_UNITARIO As string = "SCD_PRECIO_UNITARIO"
				public shared SCD_IGV As string = "SCD_IGV"
				public shared SCD_CONTRAVALOR As string = "SCD_CONTRAVALOR"
				public shared SCD_OBSERVACIONES As string = "SCD_OBSERVACIONES"
				public shared SCD_INCLUYE_MATERIAL As string = "SCD_INCLUYE_MATERIAL"
				public shared SCD_PARTE_MATERIAL As string = "SCD_PARTE_MATERIAL"
				public shared SCD_ESTADO_COMPRA As string = "SCD_ESTADO_COMPRA"
		    End Structure
	



    <DataMember()>
    Public Property SCD_ID() As Integer
        Get
            Return _sCD_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_sCD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'SCD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _sCD_ID = value
                OnPropertyChanged("SCD_ID")
            End If
        End Set
    End Property

    Private _sCD_ID As Integer

    <DataMember()>
    Public Property SOC_ID() As Nullable(Of Integer)
        Get
            Return _sOC_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_sOC_ID, value) Then
                ChangeTracker.RecordOriginalValue("SOC_ID", _sOC_ID)
                If Not IsDeserializing Then
                    If SolicitudCompra IsNot Nothing AndAlso Not Equals(SolicitudCompra.SOC_ID, value) Then
                        SolicitudCompra = Nothing
                    End If
                End If
                _sOC_ID = value
                OnPropertyChanged("SOC_ID")
            End If
        End Set
    End Property

    Private _sOC_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ORD_ID() As Nullable(Of Integer)
        Get
            Return _oRD_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_oRD_ID, value) Then
                ChangeTracker.RecordOriginalValue("ORD_ID", _oRD_ID)
                If Not IsDeserializing Then
                    If OrdenRequerimientoDetalle IsNot Nothing AndAlso Not Equals(OrdenRequerimientoDetalle.ORD_ID, value) Then
                        OrdenRequerimientoDetalle = Nothing
                    End If
                End If
                _oRD_ID = value
                OnPropertyChanged("ORD_ID")
            End If
        End Set
    End Property

    Private _oRD_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property ART_ID() As String
        Get
            Return _aRT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_aRT_ID, value) Then
                ChangeTracker.RecordOriginalValue("ART_ID", _aRT_ID)
                If Not IsDeserializing Then
                    If Articulos IsNot Nothing AndAlso Not Equals(Articulos.ART_ID, value) Then
                        Articulos = Nothing
                    End If
                End If
                _aRT_ID = value
                OnPropertyChanged("ART_ID")
            End If
        End Set
    End Property

    Private _aRT_ID As String

    <DataMember()>
    Public Property SCD_CANTIDAD() As Nullable(Of Decimal)
        Get
            Return _sCD_CANTIDAD
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_CANTIDAD, value) Then
                _sCD_CANTIDAD = value
                OnPropertyChanged("SCD_CANTIDAD")
            End If
        End Set
    End Property

    Private _sCD_CANTIDAD As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_CANTIDAD_INGRESADA() As Nullable(Of Decimal)
        Get
            Return _sCD_CANTIDAD_INGRESADA
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_CANTIDAD_INGRESADA, value) Then
                _sCD_CANTIDAD_INGRESADA = value
                OnPropertyChanged("SCD_CANTIDAD_INGRESADA")
            End If
        End Set
    End Property

    Private _sCD_CANTIDAD_INGRESADA As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_DESCUENTO() As Nullable(Of Decimal)
        Get
            Return _sCD_DESCUENTO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_DESCUENTO, value) Then
                _sCD_DESCUENTO = value
                OnPropertyChanged("SCD_DESCUENTO")
            End If
        End Set
    End Property

    Private _sCD_DESCUENTO As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_PRECIO_UNITARIO() As Nullable(Of Decimal)
        Get
            Return _sCD_PRECIO_UNITARIO
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_PRECIO_UNITARIO, value) Then
                _sCD_PRECIO_UNITARIO = value
                OnPropertyChanged("SCD_PRECIO_UNITARIO")
            End If
        End Set
    End Property

    Private _sCD_PRECIO_UNITARIO As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_IGV() As Nullable(Of Decimal)
        Get
            Return _sCD_IGV
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_IGV, value) Then
                _sCD_IGV = value
                OnPropertyChanged("SCD_IGV")
            End If
        End Set
    End Property

    Private _sCD_IGV As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_CONTRAVALOR() As Nullable(Of Decimal)
        Get
            Return _sCD_CONTRAVALOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_sCD_CONTRAVALOR, value) Then
                _sCD_CONTRAVALOR = value
                OnPropertyChanged("SCD_CONTRAVALOR")
            End If
        End Set
    End Property

    Private _sCD_CONTRAVALOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property SCD_OBSERVACIONES() As String
        Get
            Return _sCD_OBSERVACIONES
        End Get
        Set(ByVal value As String)
            If Not Equals(_sCD_OBSERVACIONES, value) Then
                _sCD_OBSERVACIONES = value
                OnPropertyChanged("SCD_OBSERVACIONES")
            End If
        End Set
    End Property

    Private _sCD_OBSERVACIONES As String

    <DataMember()>
    Public Property SCD_INCLUYE_MATERIAL() As Nullable(Of Boolean)
        Get
            Return _sCD_INCLUYE_MATERIAL
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_sCD_INCLUYE_MATERIAL, value) Then
                _sCD_INCLUYE_MATERIAL = value
                OnPropertyChanged("SCD_INCLUYE_MATERIAL")
            End If
        End Set
    End Property

    Private _sCD_INCLUYE_MATERIAL As Nullable(Of Boolean)

    <DataMember()>
    Public Property SCD_PARTE_MATERIAL() As Nullable(Of Boolean)
        Get
            Return _sCD_PARTE_MATERIAL
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_sCD_PARTE_MATERIAL, value) Then
                _sCD_PARTE_MATERIAL = value
                OnPropertyChanged("SCD_PARTE_MATERIAL")
            End If
        End Set
    End Property

    Private _sCD_PARTE_MATERIAL As Nullable(Of Boolean)

    <DataMember()>
    Public Property SCD_ESTADO_COMPRA() As String
        Get
            Return _sCD_ESTADO_COMPRA
        End Get
        Set(ByVal value As String)
            If Not Equals(_sCD_ESTADO_COMPRA, value) Then
                _sCD_ESTADO_COMPRA = value
                OnPropertyChanged("SCD_ESTADO_COMPRA")
            End If
        End Set
    End Property

    Private _sCD_ESTADO_COMPRA As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property SolicitudCompra() As SolicitudCompra
        Get
            Return _solicitudCompra
        End Get
        Set(ByVal value As SolicitudCompra)
            If _solicitudCompra IsNot value Then
                Dim previousValue As SolicitudCompra = _solicitudCompra
                _solicitudCompra = value
                FixupSolicitudCompra(previousValue)
                OnNavigationPropertyChanged("SolicitudCompra")
            End If
        End Set
    End Property

    Private _solicitudCompra As SolicitudCompra


    <DataMember()>
    Public Property Articulos() As Articulos
        Get
            Return _articulos
        End Get
        Set(ByVal value As Articulos)
            If _articulos IsNot value Then
                Dim previousValue As Articulos = _articulos
                _articulos = value
                FixupArticulos(previousValue)
                OnNavigationPropertyChanged("Articulos")
            End If
        End Set
    End Property

    Private _articulos As Articulos


    <DataMember()>
    Public Property OrdenRequerimientoDetalle() As OrdenRequerimientoDetalle
        Get
            Return _ordenRequerimientoDetalle
        End Get
        Set(ByVal value As OrdenRequerimientoDetalle)
            If _ordenRequerimientoDetalle IsNot value Then
                Dim previousValue As OrdenRequerimientoDetalle = _ordenRequerimientoDetalle
                _ordenRequerimientoDetalle = value
                FixupOrdenRequerimientoDetalle(previousValue)
                OnNavigationPropertyChanged("OrdenRequerimientoDetalle")
            End If
        End Set
    End Property

    Private _ordenRequerimientoDetalle As OrdenRequerimientoDetalle


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        SolicitudCompra = Nothing
        Articulos = Nothing
        OrdenRequerimientoDetalle = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupSolicitudCompra(ByVal previousValue As SolicitudCompra, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.SolicitudCompraDetalle.Contains(Me) Then
            previousValue.SolicitudCompraDetalle.Remove(Me)
        End If

        If SolicitudCompra IsNot Nothing Then
            If Not SolicitudCompra.SolicitudCompraDetalle.Contains(Me) Then
                SolicitudCompra.SolicitudCompraDetalle.Add(Me)
            End If

            SOC_ID = SolicitudCompra.SOC_ID
        ElseIf Not skipKeys Then
            SOC_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("SolicitudCompra") AndAlso
                ChangeTracker.OriginalValues("SolicitudCompra") Is SolicitudCompra Then
                ChangeTracker.OriginalValues.Remove("SolicitudCompra")
            Else
                ChangeTracker.RecordOriginalValue("SolicitudCompra", previousValue)
            End If
            If SolicitudCompra IsNot Nothing AndAlso Not SolicitudCompra.ChangeTracker.ChangeTrackingEnabled Then
                SolicitudCompra.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupArticulos(ByVal previousValue As Articulos, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If Articulos IsNot Nothing Then
            ART_ID = Articulos.ART_ID
        ElseIf Not skipKeys Then
            ART_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Articulos") AndAlso
                ChangeTracker.OriginalValues("Articulos") Is Articulos Then
                ChangeTracker.OriginalValues.Remove("Articulos")
            Else
                ChangeTracker.RecordOriginalValue("Articulos", previousValue)
            End If
            If Articulos IsNot Nothing AndAlso Not Articulos.ChangeTracker.ChangeTrackingEnabled Then
                Articulos.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupOrdenRequerimientoDetalle(ByVal previousValue As OrdenRequerimientoDetalle, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If OrdenRequerimientoDetalle IsNot Nothing Then
            ORD_ID = OrdenRequerimientoDetalle.ORD_ID
        ElseIf Not skipKeys Then
            ORD_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("OrdenRequerimientoDetalle") AndAlso
                ChangeTracker.OriginalValues("OrdenRequerimientoDetalle") Is OrdenRequerimientoDetalle Then
                ChangeTracker.OriginalValues.Remove("OrdenRequerimientoDetalle")
            Else
                ChangeTracker.RecordOriginalValue("OrdenRequerimientoDetalle", previousValue)
            End If
            If OrdenRequerimientoDetalle IsNot Nothing AndAlso Not OrdenRequerimientoDetalle.ChangeTracker.ChangeTrackingEnabled Then
                OrdenRequerimientoDetalle.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
