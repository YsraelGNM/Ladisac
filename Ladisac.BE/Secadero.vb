'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(SalidaSecadero))>
<KnownType(GetType(Almacen))>
Partial Public Class Secadero
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared SEC_ID As string = "SEC_ID"
				public shared SEC_DESCRIPCION As string = "SEC_DESCRIPCION"
				public shared ENO_ID_SECADERO As string = "ENO_ID_SECADERO"
				public shared USU_ID As string = "USU_ID"
				public shared SEC_FEC_GRAB As string = "SEC_FEC_GRAB"
				public shared SEC_ESTADO As string = "SEC_ESTADO"
				public shared ALM_ID As string = "ALM_ID"
		    End Structure
	



    <DataMember()>
    Public Property SEC_ID() As Integer
        Get
            Return _sEC_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_sEC_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'SEC_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _sEC_ID = value
                OnPropertyChanged("SEC_ID")
            End If
        End Set
    End Property

    Private _sEC_ID As Integer

    <DataMember()>
    Public Property SEC_DESCRIPCION() As String
        Get
            Return _sEC_DESCRIPCION
        End Get
        Set(ByVal value As String)
            If Not Equals(_sEC_DESCRIPCION, value) Then
                _sEC_DESCRIPCION = value
                OnPropertyChanged("SEC_DESCRIPCION")
            End If
        End Set
    End Property

    Private _sEC_DESCRIPCION As String

    <DataMember()>
    Public Property ENO_ID_SECADERO() As Nullable(Of Integer)
        Get
            Return _eNO_ID_SECADERO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_eNO_ID_SECADERO, value) Then
                _eNO_ID_SECADERO = value
                OnPropertyChanged("ENO_ID_SECADERO")
            End If
        End Set
    End Property

    Private _eNO_ID_SECADERO As Nullable(Of Integer)

    <DataMember()>
    Public Property USU_ID() As String
        Get
            Return _uSU_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_uSU_ID, value) Then
                _uSU_ID = value
                OnPropertyChanged("USU_ID")
            End If
        End Set
    End Property

    Private _uSU_ID As String

    <DataMember()>
    Public Property SEC_FEC_GRAB() As Nullable(Of Date)
        Get
            Return _sEC_FEC_GRAB
        End Get
        Set(ByVal value As Nullable(Of Date))
            If Not Equals(_sEC_FEC_GRAB, value) Then
                _sEC_FEC_GRAB = value
                OnPropertyChanged("SEC_FEC_GRAB")
            End If
        End Set
    End Property

    Private _sEC_FEC_GRAB As Nullable(Of Date)

    <DataMember()>
    Public Property SEC_ESTADO() As Nullable(Of Boolean)
        Get
            Return _sEC_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Boolean))
            If Not Equals(_sEC_ESTADO, value) Then
                _sEC_ESTADO = value
                OnPropertyChanged("SEC_ESTADO")
            End If
        End Set
    End Property

    Private _sEC_ESTADO As Nullable(Of Boolean)

    <DataMember()>
    Public Property ALM_ID() As Nullable(Of Integer)
        Get
            Return _aLM_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_aLM_ID, value) Then
                ChangeTracker.RecordOriginalValue("ALM_ID", _aLM_ID)
                If Not IsDeserializing Then
                    If Almacen IsNot Nothing AndAlso Not Equals(Almacen.ALM_ID, value) Then
                        Almacen = Nothing
                    End If
                End If
                _aLM_ID = value
                OnPropertyChanged("ALM_ID")
            End If
        End Set
    End Property

    Private _aLM_ID As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property SalidaSecadero() As TrackableCollection(Of SalidaSecadero)
        Get
            If _salidaSecadero Is Nothing Then
                _salidaSecadero = New TrackableCollection(Of SalidaSecadero)
                AddHandler _salidaSecadero.CollectionChanged, AddressOf FixupSalidaSecadero
            End If
            Return _salidaSecadero
        End Get
        Set(ByVal value As TrackableCollection(Of SalidaSecadero))
            If Not Object.ReferenceEquals(_salidaSecadero, value) Then
                If ChangeTracker.ChangeTrackingEnabled Then
                    Throw New InvalidOperationException("No se puede establecer el elemento FixupChangeTrackingCollection cuando se ha habilitado ChangeTracking")
                End If
                If _salidaSecadero IsNot Nothing Then
                    RemoveHandler _salidaSecadero.CollectionChanged, AddressOf FixupSalidaSecadero
                End If
                _salidaSecadero = value
                If _salidaSecadero IsNot Nothing Then
                    AddHandler _salidaSecadero.CollectionChanged, AddressOf FixupSalidaSecadero
                End If
                OnNavigationPropertyChanged("SalidaSecadero")
            End If
        End Set
    End Property

    Private _salidaSecadero As TrackableCollection(Of SalidaSecadero)

    <DataMember()>
    Public Property Almacen() As Almacen
        Get
            Return _almacen
        End Get
        Set(ByVal value As Almacen)
            If _almacen IsNot value Then
                Dim previousValue As Almacen = _almacen
                _almacen = value
                FixupAlmacen(previousValue)
                OnNavigationPropertyChanged("Almacen")
            End If
        End Set
    End Property

    Private _almacen As Almacen


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        SalidaSecadero.Clear()
        Almacen = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupAlmacen(ByVal previousValue As Almacen, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.Secadero.Contains(Me) Then
            previousValue.Secadero.Remove(Me)
        End If

        If Almacen IsNot Nothing Then
            If Not Almacen.Secadero.Contains(Me) Then
                Almacen.Secadero.Add(Me)
            End If

            ALM_ID = Almacen.ALM_ID
        ElseIf Not skipKeys Then
            ALM_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Almacen") AndAlso
                ChangeTracker.OriginalValues("Almacen") Is Almacen Then
                ChangeTracker.OriginalValues.Remove("Almacen")
            Else
                ChangeTracker.RecordOriginalValue("Almacen", previousValue)
            End If
            If Almacen IsNot Nothing AndAlso Not Almacen.ChangeTracker.ChangeTrackingEnabled Then
                Almacen.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupSalidaSecadero(ByVal sender As Object, ByVal e As NotifyCollectionChangedEventArgs)
        If IsDeserializing Then
            Return
        End If

        If e.NewItems IsNot Nothing Then
            For Each item As SalidaSecadero In e.NewItems
                item.Secadero = Me
                If ChangeTracker.ChangeTrackingEnabled Then
                    If Not item.ChangeTracker.ChangeTrackingEnabled Then
                        item.StartTracking()
                    End If
                    ChangeTracker.RecordAdditionToCollectionProperties("SalidaSecadero", item)
                End If
            Next
        End If

        If e.OldItems IsNot Nothing Then
            For Each item As SalidaSecadero In e.OldItems
                If ReferenceEquals(item.Secadero, Me) Then
                    item.Secadero = Nothing
                End If
                If ChangeTracker.ChangeTrackingEnabled Then
                    ChangeTracker.RecordRemovalFromCollectionProperties("SalidaSecadero", item)
                End If
            Next
        End If
    End Sub

#End Region
End Class
