'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(FichaInspeccion))>
<KnownType(GetType(ParametroEntidad))>
Partial Public Class FichaInspeccionDetalle
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared FID_ID As string = "FID_ID"
				public shared FIN_ID As string = "FIN_ID"
				public shared PAE_ID As string = "PAE_ID"
				public shared FID_VALOR As string = "FID_VALOR"
				public shared FID_ESTADO As string = "FID_ESTADO"
		    End Structure
	



    <DataMember()>
    Public Property FID_ID() As Integer
        Get
            Return _fID_ID
        End Get
        Set(ByVal value As Integer)
            If Not Equals(_fID_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'FID_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _fID_ID = value
                OnPropertyChanged("FID_ID")
            End If
        End Set
    End Property

    Private _fID_ID As Integer

    <DataMember()>
    Public Property FIN_ID() As Nullable(Of Integer)
        Get
            Return _fIN_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_fIN_ID, value) Then
                ChangeTracker.RecordOriginalValue("FIN_ID", _fIN_ID)
                If Not IsDeserializing Then
                    If FichaInspeccion IsNot Nothing AndAlso Not Equals(FichaInspeccion.FIN_ID, value) Then
                        FichaInspeccion = Nothing
                    End If
                End If
                _fIN_ID = value
                OnPropertyChanged("FIN_ID")
            End If
        End Set
    End Property

    Private _fIN_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property PAE_ID() As Nullable(Of Integer)
        Get
            Return _pAE_ID
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_pAE_ID, value) Then
                ChangeTracker.RecordOriginalValue("PAE_ID", _pAE_ID)
                If Not IsDeserializing Then
                    If ParametroEntidad IsNot Nothing AndAlso Not Equals(ParametroEntidad.PAE_ID, value) Then
                        ParametroEntidad = Nothing
                    End If
                End If
                _pAE_ID = value
                OnPropertyChanged("PAE_ID")
            End If
        End Set
    End Property

    Private _pAE_ID As Nullable(Of Integer)

    <DataMember()>
    Public Property FID_VALOR() As Nullable(Of Decimal)
        Get
            Return _fID_VALOR
        End Get
        Set(ByVal value As Nullable(Of Decimal))
            If Not Equals(_fID_VALOR, value) Then
                _fID_VALOR = value
                OnPropertyChanged("FID_VALOR")
            End If
        End Set
    End Property

    Private _fID_VALOR As Nullable(Of Decimal)

    <DataMember()>
    Public Property FID_ESTADO() As Nullable(Of Integer)
        Get
            Return _fID_ESTADO
        End Get
        Set(ByVal value As Nullable(Of Integer))
            If Not Equals(_fID_ESTADO, value) Then
                _fID_ESTADO = value
                OnPropertyChanged("FID_ESTADO")
            End If
        End Set
    End Property

    Private _fID_ESTADO As Nullable(Of Integer)

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property FichaInspeccion() As FichaInspeccion
        Get
            Return _fichaInspeccion
        End Get
        Set(ByVal value As FichaInspeccion)
            If _fichaInspeccion IsNot value Then
                Dim previousValue As FichaInspeccion = _fichaInspeccion
                _fichaInspeccion = value
                FixupFichaInspeccion(previousValue)
                OnNavigationPropertyChanged("FichaInspeccion")
            End If
        End Set
    End Property

    Private _fichaInspeccion As FichaInspeccion


    <DataMember()>
    Public Property ParametroEntidad() As ParametroEntidad
        Get
            Return _parametroEntidad
        End Get
        Set(ByVal value As ParametroEntidad)
            If _parametroEntidad IsNot value Then
                Dim previousValue As ParametroEntidad = _parametroEntidad
                _parametroEntidad = value
                FixupParametroEntidad(previousValue)
                OnNavigationPropertyChanged("ParametroEntidad")
            End If
        End Set
    End Property

    Private _parametroEntidad As ParametroEntidad


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        FichaInspeccion = Nothing
        ParametroEntidad = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupFichaInspeccion(ByVal previousValue As FichaInspeccion, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.FichaInspeccionDetalle.Contains(Me) Then
            previousValue.FichaInspeccionDetalle.Remove(Me)
        End If

        If FichaInspeccion IsNot Nothing Then
            If Not FichaInspeccion.FichaInspeccionDetalle.Contains(Me) Then
                FichaInspeccion.FichaInspeccionDetalle.Add(Me)
            End If

            FIN_ID = FichaInspeccion.FIN_ID
        ElseIf Not skipKeys Then
            FIN_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("FichaInspeccion") AndAlso
                ChangeTracker.OriginalValues("FichaInspeccion") Is FichaInspeccion Then
                ChangeTracker.OriginalValues.Remove("FichaInspeccion")
            Else
                ChangeTracker.RecordOriginalValue("FichaInspeccion", previousValue)
            End If
            If FichaInspeccion IsNot Nothing AndAlso Not FichaInspeccion.ChangeTracker.ChangeTrackingEnabled Then
                FichaInspeccion.StartTracking()
            End If
        End If
    End Sub

    Private Sub FixupParametroEntidad(ByVal previousValue As ParametroEntidad, Optional ByVal skipKeys As Boolean = False)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.FichaInspeccionDetalle.Contains(Me) Then
            previousValue.FichaInspeccionDetalle.Remove(Me)
        End If

        If ParametroEntidad IsNot Nothing Then
            If Not ParametroEntidad.FichaInspeccionDetalle.Contains(Me) Then
                ParametroEntidad.FichaInspeccionDetalle.Add(Me)
            End If

            PAE_ID = ParametroEntidad.PAE_ID
        ElseIf Not skipKeys Then
            PAE_ID = Nothing
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("ParametroEntidad") AndAlso
                ChangeTracker.OriginalValues("ParametroEntidad") Is ParametroEntidad Then
                ChangeTracker.OriginalValues.Remove("ParametroEntidad")
            Else
                ChangeTracker.RecordOriginalValue("ParametroEntidad", previousValue)
            End If
            If ParametroEntidad IsNot Nothing AndAlso Not ParametroEntidad.ChangeTracker.ChangeTrackingEnabled Then
                ParametroEntidad.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
