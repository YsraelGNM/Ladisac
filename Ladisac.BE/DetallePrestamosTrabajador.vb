'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios en este archivo pueden ocasionar un comportamiento incorrecto y se perderán si
'     el código se vuelve a generar.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Collections.ObjectModel
Imports System.Collections.Specialized
Imports System.ComponentModel
Imports System.Globalization
Imports System.Runtime.Serialization
Imports System.Runtime.CompilerServices

<DataContract(IsReference:=True)>
<KnownType(GetType(Conceptos))>
Partial Public Class DetallePrestamosTrabajador
    Implements IObjectWithChangeTracker
    Implements INotifyPropertyChanged

#Region "Propiedades primitivas"


	<DataContract()> Partial Public Structure PropertyNames
				public shared prt_SeriePres As string = "prt_SeriePres"
				public shared prt_NumeroPres As string = "prt_NumeroPres"
				public shared dpt_ItemPresta As string = "dpt_ItemPresta"
				public shared con_Conceptos_Id As string = "con_Conceptos_Id"
				public shared tic_TipoConcep_Id As string = "tic_TipoConcep_Id"
				public shared dpt_Importe As string = "dpt_Importe"
				public shared dpt_Vencimiento As string = "dpt_Vencimiento"
				public shared Usu_Id As string = "Usu_Id"
				public shared dpt_FecGrab As string = "dpt_FecGrab"
				public shared CCT_ID As string = "CCT_ID"
				public shared TDO_ID As string = "TDO_ID"
				public shared DTD_ID As string = "DTD_ID"
		    End Structure
	



    <DataMember()>
    Public Property prt_SeriePres() As String
        Get
            Return _prt_SeriePres
        End Get
        Set(ByVal value As String)
            If Not Equals(_prt_SeriePres, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prt_SeriePres' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _prt_SeriePres = value
                OnPropertyChanged("prt_SeriePres")
            End If
        End Set
    End Property

    Private _prt_SeriePres As String

    <DataMember()>
    Public Property prt_NumeroPres() As String
        Get
            Return _prt_NumeroPres
        End Get
        Set(ByVal value As String)
            If Not Equals(_prt_NumeroPres, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'prt_NumeroPres' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _prt_NumeroPres = value
                OnPropertyChanged("prt_NumeroPres")
            End If
        End Set
    End Property

    Private _prt_NumeroPres As String

    <DataMember()>
    Public Property dpt_ItemPresta() As String
        Get
            Return _dpt_ItemPresta
        End Get
        Set(ByVal value As String)
            If Not Equals(_dpt_ItemPresta, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'dpt_ItemPresta' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dpt_ItemPresta = value
                OnPropertyChanged("dpt_ItemPresta")
            End If
        End Set
    End Property

    Private _dpt_ItemPresta As String

    <DataMember()>
    Public Property con_Conceptos_Id() As String
        Get
            Return _con_Conceptos_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_con_Conceptos_Id, value) Then
                ChangeTracker.RecordOriginalValue("con_Conceptos_Id", _con_Conceptos_Id)
                If Not IsDeserializing Then
                    If Conceptos IsNot Nothing AndAlso Not Equals(Conceptos.con_Conceptos_Id, value) Then
                        Conceptos = Nothing
                    End If
                End If
                _con_Conceptos_Id = value
                OnPropertyChanged("con_Conceptos_Id")
            End If
        End Set
    End Property

    Private _con_Conceptos_Id As String

    <DataMember()>
    Public Property tic_TipoConcep_Id() As String
        Get
            Return _tic_TipoConcep_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_tic_TipoConcep_Id, value) Then
                ChangeTracker.RecordOriginalValue("tic_TipoConcep_Id", _tic_TipoConcep_Id)
                If Not IsDeserializing Then
                    If Conceptos IsNot Nothing AndAlso Not Equals(Conceptos.tic_TipoConcep_Id, value) Then
                        Conceptos = Nothing
                    End If
                End If
                _tic_TipoConcep_Id = value
                OnPropertyChanged("tic_TipoConcep_Id")
            End If
        End Set
    End Property

    Private _tic_TipoConcep_Id As String

    <DataMember()>
    Public Property dpt_Importe() As Decimal
        Get
            Return _dpt_Importe
        End Get
        Set(ByVal value As Decimal)
            If Not Equals(_dpt_Importe, value) Then
                _dpt_Importe = value
                OnPropertyChanged("dpt_Importe")
            End If
        End Set
    End Property

    Private _dpt_Importe As Decimal

    <DataMember()>
    Public Property dpt_Vencimiento() As Date
        Get
            Return _dpt_Vencimiento
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dpt_Vencimiento, value) Then
                _dpt_Vencimiento = value
                OnPropertyChanged("dpt_Vencimiento")
            End If
        End Set
    End Property

    Private _dpt_Vencimiento As Date

    <DataMember()>
    Public Property Usu_Id() As String
        Get
            Return _usu_Id
        End Get
        Set(ByVal value As String)
            If Not Equals(_usu_Id, value) Then
                _usu_Id = value
                OnPropertyChanged("Usu_Id")
            End If
        End Set
    End Property

    Private _usu_Id As String

    <DataMember()>
    Public Property dpt_FecGrab() As Date
        Get
            Return _dpt_FecGrab
        End Get
        Set(ByVal value As Date)
            If Not Equals(_dpt_FecGrab, value) Then
                _dpt_FecGrab = value
                OnPropertyChanged("dpt_FecGrab")
            End If
        End Set
    End Property

    Private _dpt_FecGrab As Date

    <DataMember()>
    Public Property CCT_ID() As String
        Get
            Return _cCT_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_cCT_ID, value) Then
                _cCT_ID = value
                OnPropertyChanged("CCT_ID")
            End If
        End Set
    End Property

    Private _cCT_ID As String

    <DataMember()>
    Public Property TDO_ID() As String
        Get
            Return _tDO_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_tDO_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'TDO_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _tDO_ID = value
                OnPropertyChanged("TDO_ID")
            End If
        End Set
    End Property

    Private _tDO_ID As String

    <DataMember()>
    Public Property DTD_ID() As String
        Get
            Return _dTD_ID
        End Get
        Set(ByVal value As String)
            If Not Equals(_dTD_ID, value) Then
                If ChangeTracker.ChangeTrackingEnabled AndAlso ChangeTracker.State <> ObjectState.Added Then
                    Throw New InvalidOperationException("La propiedad 'DTD_ID' forma parte de la clave del objeto y no se puede modificar. Solo se pueden realizar cambios en las propiedades de clave cuando no se realiza un seguimiento del objeto o su estado es Agregado.")
                End If
                _dTD_ID = value
                OnPropertyChanged("DTD_ID")
            End If
        End Set
    End Property

    Private _dTD_ID As String

#End Region
#Region "Propiedades de navegación"

    <DataMember()>
    Public Property Conceptos() As Conceptos
        Get
            Return _conceptos
        End Get
        Set(ByVal value As Conceptos)
            If _conceptos IsNot value Then
                Dim previousValue As Conceptos = _conceptos
                _conceptos = value
                FixupConceptos(previousValue)
                OnNavigationPropertyChanged("Conceptos")
            End If
        End Set
    End Property

    Private _conceptos As Conceptos


#End Region
#Region "ChangeTracking"

    Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
        If ChangeTracker.State <> ObjectState.Added AndAlso ChangeTracker.State <> ObjectState.Deleted Then
            ChangeTracker.State = ObjectState.Modified
        End If
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Protected Overridable Sub OnNavigationPropertyChanged(ByVal propertyName As String)
        RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
    End Sub

    Private Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
    Private _changeTracker As ObjectChangeTracker

    <DataMember()>
    Public Property ChangeTracker() As ObjectChangeTracker Implements IObjectWithChangeTracker.ChangeTracker
        Get
            If _changeTracker Is Nothing Then
                _changeTracker = New ObjectChangeTracker()
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            Return _changeTracker
        End Get
        Set(ByVal value As ObjectChangeTracker)
            If _changeTracker IsNot Nothing Then
                RemoveHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
            _changeTracker = value
            If _changeTracker IsNot Nothing Then
                AddHandler _changeTracker.ObjectStateChanging, AddressOf HandleObjectStateChanging
            End If
        End Set
    End Property

    Private Sub HandleObjectStateChanging(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.ClearNavigationProperties()
        End If
    End Sub

    ' Este tipo de entidad es el extremo dependiente en al menos una asociación que realiza eliminaciones en cascada.
    ' Este controlador de eventos procesará notificaciones que tienen lugar cuando se elimina el extremo principal.
    Friend Sub HandleCascadeDelete(ByVal sender As Object, ByVal e As ObjectStateChangingEventArgs)
        If e.NewState = ObjectState.Deleted Then
            Me.MarkAsDeleted()
        End If
    End Sub

    Private _isDeserializing As Boolean
    Protected Property IsDeserializing() As Boolean
        Get
            Return _isDeserializing
        End Get
        Private Set(ByVal value As Boolean)
            _isDeserializing = value
        End Set
    End Property

    <OnDeserializing()>
    Public Sub OnDeserializingMethod(ByVal context As StreamingContext)
        IsDeserializing = True
    End Sub

    <OnDeserialized()>
    Public Sub OnDeserializedMethod(ByVal context As StreamingContext)
        IsDeserializing = False
        ChangeTracker.ChangeTrackingEnabled = True
    End Sub

    Protected Overridable Sub ClearNavigationProperties()
        Conceptos = Nothing
    End Sub

#End Region
#Region "Corrección de asociación"

    Private Sub FixupConceptos(ByVal previousValue As Conceptos)
        If IsDeserializing Then
            Return
        End If

        If previousValue IsNot Nothing AndAlso previousValue.DetallePrestamosTrabajador.Contains(Me) Then
            previousValue.DetallePrestamosTrabajador.Remove(Me)
        End If

        If Conceptos IsNot Nothing Then
            If Not Conceptos.DetallePrestamosTrabajador.Contains(Me) Then
                Conceptos.DetallePrestamosTrabajador.Add(Me)
            End If

            con_Conceptos_Id = Conceptos.con_Conceptos_Id
            tic_TipoConcep_Id = Conceptos.tic_TipoConcep_Id
        End If
        If ChangeTracker.ChangeTrackingEnabled Then
            If ChangeTracker.OriginalValues.ContainsKey("Conceptos") AndAlso
                ChangeTracker.OriginalValues("Conceptos") Is Conceptos Then
                ChangeTracker.OriginalValues.Remove("Conceptos")
            Else
                ChangeTracker.RecordOriginalValue("Conceptos", previousValue)
            End If
            If Conceptos IsNot Nothing AndAlso Not Conceptos.ChangeTracker.ChangeTrackingEnabled Then
                Conceptos.StartTracking()
            End If
        End If
    End Sub

#End Region
End Class
